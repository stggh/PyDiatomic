%!PS-Adobe-3.1
%ADO_DSC_Encoding: MacOS Roman
%%Title: MP111-673-S2-Xing.pdf
%%Creator: Adobe Acrobat 9.5.3
%%For: stg121
%%CreationDate: 16/03/16, 14:40:45
%%BoundingBox: 11 43 584 799
%%HiResBoundingBox: 12 43.5973 583.0801 798.2026
%%CropBox: 12 43.5973 583.0801 798.2026
%%LanguageLevel: 3
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%DocumentNeededFeatures: (atend)
%%DocumentSuppliedFeatures: (atend)
%%DocumentData: Clean7Bit
%%PageOrder: Ascend
%%TargetDevice: (hp LaserJet 2420) (3010.107) 0
%%Pages: (atend)
%%DocumentProcessColors: (atend)
%%DocumentCustomColors: (atend)
%%EndComments
%%BeginDefaults
%%ViewingOrientation: 0 1 -1 0
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq{pop/AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq{pop}{setblackgeneration}ifelse
	dup null eq{pop/AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq{pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$None SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
3 3010 Adobe_AGM_Core/ds gx
false Adobe_AGM_Core/begin_feature gx false {
%%BeginFeature: *PageSize A4

    <</DeferredMediaSelection true /PageSize [595 842] /ImagingBBox null /MediaClass null >> setpagedevice
%%EndFeature
} Adobe_AGM_Core/end_feature gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
[/NamespacePush pdfmark_5
[/_objdef {Doc_Metadata} /type /stream /OBJ pdfmark_5
[{Doc_Metadata} 1465 (% &end XMP packet& %) ReadBypdfmark_5_string
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 4.2.1-c043 52.372728, 2009/01/18-13:18:53        ">
 <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <rdf:Description rdf:about=""
    xmlns:dc="http://purl.org/dc/elements/1.1/"
    xmlns:prism="http://prismstandard.org/namespaces/basic/2.0/"
    xmlns:crossmark="http://crossref.org/crossmark/1.0/"
    xmlns:pdfx="http://ns.adobe.com/pdfx/1.3/"
    xmlns:xmp="http://ns.adobe.com/xap/1.0/"
    xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
   dc:identifier="doi:10.1080/00268976.2012.741721"
   prism:doi="10.1080/00268976.2012.741721"
   prism:url="http://dx.doi.org/10.1080/00268976.2012.741721"
   crossmark:MajorVersionDate="2008-08-14"
   crossmark:CrossmarkDomainExclusive="true"
   crossmark:DOI="10.1080/00268976.2012.741721"
   pdfx:doi="10.1080/00268976.2012.741721"
   pdfx:CrossmarkMajorVersionDate="2008-08-14"
   pdfx:CrossmarkDomainExclusive="false"
   xmp:CreateDate="2013-04-09T21:56:15+05:30"
   xmp:CreatorTool="Adobe InDesign CS4 (6.0)"
   xmp:ModifyDate="2014-08-13T18:00:55-07:00"
   pdf:Producer="Adobe PDF Library 9.0">
   <crossmark:CrossMarkDomains>
    <rdf:Seq>
     <rdf:li>www.tandfonline.com</rdf:li>
    </rdf:Seq>
   </crossmark:CrossMarkDomains>
   <pdfx:CrossMarkDomains>
    <rdf:Seq>
     <rdf:li>www.tandfonline.com</rdf:li>
    </rdf:Seq>
   </pdfx:CrossMarkDomains>
  </rdf:Description>
 </rdf:RDF>
</x:xmpmeta>
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
<?xpacket end='w'?>


% &end XMP packet& %

[{Doc_Metadata} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT pdfmark_5
[{Catalog} {Doc_Metadata} /Metadata pdfmark_5
[/NamespacePop pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 11 1
%%EndPageComments
%%BeginPageSetup
Adobe_AGM_Utils begin
[
[/Label (11)]
[/TrimBox [11.999969482421 43.597328186035 583.080078125 798.20263671875]]
[/BleedBox [11.999969482421 43.597328186035 583.080078125 798.20263671875]]
[/ArtBox [0 0 595 842 ]]
]xpdfm
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%%EndPageSetup
1 -1 scale 0 currentpagedevice/PageSize get 1  get neg translate
pgsv
[0 -1 1 0 0 842 ]ct
gsave
np
gsave
43.5973 12 mo
43.5973 583.08 li
798.203 583.08 li
798.203 12 li
cp
clp
[9.39839 0 0 9.39839 -1073.96 -5036.47 ]ct
true sop
/0 
[/DeviceCMYK] /CSA add_res
0 0 0 1 nzopmsc
true set_gvm
%ADOBeginSubsetFont: EWUAAA+TimesNewRomanPSMT Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2016 Adobe System Incorporated. All rights reserved.
12 dict dup begin
/FontType 1 def
/FontName /EWUAAA+TimesNewRomanPSMT def
/FontInfo 5 dict dup begin
/ItalicAngle 0 def
/FSType 8 def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 32 /space put
dup 46 /period put
dup 50 /two put
dup 54 /six put
dup 56 /eight put
dup 97 /a put
dup 101 /e put
dup 108 /l put
dup 116 /t put
def
/FontBBox {-568 -307 2000 1007} def
end
systemdict begin
dup /Private
7 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [0 0] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
10 dict dup begin
/.notdef <1C60D8A8C9B6FF86FBD66B095379F45880CA28D0F0C4629F99B72E
FEDBB222483BD74F8B> |-
/space <1C60D8A8C9B8707C25> |-
/period <1C60D8A8C9B8707CC95A9B5DFDE3A4AF8C8BB7D0C82C30C322ED949
85BC6C2F162CD480F8280AD954FE8DC511B40B423DB4A6012D9C419E4DF4F375
C6ADD098717CA70F621> |-
/two <1C60D8A8C9B7A73DB6F198797B24E7DF20E340C763AB9A17095FFDDA6B
4B0E4D4AC4BE83AF302018AACAF29AB5FCEB98A93FCCD2C9A968B7CB1B433E25
003CA8A63287F6BD1729C8188A209A7171C9BFB11D2FACEF2FADF63141D976A0
F90EDDE709834FFBF963952A5213F00F39F098C30D0F91D40A57CAEF920CE11E
C41D90433CE0F55F0A42A96AF852FD50FA> |-
/six <1C60D8A8C9B7A73DB682174C160AB8115D90A4524BD5B352C23110F23E
E4E20266716093AE0643A076F6C57BA527F49BB819243E28C4CA7F711F41FA01
318856C15674E51D546E83D25FE9DB7A4B9EDFDDE57E488CC507C2304526D6E8
0E07D1EEFCA86373B2F664DD3DA4646061C700F112AB44ED3896FA596FE81443
6AD1F1DC5FEDB207A575A17735F66E79BF0D0E423C92F1E9255D38F15B49459F
3693E95DCE92EBF25C243713EDA9138A49C42AA83683249878EEA825672AC6D9
9C32B9109B3D5797A7> |-
/eight <1C60D8A8C9B7A73DAB2BA6B835CAFB4C9A41096F555C470FE6294A70
7AE711C017C95446B200870C2B6A47FB931BCEBEB5BBC6B53605850C75701306
FD83F9DC906687C2B3A2C9C0DB9DB68E95D3478DEA01153491C8534F5AD89998
0F04C195BFB522EDEF282420AA1F12E08397ECA941D5934294BD451B3952E622
9D3E7987DD36FC8E43559904E0205D3416EDD1402AB05184D2018B2C7B816330
FD0C2740A24C74F80E34F93317BBB1D6B8C4D916C15B7FF1D533D7762324A101
7022A27246D93B9768262BFCC673CAD6781894C98679A5889F9338F377D1995A
EDF5695FBA7A65628522691535557B2045419DD63F87D7A64B6A962B> |-
/a <1C60D8A8C9B77FE2CEA139CB15A16492F485162FE605BA10F460B6DC550D
EC7BA0BCA1B89C8429260417FE96BA758C22F6762386C9F1CAF53456C89D4C6B
177AA810FBB608A57F053C4DA17FD8A122DD63CD2EE0563B0FFA48FEF5CBDB33
3E4EF010579993E238020BE59CA5D3F31F329BD506C436A3A2AAAB6CBD385FDB
0E5188BC3D34A31214C941C253FAF1F818F84A3F73340CA7F3B7A85C87022E70
BF3FF56918287082AAA1D7B6CDE998BE3D8663592D3F0DEFC69D87A351A29895
DE83B0D7478C3C01D85F944C563EFCF85986470E4B8EDEEDC025A0FB3217B737
B99EB7B6E2243F66B907475D1C465D1D07EDFEFC5123FE5A4D48A8B15BE3272E
F1EF1464C3F0D45D7CBB8749AF571E09> |-
/e <1C60D8A8C9B77FE2C19119FE019B929F076F8319E8913467AECA41BE2BEA
D3EC175346E3F888D3AD76D215AD69034A954DFD661ECBEA3B145468480B6A15
F5C865D2083DC0B04744AA76DE4CC9E0C9DBDCC2C59DAA00F28A6A47092C7FFA
0397DC47C5CBBA69AD805D3DD20D56411E92B0DE9E3F19C2FDEE1FA501318984
A59E1CFFFD06EA629758085868D3F5F7204292> |-
/l <1C60D8A8C9B854D0F40B290C0C99C039EA88FDD293C1FEAB15D2F6B8C430
4B80428A9C9B5571B0EE47CC29A6D67DEE51ABBBE57F6DDF0C02037EE8B6828D
244FB880634A92D947174D08130E6E2CF978B5067AA82A4CABC55E600FCE5527
D6441CE02F5A28D63A618F> |-
/t <1C60D8A8C9B854D0F414EAB29549463C152A8395E080F8A65050DED29448
713A9991EC80B85D2E40BC855D0C9C1C8F48B9F54A9F2AF77E5AE0CF2D93DC43
DDEECA57457D57C32A4E7F92D72E19B411BD6A8FD776B503B1ED0E4E775E798B
36CAB4543E392F481E83DAF858D3B1A895E3CC06AB3573C04543D9> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
reset_gvm
/NQHFPH+TimesNewRomanPSMT /EWUAAA+TimesNewRomanPSMT findfont ct_VMDictPut
/NQHFPH+TimesNewRomanPSMT*1 
[32{/.notdef}rp /space 13{/.notdef}rp /period 3{/.notdef}rp /two 3{/.notdef}rp /six 
/.notdef /eight 40{/.notdef}rp /a 3{/.notdef}rp /e 6{/.notdef}rp /l 
7{/.notdef}rp /t 139{/.notdef}rp]
NQHFPH+TimesNewRomanPSMT nf
NQHFPH+TimesNewRomanPSMT*1 [10 0 0 -10 0 0 ]msf
59.04 54.4476 mo
(682)
[5.2 5.2 0 ]xsh
74.64 54.4476 mo
( )sh
true set_gvm
%ADOBeginSubsetFont: FZHAAA+TimesNewRomanPS-ItalicMT Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2016 Adobe System Incorporated. All rights reserved.
12 dict dup begin
/FontType 1 def
/FontName /FZHAAA+TimesNewRomanPS-ItalicMT def
/FontInfo 5 dict dup begin
/ItalicAngle 0 def
/FSType 8 def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 32 /space put
dup 46 /period put
dup 87 /W put
dup 88 /X put
dup 103 /g put
dup 105 /i put
dup 110 /n put
def
/FontBBox {-498 -307 1353 1023} def
end
systemdict begin
dup /Private
7 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [0 0] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
8 dict dup begin
/.notdef <1C60D8A8C9B6FF86FBD1638113E4B58C0B5F39100186722805B704
AA3988900AFCFF05DD> |-
/space <1C60D8A8C9B8707C25> |-
/period <1C60D8A8C9B8707C905F20AC65B0724ABD4661613FE1888BA57C3AB
275B36362EB4C0B6CF31618BBDC4ED0090833127FB776362E96CC63F273D95FD
A0687B0A248B64B3ED1> |-
/W <1C60D8A8C9B6B41CBB5D88F76FFD377C6BBD944959F8150657B5E19C4765
33521AC64F65568707B8D3E6AA3C75A0F421942A5C8411F213DE57C5C485B48B
63EE0C63DC004816A753D065F62AD014B7054B00ABF32B75D361BD2CD6A7353C
DBA8628E73396797196C1295AB0B3933928C432D098AB617D75C63C411A39BE2
20350777B4BD61AB478468B6DF747CF1D5AC26E6CD54AE7FC63AF26C84911A1E
0445F8C7788E5D5022DBC8D967E8681A101E359E108D6CC32A3A1EB54401F299
5420BF32A5D89ECFA3A3E86321738E6E8CF7440176A55CD17258> |-
/X <1C60D8A8C9B7D8BE191C1C0F62FA691904A44B116336C9FB6E58589A0829
BC275B144479988B8464F056F41919A825CDF4E1781F09DD498C68EC539819D8
A640E525DE57B03123DF2DFCEEBC0EDF15AD44258565A6DA9402196FE1D8A52E
B592B8BB9263BCF720D51FE9C65284F0350DBD024884B7CE65563AD80D966090
0E1DE2ED2F72236525F24DBA0F9820678CA4F00C9235473601AC5592356CED20
2910196004FDBABA340CDA328534C270345CFEA704C3A2256D5907B9F12305DF
37063F680F92DEAAE49193D310C0659C20AC533F24587F7A831373D91597008C
6EE08321F21F39C8F368E543A45B929B8DE6E8A15D0A4FFC131C4552A3E568DC
B656C3> |-
/g <1C60D8A8C9B7A73DB6A115BACE7F487489BC503E16B9751BF18C6D7E42E0
6D2B7B1F089430E910A6253B6313C5EA899502D0D121C470848438F2B8A71B5D
102A13A82BD9E44627438E3D68944BDD10ECDC0CB5CF4D8C3CE72AE1E4BFF19C
4AD2BBC40F4E759C4D3469F3463BC36A69DB81E986C6811A83D2812B0E9989EE
680E8FEF508D5F307F1ADDA3FE5EB69147BD10417CE8BE6F7177827A708CCE4A
28BC62912C8577C9FCC2C284820C0D4D78BAE839F58F949E2DCA0357FDD18F3E
FEE894B48915C73CE679A1EBF63CDDD4819A9767EB909F9DC12CA2F1D6CF19CE
DDE14B260F16CAB8A1EE3C950BEF869CBEC21279DD1ECA7716492A81BD8B8D06
866B8145EA1E6F3754CEA3866CFB87B96A4D9E3A3656624F81275C91FDF7BA93
5E72F2A99C4EB25B2932A91C38CB78223D5AF70EC16B0EE27DA71AB9D0143E2B
2353D449A80518254D9FD55CE939B6FD0F1324A9AB14FB43BC87B748F7C154DE
3E1DD70C3E7F> |-
/i <1C60D8A8C9B854D0F4620EF8AB3A43726CA9F1D5CA3F0AC21C46156AA7EA
FD30B421C67072AD9E9673A39A0C73C611BF2D30694524FB9362DF4B7BF42BD4
03E13FE93BE1CC4B973BBB2F8A1766424F865950A3B4E0C2909B014DAC40D6C3
1A5A624961F141A00D5EA650DA557D976995CE1AB37642609DB19511A8C6A021
6D711E915D0A16129E261DB540D787FC5DFEB3FE9BF504AACF3812EF9A098716
4BC0CA8AED8AA0620C2C50ECD33D7A5F1286537664219BFD394BB743A505> |-
/n <1C60D8A8C9B7A73DF087C158A303AE922A1CFBE99458C02E528DF85BC641
2E6FDD19DEE624C52F34F700473C3AF58CFD622B892B54F8D6362CC51D3848E5
F8B6B32B7B11E5E94464027CCA3CF1614C8F48813802B308AF8EC8766137EB89
CD5DD757628F33FCEA75D425A44D9BACEE2228E64D06D107FD7CF2CD26322E84
A7ED288FE0F79BC1C309E227374927714BC56EB962BF48D51F35D6762D6E3752
739DD5CCAA41E9D5E43DD7EF5CD51215167BF87390988E3AF0B364F3ACEB0FB5
C2394968F3DBA5DCC32E43963EC56DCDE85C8CB04CD0FA96CC48CFDB5153D23F
36F9AB24> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
reset_gvm
/NQHFPI+TimesNewRomanPS-ItalicMT /FZHAAA+TimesNewRomanPS-ItalicMT findfont ct_VMDictPut
/NQHFPI+TimesNewRomanPS-ItalicMT*1 
[32{/.notdef}rp /space 13{/.notdef}rp /period 40{/.notdef}rp /W /X 14{/.notdef}rp 
/g /.notdef /i 4{/.notdef}rp /n 145{/.notdef}rp]
NQHFPI+TimesNewRomanPS-ItalicMT nf
NQHFPI+TimesNewRomanPS-ItalicMT*1 [10 0 0 -10 0 0 ]msf
276.124 54.4476 mo
(W. Xing)
[7.60992 2.70001 2.69998 6.30994 2.97998 5.20001 0 ]xsh
NQHFPH+TimesNewRomanPSMT*1 [10 0 0 -10 0 0 ]msf
308.823 54.4476 mo
( et al.)
[2.70001 4.63998 2.98001 2.69998 4.64001 2.98001 0 ]xsh
false sop
0 0 0 1 cmyk
true set_gvm
%ADOBeginSubsetFont: XYEBAA+AdvTimes Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2016 Adobe System Incorporated. All rights reserved.
12 dict dup begin
/FontType 1 def
/FontName /XYEBAA+AdvTimes def
/FontInfo 6 dict dup begin
/ItalicAngle 0 def
/BaseFontName (AdvTimes) def
/WasEmbedded true def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 37 /percent put
dup 39 /quoteright put
dup 40 /parenleft put
dup 41 /parenright put
dup 44 /comma put
dup 45 /hyphen put
dup 46 /period put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 55 /seven put
dup 56 /eight put
dup 57 /nine put
dup 65 /A put
dup 66 /B put
dup 73 /I put
dup 78 /N put
dup 79 /O put
dup 82 /R put
dup 83 /S put
dup 84 /T put
dup 87 /W put
dup 91 /bracketleft put
dup 93 /bracketright put
dup 96 /quoteleft put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 113 /q put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 120 /x put
dup 121 /y put
dup 177 /endash put
def
/FontBBox {-217 -212 1005 766} def
end
systemdict begin
dup /Private
7 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [0 0] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
55 dict dup begin
/percent <1C60D8A8C9B5EE3102F01B26F6909390D9D1BA2E0FCB0A3A972631
0D827B95ECF791589B08692D9CF61ECC08D6E7AAC029959002F9BF5B3D8A8FB4
4626F780ADF42BD96A8DD8A47877C6D311D9F155509C43A3B16A3F189AD376D5
1F2009B931FF1A2FEF0A61901D997AFF84EE9913730C3013080480BC2E971D1D
84759F505A788C061FF4B47D5040E820D09EC9E9B2EA0162EB726086AA4DDBE4
5D684118F9E53FDC41418E4976B5A577BDAAB2843D7171983C63DEC439276655
DB98947E93BF3624D9BB174B657553017634C69702C6A909F9C538F89530CB59
B937ADA59F6F010D149DA32E177E064E06ED57424DA4C9C1D3107FB6DB7F75E4
ACB15281CB22705DF7A65E7A3289B6233D4EC38849D2F32A646A26A31198B4A0
1D926BE1040B062774A6F72057A1C06178FD28F386BA244B1658EBEF93A6D9DF
696675A831D3617CD61183ADB5AFBAECDE660BAC96EC76B529F99DEFD855FD4C
2B936C2656166F5762F0B1165F6D03D5E8D070A7510848CDCD678FE1AED814F7
1DF6DB69AC8E1034A936A7A101A3427FDB5D8C3ED61F725C9B99975AF2C032B6
D90764EA3DE0A756C3F7B140CDC6E621FA4A7A67AD6D22B3686E048B22FB5453
6C8A9413BB87DBA5494F74C18B9605A16B0094DADD4F02D9E9795438A0088ECA
F3172165D5A8A19DAFB502E865D39D2F4F3AB80EE4BF26B4238D7FD36D05D5E5
52BFB44F9BF898CCEA2CAB0538D0BDAB9FBC38321B299246FCDB2AE63E858405
A50ED8884ED48C778F17EAA1A2FCA61FD507F0E3CC32B1C3C9A5F6B196098719
39B8A295185E8F571F9EF6AE79219C02E7BF455E5A99611BB3A11BCBC46A49E2
F1BB814AD132479E27139AABC8C1245C85BEE87EF97DAD4A43B2682C6BFC4F33
33256EC71F3503C54A32F3ACBB96705CC343592FF148FC2A5BF5CB89E0339686
A6E32F10AD98CAE761797D444AE02EC20C0C777A99B6DB67EB59615121E51BE7
6A3527E27A7279A2EC4D478ADA47F0EA1B24BFCAF0DAC233309DAE077771091F
EF4E8B3B6DFFE8F5268802CB44ED9ADEEEC616B33C3FB742685E5D787E88085A
35D0D112F6F850D94D7247DFB91EFCCF86DAEA23C669CBF962A998FF870C8190
CA57E07E2FD311F912D8227B4A552732DE94182A> |-
/quoteright <1C60D8A8C9B85C5C869628FDBD68026658674F1189A86071E14
C67011BCC1955B6FCED3ED9D4D410ED36A713FABBDB939F1FE2C72B33444648A
EC3415D9D760391D77B2A98B3533526FF83AF9ED757D3BABDB83EF45FD32D4ED
4D52F87DDDC20D4C35A7204063528D68BCC9F9B2F706386E4902A6A365D6734A
68C547943E73A66B625CE209BEA3D8F4815A7BB644A775FDF83E2A0FB24A894F
8891FE2260237BA5239F1188947C64A20C876DA17E17A750A3DD049166A30149
4E3D03A741D2C9BCE184D960029505F28EDB47746567DBD2FC46979D4BDF58FA
4> |-
/parenleft <1C60D8A8C9B81F2C3AF5E5F7BFD3237818DC30C9C5AB8BD3529B
0A8626EA0551355390E62359FF74B8A523C685E5FBB9DA6B94107CAAF903FFAB
BB809ECC703B7D798DF6C4E18966A12A9512BD096E11E12651B30C1574750AF2
823C72B1C762E1BF98ACC28B49B5E1F635A97E2A18F5DCF03A59189094911244
BE82F2ACDB56E9DB8CAA17191FE396BBAAAE010FF012007F3EF815DD224D0155
ACE7D8039FAFB9A73D22C841E2113B3A496FFC965DAEAC6B6398AC15740E5B55
5F29C2EF23FC7E0D8CA3C3D099EDAF9FB5A0F7C6AE1BEF7DBD84E5A735182283
B2C94FF992A6940F97BFFB4B94595878CF03EEBD09BA14E3691D21462430AC93
D6CA3E8A04D1C64E7B5511173A039B2E30EB34E2C5EA9E70C4BDE5A61B3ED288
98A44673965D44FE76CD193ABDAD2BDB> |-
/parenright <1C60D8A8C9B81F2C2EF76979528255C9B0B35F39F8E554211C4
499D94A3BBE0FAC5577B4E8081E028BD10C689E73352980DD71E392E89DFB5B5
B14126E489D9DF4CEA5CC50122C0AAFBC362546389A73D8A975A5F4408F6E9C7
C12C3BBB630D94044AE23670277CCE03A5D54BDBAD249E3C42668842F5626059
2EC08B4FCD2F28DBC19A6EAE73615FE528045EBDA948CF9FF0619F7BB6F02766
D16DE6D2435A0180C1D603AD7E2C8AE8A6D52AC8AD675961CC07595A979771AC
67883DE6AFEC68EE6671013B2D2F5CA6C5EE5CD0B49AF98459EA948CC96D7736
23A35D30003DCD88C6302AF21115A30F9181EFC4AD3ABEA7A8BBE96AEBB847BE
4DE7F3B772F9F2CA5C44D0103D54AAEAE0096D1705C862930AF24D8CAFE5CA05
B27D0AF73A5CAB0144FCCF2B36532A859786025056D9511> |-
/comma <1C60D8A8C9B85C5C9CE28572AB8975C82AECD47F263AFAF88BA1D199
028EF386CB777518292ED04E0A2312DA4C52CE9A47D88F9C82BC4FB915E52879
E07B6E2545DE0F31B39031DD795A0B6CB7BDB39D3E73B56EB66C6DCDE52B6F64
E5F4A4E4F5C6F02A82976294C4B8C4B275685FF85A7F4F72F7D1B2EA3CB2935D
1A839CC9640F7E9B0A555337DFB86FC2CCE665CA1A4B61973620DB827FF0AC5E
F86DE8F2D2329E1273E55E1DD3B51F0881884AB615E4B9E0101F4EE96ACE9C93
D393A97812FDF0D841D152773542945A4DA01CC3D7EF7920B15D92A9EDBBA1E3
8629A877030705A276AA0B118430E5> |-
/hyphen <1C60D8A8C9B81F2C3A0927DB905557AF5C704E9C7C8C79> |-
/period <1C60D8A8C9B85C5CACDFDE3C0476FFFF34F2C12429E6998FD74498B
2CC83BB6FA74C842520BD03554A801609DACC985DC0A9D3AB27563F7330B7897
3DACF81C870A97085585505B058B81C125CEB6C907EA35A895BDDB815CF03BAC
BF7D2E472067B5E2FAD118AAB3AE8FE0C8F79DC9DDCB21E93F2CA951543C0585
A> |-
/zero <1C60D8A8C9B7A73DB915215F14A7544AB4131F99CC24C0E357F0A3D43
2436FE6E58FE70AC779997CAC9CE4D47F0A987C429FEC7AFBD258ACDCC245468
46232C120207220392B46CEE0EC141D8C1039A4DE12270FC41C44CA52FD57972
5862BF90C16E43B3ACBF6A1A72333FFC08E09DAEBCB8287F2E8948CEF30E9CCC
CAA05D9BA9EE14111A27DA6A180F3F3569E422BCA1412F1146CB1FCF447424C6
5476ADDB89A8CEEA6FE9173F7DE543B290C42806CD01D1CF17D002070D57964F
28D1F89E9D83A3E52986218B42214C1F2F83C75C6A8580353256AEAB2AA4C86F
7885175C925D0A1A6570B1D6F0EE2D2245AFCA32C3F35224D98D597C8B54B1E8
6728CF0F24D2B096E2E781DDFE605A6FBEA3CA6EF7113D9028968BEB83867817
7072C155777D7BF83355E8439ED8424E4159867093B371FA161C229DE8DAB8F4
3E38CE38144E35416A1592166AFC88F5F4156632B86B6437880E792AA30A2DC5
012F8BB5BD18C6223DD46CD3B1853241F2312B95A1938B563785D445D9282E6C
6BB372563D244FE13AFA6484C4030A55B9BCA39BFDA102AD86626BE7686DECB2
A9CCE0AF40A149BAB8D0BB6F62FA65F38CC522315E6831CBCAA424F3B9EE7EDF
EA0A726AC880172F0B914F525D549C389313530960BCE42895AF132C1AE2D37B
3B29265481D076B47C58756150C493C6BACE17FE7838920715A4D6DAAB74D1AC
54E43B07F44B7CB5A1A620E9CB35C2DA3530F45AC2173EAB04631E08D023C89D
C41ABE14CFC956F3306562477C80669C8332F30927DD0F23BAF98C4E71E119B0
3090E860D716C> |-
/one <1C60D8A8C9B7A73DB9368C47113AD1C0BBC14CF8D10D7338A74426A664
92C693D6F9397017E5C7DA49136E9F99011AA4575FF59AD59E304EBE4E9DFCF9
FB584DC56D56D969AFED066C494DAA98DA3522FBCB1D1A0A9A373C5C738120DA
B46D53A431A686AD41E49A16CAF7B93468F70FA93BF0586E942D31D074067A14
05AD442ABDE28E57FDE22A8EF3C7259AA2AD445FE7B0BA495FA41CC932412658
279BECF950AB> |-
/two <1C60D8A8C9B7A73DB93F4FC34D9EDB4B544B2194093D4547DAE8AFFE63
DA0C4EAA679AC10B5E2CB062D9543C5A909B4E7B1D3AA53BB18FE2A3BF306199
F19AA8DA2AF931A59B69F2698F1CC37FC68121EB1958EF256497241D79986D9C
9609688AD5B8914D0518AA75DF87879A30F263CAE02133BCAE3DEF659210D498
27596AD3CE2811FE3AE4635EC176DAE716383CA4175F939CBCC20F261949C66F
0C78215743B314690E4F4CE7B2BA8B9B345A7EC68E945E4C442D8F639DDBA3A4
EC728DB448B65D99980BC03D23AF0D1D6F38F71A5FA8CFC03A2DE1F10F686E57
3CA05D2FA0B86B78CCB0B1FF72DC4B7C505256D2CB325EA5F0C2374F2D691079
085A1DC84458DED8B75E9CD2219B3726D15714019F708BAF8C8EEBDE6AFB5D05
A8E84F167C5BC0D71793FADB7BFDB59842F7C9985E031AAEE4963587984F2ABB
0BB1E10E8A0714471CD3C4A91F23CD0146160B36D78052355687CA3B51B2C006
F183BD0D15B0CE7DB53135CE7CF095E0F77834EFEC8981A43E0628E11FC9BE90
AC1F6F6979055255009F8557BA1AF62B86D49FE5E22D5AF9916EC6806014> |-
/three <1C60D8A8C9B7A73DB901411FE019F2D18380DA2D44B4EFF82AFA410A
AF7ED3E4CB9BDE1AA842344D770BCC9B2BA80F69EE1F18CC93D847AE102B41D8
52CC35785598D9B7C26E72A16CA34E6F58DFA0A3023E0881C906FFA197F995FB
E217CC8A3CBC70B20A149243CF92C5DBDB993FC18F622E548051CBC12DF6950A
4089D42D4B31FC2909393B240D4B95F6CD5650F4DE067953704A0E37DA47071C
8E832D80F60FA5BD43DB5D68AFDBC7DD3ADC0A460BFB417E22218C8E46580A5A
C1AE8A842AA56AF310B6E79A201ED705ED6A17FEEF672C72E4FA65B463D33812
17313DAC63E6B8398BC63B478B1C62F724A198C0044B06F780AA0B212CF3A436
62BCDD631E940538BA6DF5A5316956E3D19441F436B4C97A573662AF3931A595
532E0A7A15CFAFEE5D75DA211F7D621F266D29589DF8C18A3AF7659802212837
0A2959DB1E4D1EC460FFBB5F10F95C9F57B3657DA30F49549FBE90D7FE575C65
612FF68DC4031670207C9B68B70D271F4476B91897526D61BC6491F544F39E0F
3F5A6502CEB1352011E1D05243F99D2B4F2583052A491266B66A43A535E263E5
79992D061C8DDFFFA127667A5CB3536D674BCB8B6FE573AF1DAF7DE89F6236DD
63C4BDD0D4AFA15D55DB5C3DA4BC7CCA687B0A3EC91BEDA8AEE4519118A9C849
5089AFF836254D903A6DF7CEC7531DD0F84D8222C8F26A120D3D2B22B882A4B0
A09F4C528E847C931630EE3E55A0DD48E9C8D43B8FF760394B723DAEFD30CF7B
825A63CE82B231AB9C166BEC36672A54E37788EE61F9544504E5AD2E991BF5DD
DF9CA708C16B693BDAFC01B36173E6790685924D7B2606CE653E9F97D62D0E74
F3C494400D1DBB7FD8E7407E7A07AD50CA2CA48401BBA115B69103E3A3ECA1AC
CB8017B9D96D87> |-
/four <1C60D8A8C9B7A73DECB2A6912CB1653CBF179BBF67F1572C6948EB83A
B6806D591C4D46C61D9CB4FCBBAE2B9595ACAC8B5A42B8A8580C1C43227CA2D7
ED46AAF0425ECF6D7CCE848F41D178EBBCD9A78D00190EAE707AC52807791816
6BF09D4B3A22A5A> |-
/five <1C60D8A8C9B7A73DB901405D4C9910B7512DF41FF5DAB32FAEB8BDDB7
0D4B30144EA451027CAA61EE259B3EF1BEDBAEE457DDEA7E87BB1DB7D24CB911
D98513F1C5848D33FEBB7655A94490F61CDD93F3EDD3F97E380F7CAA11D4ED7F
9C856C09C6089B9CD3C02BB578010335561D91739121CD26FCD8BE554656FACC
DA6DC186E8138E77E23D1BE081EF67CAD966CEF4D6984C82D6A30FA3EB9E5F8F
D7F58C239C14D0B58FA11F521E08C1F22CD296CEEC86545974DAB25262F91840
2CE780750F119D2F3760C043A782C583C9FA2559BF70553AF04BCB242ECFC7F5
A4CCFA33619A53941AC056221858941986901173D8CF61EC61B3B862A355E67E
B5A066AF4217B64160AB2C531C3B00860AC39D74CEBE0902AE2BD7409194D819
88379BD9591D615AB56801EBF7BD32711591A088A48F6591C61388E86E89CDB1
3A4557B603676555AB410DC63990E55F2BB8DCF1B1C1273DE296A4041EE2FC7B
7E373CBF660D58988CE22C685EBF5C113388A65EEFDD6EC3FBCBECF6D24B76A9
09775366C20BEA26FFC356D5C90> |-
/six <1C60D8A8C9B7A73DB994B9807F6474F82C48FD87F9C874F23F834A201A
FE2286075CFCBA56B71B2C8FFD0A387A53A86C9FB99C73F0983B8B627805B38C
4461E7E2006247073D9D452106E8D729226D6DE760DA94316F6D6F9824E5BE8B
CCC9129D42CF34C5210A17DF5ED6DB1C1AF38B57792263A83F9BBE7D0DE43332
2718E9E2E0EB60131ED176A9578BFBFD9915D27E88FEA7EF701BFEBF84304AAF
F8F63025EA7517589A57A419A60DF1363ADA39CDB338F6B18A2859550B859AD6
F148ED8C23257735FEBD57D3051C9FA7640A024B03A26C2174976B859F47C0D4
4AF8D268AC3EB32FBB26E36B61842E1E753C974F986F291E35DA450E64D48765
DD7A6ACBF6550640A458C766F47BB4F993A4CFFBAB3FC3499AFE68C97FBDA384
6395139F04AB8F192B1D99644B58F9BD1F2B8766738C2D8814E8626D9244A674
5F168731268776618F1CA5A68AC90008B7D6C6FA6F5D45587EC5F66899C3EDC3
8F67C8FB164B60C4179D85FB1D7B961D8A1272965E067449F8C4D3DD458C5A54
E3A06B6C4DBE00310367AD4DE12B7EDDDCC12C3ABC24D99D103F2DF05931A590
FD5B7C9807F34884C69B7888979CEBE0FB3B77EB6303BB0044A56F9C56991179
C454A38117EF84BD106BE40789B15D6480F6A42815786742BC325E05213389EC
7587EBD937B7170CECA5A1D5ACA895754A00A8011F943EBC32441221C49E093D
66E130A5D3FD4E3E8241311DAF76345BB6DDF92DFBB24CA803FDEA93EAE20191
6900886219D0A6AC443927794067EF158E5FFB8EA105146B9610D93F5613C910
A428701CF7EC1BDEE579225731BE1EE683D987990493F9726CAE26AF7184C58F
27AF21D85410077532DBCFB397> |-
/seven <1C60D8A8C9B7A73DF4414BF4B862F9A411BCF199DC33E2F6B11D5C43
5B64BFB2207C1C4E8EB2C88A9AD122006D2DF347ABA58D4F0A92B38454D79468
2380FE4256D0393B85542DA01D6281D38656D75CF77AA2DFA57A47786909E96D
8B0FA554CC54A124FF4376107443CBB8D00282D216E59C8D7FDFC34BF0CC1F76
36D2BA98C8> |-
/eight <1C60D8A8C9B7A73DB93B8411C342CD39D0C5EF736B6B6BC8513F63D5
B592CAE2497624334498E7EAE45B8A623EE466BF2105BBEBEC010CE552A88921
9A3F71008F1584E7B4FDA4336305B5362FFFFB7DC9A0FB9E3DA9E5D2CEDCBEFA
840DE9EE5B7EE76F003655588A552B22D4C2C3E49347DAEB8DBF28C5B67A986C
708CE072895EBBB50BDB91AB80355441993F5DCCB7F906A87929CDDDF6F18D0A
3077A9F86A028C328E91A556A52754959F140317D0C35126BF2F6E3C1B5E2DE9
4E578D693F886588E90F911EF9F3A4C2581515BAAFBBAB6DBE5703FCB50F2D4D
FED7E7170CBFA4D051ADBCCE8F6D1931D15F894EEAAAC1B000B604D952F01630
749EB3F68C7C2957F8425B6370AD51765AFD1EB5698AC45A7F383750DBA5319F
35197E6F66A17E2EFBD86DD84EAED62D6F28C80F985C11D91C7828827265D2E4
5D5F2FB32364526148276784F61A8046B3B831B07F19327C5CCAAFE6C22062A3
FDBE2986558798753FE6E13031CA40DBF9BCB538F4669DB41161A5A31818591F
744AA53B5FEE757765A943D9A53FF1BC0AB3CD01CD3E9E5616B5440D71BBDCDF
E39B53535AACBC319D6F7CA34111BBFA2D4ADF065E7E7C13BA17A6CF0AB32F45
61A212D848829EFA298C3EE200750C6547A1E428AD1BD5D466E7C6B9A0AADBD6
A3C0E44B05ABA40A8306CFFE28153C5EA72F80274AFD788869DEF8A501679000
332E1EA9A86F15E8B2090758BE82D3C702E2381BE8637C02407D8E8121AD6785
58596C4D6AAE4513FE4ECB171208C963C87F8F9E459E7A2489B4C63BB3C3A17B
FD6A8DAFE3AB8B064CB4AE427AC5F59E5684AB2E7D48DDA760163B87CD6A9B97
4CCD31836870EAD94C0DC8B7771DE4E696C14A3A907902DD09D6DA3A41E2D626
6A766FDB4DE45D7B7057C6F021B33BE0A9C594E8AC76359C59ECC9ED488AB987
54DE8E1544E3BCC1897A1BB6530B664FF4B2D76B879E360C03136E2A37BD8DB6
3B9D128E459834F7945F58B938ADD62E5FBA3BF4E8C24ABCECE19D3E236DDBE3
15EA75C7F17234C00491C767F82DD023F1842516679FF06672BF6F6486F8D2BC
67715FE4B99A2C26B34D8BC04842D979A4802029E3B4820B429B> |-
/nine <1C60D8A8C9B7A73DB93B8411C3446C3F6120C7236F0E53232BC54851E
1D94DED56AAC473518581F1EBC7E449E835251E1403CA6D20E2BF92813E5D3D2
538AB454C662FA31D3D2D9B0BF52E11E5765AE0B2165B09B7F3C251D0CDA1A29
D31AFE09AE41C680C31DEAD3ECE26F958765A562F04CCC9241DE80FE89E8F6A5
E41856875FCA06108006BE9EEBA575B03432B5387602C160F0F59ADDD8DFD6EF
827BC4ED4084B5EABC15839DB7E54BC6F12A5B9632852E926919293BE3FD4AFB
6A7A7B4B5322F541D1D54CDE9827D351839DFDAAA501FF9BC7BE3C4924DDB5AE
EF7599CD6D1DF0668254174D7A2BFFD4047EC59A48E26C99579F63F3CEB63079
513FCEF8C324154ECC9E71EF608C63ED7312FDDDD2B67F424151A77D78E70C1A
142749353599B739FF81FEDB3F09351F80B218D745D9B9CEE427CB80E98B5E07
054651DE96AEA2C84FACA502DDB2BDD2FA9EA5C09C7964A059D4C9D45412F3D5
A7DE9A88665D151D1768780CB792247033E4AC7DA594ADD77F4BDF10C5B4A5F2
64465D4DF7EA761D8EF1FC298F77751FC76BAE94856A373B1522111295CF4A59
380F62014C38DE1B106646C53426E622CEA55C8432C14D1C3003E128A306A37E
245ADCD7417B8662DA4221A950BDBDA077A9F21BF702963A3EA784E540A46ABE
2D71AACD9E2D3C9BB6AB2EA6D68D5E738FA27C7BE265BF1CDCA679140795C215
03F94CD3925F54D20A6D7AD4F5BED64A7929FDB480932DEA9DC630B2FDDB4A37
510FB1C333D0840E00D7168FCA3279D20A44D16916C51033EDB7EA978A538940
6799FC34E2FDEC76A7A3A4DB2C2F5F2002B00377DF74D9BD01BE862F8658DCD8
99F83379452B84912D08FAD> |-
/A <1C60D8A8C9B6F715E6D98E90602EAA34470FFEE1B76A332F3FBC0289F095
7795D6338F53D8474055CFC46AAA5049BA9A6FEEC9492E768F278FE9E1735895
E48FAA5BBF08C86069E56ECCB9DF89EB53CC17490933CE6ABDFC4A0FD7CA1520
4DDA6C19B42061FD7A8A87EC25E99AF75325C6E4E5F88778727C0ADAC9CA8769
3D6005AB8F1FC183933550A328FE1402FB2F0846383BD6C65068A92D394E684B
D9F5F04C886EE4ACD3A40772394D6D84DF99CDEFA0D72E8D631D7AB6D02F7750
11F1CDCAB89D2108E5E6810099409137FA1D50A2D5696EEE77568557B9A4499E
1BC707DDF43644A990F5E300BE3800B4302AC11175BDFD9CF7B4504CC55F5423
55355C0EE335AE7477FFCBFDD700F2139852A5379893A6> |-
/B <1C60D8A8C9B64FADBFD4BBA178E4F7B2678A0513448B98C8B0D76C39C9C3
6C56E3CE42AEA51DEB271F1FB974C63CF521C7DD834133C334B349BDF28BCE81
96FE487C5309EE088F850747F5C9B02A7D7B5B888E362447E1312111B599E7DB
0664D366F7B649102BE3A1C9205D7852669844D2CE0E7AED747690AF573A600C
464EBEC006FD5E1A2F7A02D95F018C1EE7DB17042DB08081CEFA4D30AB500388
738148333A4B18033389C04EDCF1A5BCEB4FD9A1B217861EF0CEEE68A3A257DA
7B31E304060CED4E0A9383933570DBB036870BED2F26CD8D592A0F1DEA4E81A7
5A6E91E50B494C27B51FC2C72A58C5FD3DBAD1A3DEA7DFB23938D1E96CE8E9D3
A036A91B3E5D7329ACFB029138C7DC85DF33F6DEF4CED905A6E44CD0C8C5BB1F
2C33ABB73D324E77CF38FD590F497C2E5E1FE2EA4045BD6A5D60ED9B06804ED2
3E32A48CD92173B7650927E6274C6DA9E5D038B0375BFAD1B5558EE9C6B9F23F
6A8DED379D029666A16E4AB99F7C9DCBAEC5C9CB3F041B3E45C10121801023EF
94F53B8100ED8B8E50B8D4190AE03D9D545C64993E252D1D1A09CABE669DB2AD
CCD2321D33090D6E33C3CF5DCEC3CAAF52FAF3113BA8A2F9F706CFAFFB5FB239
B10184980AB1AC472E32B67A92970C670D91FB4FEB33966B9B7BDC048ABA91D0
2E824E480A3B7D01674415380A6AF02717FF50D17BA5F3C1BD7B4EE0481EF4B3
01CA021A859C68BBD506AD3A989612B8FCEDFBAF60C3DA445F26A42F7FA2C856
DD12064AD326834513A5B0BD00F82812F412A7A43B61A3E215FFE6521CF79F86
3136E87F94C8C538A14F3B831A69E6BD0F3752F8D95DE99F557A82BFCE4F35C5
BAFCCA39DF92FB0FF6537C118A2717> |-
/I <1C60D8A8C9B73A413848272D9FA7A30C781663E545ACE01EB65B9C82FCAC
05B07B0EC878AEB5DDEC0C370EFA491BB48048132C02C41D8779D9C15880B1E4
948DCEF2CB4421C79A3C1A1490E61FB1CF1F5B4FA670F9903EF6E4AFDFCF5C0C
59D9933CEAEF233810BA095202F7095BFC2FDCF611D831F115C5B9003F9BC487
5D230F53856AF6AF3EFEF19FF5AB3DF341145E3F2D0C1532812265139EA8E0CD
B8AE3092CC60729C2A5360A96CA1670B533699BDB6A952E46756AEA5DBA9E641> |-
/N <1C60D8A8C9B6ABDD86EB3309B3A33E115B438641816DFEB707CE4AD07D20
6F0A16574DE6679DF22FBD01FE8407F1DA1D7C5280E130ADE49098F906E478D2
4C243DEC52DF1B16BFAF9395466F8CE42D21CE8891FFFFEC0492C4EEFA688775
96A2F7393392EEE5A59968F67BDD7A2E77C8226D126ED4730D468535A1E3E3F6
6FA36A5F3CFB12BA5BCA1EF6AB0B12C9194C9D052F62571BECD52BC7E031ECD8
E566ACE70D66AD57C39631484F778004276915A3E94D0BCCEDAE38F7480976D1
EF07ACE6C227092CFAE27D06EE15235814EBD04E19CA7908338A328BD95B1797
91F3963D54EDFE541BB9368F8A60A7ECD4> |-
/O <1C60D8A8C9B6F715E645DB44907AF21B200FFC3C45E29ED7A6E709D2C702
6ED9B8A2348E3826B5ADAF6417AFB4E7A1A9BA3CE51067B22DC6C22E18489154
3C0414D2D4789117913EEF7A37175667DD37D8A27CF792CC67709CC9944BB987
30A8CC4DD9A66851ADD381142A5D1C03E393B00A57CCCBB8321F40CE93E82153
AD6A0F9F6584896BA1724B91954AF747F106222BFFD6824832CAD65D6ACC195C
854288F3CEAC92ED6D88C1FDE8A0479EEF8B6F587D63C93099713654DB7D45DD
EDF5F462F51E9A5E0E84AB898679806054D66F5A535921FD759BDEC4A558F076
582BB77A70C6479836D631BBD9DF819E01CB345152B37D4E85D4E38D3CC9D30C
A01E90760B5A4A11524B8836FA8DF239EF915ADE274C3463EAF016002BD39E2B
B4FE4CFBD07287358DF3287C61F43FE09579DDE5144D20D999498DE4476164CD
AFADF1F014DDD18272B520C60ECE656ED24647961AA890317A8C5776D0785EFD
91F5DBE4A2E0734E21F45E0ACF5D93AC324F607D3E03C94CAB9B4E83702ED0A4
A83D30AA38F5C7A18A27B8B40AE6C6AEFECDB9ED9B13089E7592FD234EB7D62D
1CB1928B8FF3600C4E809C218A9867584274AB0483EFF844FDBF2FF420F97167
8928D7124F615AA36D792BF5BD201161EC6250FE0E0E25BF6CB49135F7CE62A8
5AACEB42E71CE54D3D11BA1A7F8D80668E7BD89F685860DCA8A196185DCCC019
6879C5358604070D40798CBA07EE38F0A75613D77A513DB6A5A29E426E44EAF0
68A95C878D8086714792BDFF2A69DB54A58699C6D9CAD303BA2D784D8D70C333
39931260BE0763BBC3FB90BAF068167539C1A48742E583239961052D565608E4
91A8D92EBCA4A954B144110C9DACE5597DC49B732BA211C726341819134082E0
3BBF76EA392FC27133F8F270A5939429204F752189DD01C87763C8DC> |-
/R <1C60D8A8C9B6F715E6CC07D7272F6406C77B6C057A544BD1C52EB4C09094
767934A22DB7C35B07730A956F487892E1E1169867B356377914BB5EC12E78E7
42E7D09B97365DFD0C588FF42D8EE1A5FBAB0BB078B3563323E836E1CC2636D9
9F6C229537532F9EF6758944C3E244D148A85A05DED1C36288FC130C29E462E7
B7DD92CBB31E32B5A468A67D594363BA630C2FE2FB868FE7B113EEB03B39AD61
D0BF0DA93808D46F6A5F78142643B52CA42BF5D8BBD60747D7C68BEA98681320
518C8F92261786C7423F1D0667D24C3BC15EF056BFC5F49A66F248AF6B7161DE
3AB9EF6B457F0E659B81C109C8D6282A1734E1DE846348F9B552AE162A22DC46
73AA598576D8BA202B6B1D19AD853A8FE92D9FC196AB84904C0BFA25A28D4D15
540432E137DD81CF3CA57F1E90197E66B4FE770F5CA71FE93823BD1D810EAB30
562B12252D8CFB5D61C9FAD1E35F886560CF39B230C1D8DA53BEB7ADDD542A56
DC142C9073084C846DB66224C66A0F960330FE908CE5F371241548F7A74B718C
563EBBA63CD7E21144A8EC52CD5A9CCA8DE3C36E5A3D0A9088381728CB5DC392
AC915F85B062ED1CE31A95DAEC862EBF07BC99108FA8238FEB9CE541226CEA2D
F780FDE2DB9476E42B2EFC5348638F77E8EF98B561> |-
/S <1C60D8A8C9B7931D88BEF51BF0135825077CF95CF48C7D55382D9B030C9A
8D29226B02706AC7474353742DDA3385EFB17BE47181E6C5BC32CD24EE3CF33D
CB59BD2F3ADAB26456A09DDE2CC507C065E73755DDC1305F6397F7CBECCC4867
766DA7006C938C0E9069CEFFDA6BFB46986F3DCD8007E70903B78FD6ECF4EA97
B8D3FD0D0FC4F44A350D043C3237D443BCE1374E745E8C3E94CAFD71A599082D
F6F5E100673B1BA209A4ED03A44C6E0E1AA7D6A7264DF6297CB95A986EFDFBAA
D9611263AF31AE37DC7F8A86A789B17340BB6DB7ECBED5DA4C5197292731AFCD
3D7B423601AC68A2202ACB05092D556E9B38AA9CA7ADFBE15F57A142B2647C47
A8944BABD9573B7E7130F5449AA4EE9E9EF7EA11C5153106B5A59739660C61F2
CD4BA761DFB2038182BB7B10804BEE1145941338AC3DE4A1D081788243137DAB
2B2461B6839A6D5E5DC2AE3DBA58CBAFD59BFB818DCEB3466319E094C699FAE3
3FEB24925BEE56B134EBF99E0107F4572217B722541D2B947276B18E58BA19F3
2AF80FCC083958C673C8BF85C01538966BA9A795A08DF4C3654125BD0C2C23CF
549524385FBAD242D38F3B5E4AA3781D6122A16EEFAE7D7F5D25A34A09D3948A
3D30C24555CFF98A2C9A5DFBEA3A2C50DD599AF32DF5CC05E94A9161826BDB4D
C653E6F77EFD742C6493A49B1DE4AF2B16060D40E458092AF9654FDFD8C952FD
155A82E3E748D7AD2DD4C547388BD0E3500C8415E96F44F2546010A11FB9A657
0116B4E5816793F9A87E714C379347BC7F6E40B1F148B91D39FA36B858E3A518
5CFE0BEFFE5A6BAD40364101A26384582751D56397DAA02D711081F1D8625A6A
AA19CA52C1DD79FA69094BB0F544D0199F5C820B517ACA8D0B698D80C960077E
9A> |-
/T <1C60D8A8C9B64FADF048FB6820982EF38546E9EA3AF3097552521E3D125F
75062EB8B843629FD48557937408DDA23E0E97EBD83B74070A2A48BAEA86DB93
464D27282736607CDCDD5163201A6C6572C044D3D5C0B12893543728ABF99442
8465914F89BC5326571BEDFD03CBF382616E47C3E07F89BA6A75B9651C0E9CE0
C67B92E62018E8AD5F8EC3A51C651078C246154CE248E1499220FB9C018AB9EC
FAA03A7DF9AB10FF3BAD97CFD86607CF75AF93AD137D9E977FF12A2EA35EC729
D9C42D21E3594B40> |-
/W <1C60D8A8C9B5E350916E116687A79A616BD7F557F46A55A98AFDF746DC12
FB029FDBDFCFA44D68674CAD6BC67D746570C1EB1E3AFC520CFB13373543C39B
66C68DC356D74712349236A269EF74D6FEAA58195390BC4C9C769679DD3F910E
C7DA597AF9D81791C9A7FD643ADFEE86739E5567503198AC01EFEBEBEEBEFE20
E1D7C7DB328583BBF2B6767677FF72201A006162431AE4EFCBD87E1A61F5B253
D386962D0B5F1482909D3493AE0D580BF852EE58E8436484A3A7D88DA694638A
10DDF3EA1AADC6FEDCCA68C8A3D8B886616F18CA24712F74E8A733DED0387B3A
11D4B1C0AE239CE0C10FD29D0EE409355F183632DD6A2BB3312A4FCDE806E7A3
94CF5A1A888BED13EABFBE39D67329067EA58518A01AC0E6B82C4F26473FD30F
163A527F806041F8D991867306FAE757504E48AB2E2DA165E5D8F4C8FA6A95D7
BA6400090AF46B63E0C10E31266367D5EE0F96C586E7867A9CBF31B553809558
02B06331EDA502DC2165B8BD3438C8D03B1B96015AC1D49B4A11C07CD3C3A536
AA2C412E623044EA907C7591B6986B47B96EAE7BFEFC2DEF80D4A54F7A852632> |-
/bracketleft <1C60D8A8C9B85C5CBACC1045EFF13E2691F13602BCE21E57E6
165CB3C96446A63617FF40> |-
/bracketright <1C60D8A8C9B85C5CBA44BAAD35633A8A4E848F1180C735CE0
00D29B62C9D54248D6A6543> |-
/quoteleft <1C60D8A8C9B85C5CBF9C2728103AD995D20544C2B547B208AC81
C5CE07EA41E59520819E89FCD55D2B6784C17A49F4D4BF5B1C4D4EEB6B9E2EF6
25C53B48145B10F0BB59EC9D807450B012C334CEF5705C03600633686DFFF0A4
9C98E15FB2138ED0D443C3433E5FC339C6DAFDBA6D463DF300B0DAF590E76B5B
D70C3220962E318B924A9229D7A5DFCC68ADAB2139261BE987099E4C8B943485
E86D133693604B892BED5A15A1016BA3B0B360FDF9B2A96FDF69D2E10741CAD5
8A8FCFA2860E694C227D8003947EF144D15E77243F5A71E4A5CF931A2993C805
4B33C9EF2DBE05B3AEDB7A9601823944BF03B852514BE0> |-
/a <1C60D8A8C9B7A73DB9240966AE810D81D61EB2B4E62F3202006E16C4215E
57564B51188A2CA9E19EE6767AEBAF9006D765B4B05C5AFBCC4853FA53C4E44D
F3BA2C739AC096A73A389FCF8A67A20A61E2063A4BB5B9F228D78B83318F2AC0
976885843F614401C8811B5388CDE270BC0FA481CCC3AC26E0120F8DBFA359B9
A695BED4220A395CA13757B05BD3C0D282DFDEEBD7CB62CCBAE383B5095C4D90
EF6BA6EB96C2C037E8BCE7AB1D8C9BEF2B1BF127843C4D4F53F1D978BE447190
8C0316A1E5580D18B54CC3FD28E4DF474D63C57F0E05C8216D1E0559A64DC0E2
C953F5BB4A0271DED557DF9C59592D1FA91EACB4F2491C3143DF001152BDA41A
17D0BE5F0976AC945463F386A47313521ECDBD7966609D6CC429FC2C6A635DE2
BC84F00967CC61872F2A456CB6ED28FBAF7EB5D2734E5026905B60ACF6000DAA
D7845F36E8D18FFA65FE9CFBE4BF73B50A356D144F6B1ABA3CAC09B45E29A02E
4885CB7E7D96B4278CCCE22F9180798B3B2E68BCDA999DD141CF57D8EA0D7568
BF36DA9D64C6C64AF5ED13B5BC68CE3A8F4CAC1F6274BE9D86EBD0582C0D81CA
2035C9B4C0FAA2A772AA714440894B317007E624E52F6F063B917B8BCB727120
1EB670E167ECA71966021CDC1E180430DFCAA84C8FB098316222388AAFAE364A
4BD9292AA78DC58D60A61DCF26D16FDFF7B064DF42C5A560F8A7B83C2FAF6A54
835469A39661FA246C3CE97F9A1A60509C461F55B7360D7D891C0B7D651BE27C
95A04AE8AFF631FF208EC03594ADB27E5148DF037F405ABD0FDFAE8166D39B52
518B9B2542340661A3621F2E217293FE921B5FC5A85B65A9EDB856650E5E10F0
FD693E4F5A> |-
/b <1C60D8A8C9B7931DCF215F7205120BB188E90399A9708F95B9EF410CC93C
06020EDDE77B8FD7C050BBD62E193845218969C763E54B6FDC4EAFAE65B3D56B
0C83B60E67C88D3CF3AEBA202C9076ADAF8DB34395594852A41B7FE5E5306B53
3A3622716CA21666BE44ECF141B1780EFEAB2929A11B466353840AE192AE60C0
EF8D382FB547C20F84020B27CC091A1EBE3E25DDD753CEBEC1AA50693C0DD746
48C4825F36B030C3B21046F7C905D0F6164B6B5829D6F9D236E8B6106EC1FBFC
9018A54AC5EB1233A48FE5A9AE398EF849DA33C8B2E0A5B5CF884FA1D7F962A9
61AFDE4664F901838F052FBC0D6ED7186C3C1ADD59BE542477323A731B1801C9
BB63E5DC543D57820A3259788C6830652CF0188AEA6061709BD60FD15CEC5B24
6E322E0B907AF407345F02C579C388E7F09BE3C40182A8C073243F9AB376BF29
9186AF2C5E6DFBB64252686233902B56E97D06BBB03FCD1B9AE29A5A2078829E
CFD1259A6F5D55D19B709CE9D7542BF75141263939A6196960EEA6B9CFA21F30
2863814468481428CE0EF0B909F9D1EFCABAA3DA09B039C7313AF179870EA190
51D8D2036E96ED25C36C7B535D68235ACA12B9DCC15539E340A80913DF60F515
1B> |-
/c <1C60D8A8C9B766CA3CE6DE3C55B2020B66E3EA51B03A52823AC07A2FB6E7
409196B2CFAB26FBB5C432CBE181E6C0CBD88BD771DFE10B5E4230C34B33D52E
DB2AD8F81C1648E6F30C576A00906F0DFDA43F50B03C279ACEF84DA4D045FEA0
4B40E63BE6E81C2776FF7041C1180B5C08BF4661189E095CEF56B4D1EBDB1385
2E82842C072E4AE2CB2A97B059AB35AE2E0B40AE7B0851D7243255066C3074FA
55EF6670936E50E25027C3C5ADC4025328961858472B4154EBFDBB94D1C45EBC
02D5DE0892C4323A83C4BB64AE0C5D0F182F4EFE65A571179726691186886BB9
93C8D6CA301BB6B1B9AA008DAE3E873C91D29033493F35685F8EA511AD947E61
3825D9BEE38F9607B0CD546FDFB9BF4298B260A4608A16934728915EBBAA3506
928603B2361DF89AD3A3BA0427B57E96726FE14845FC7D1062B3BD3B3E10583F
2CE064D16679DA1841A12340F1DC86327FDAC5CC08331DD83DA6BFFD84A58574
39A9C009400C1BF36F6AF404A0C9A232BC666E308BEA76722D7A9834C3514455
A15F33FDE0E93B41D6F2834319DC2CC80A15159A89AFADD2177B73554E9D1437
E3ACAB93955AEC4F58900C5287C06739A84259C7F8F83C0B9C2841FF3A8FA3F3
833258AD3DC14A6ECF859B40A095E0E0519830709D404C084F885B7DBCA1BE9B
F6FBB8C5AF82F01CF582851B6016CC6707E5CBDB09D6DF> |-
/d <1C60D8A8C9B7931D8706EA36F254AC4D057AC9724A1191C08685261FE88B
C00F1C3B070A1ADB0139583A06962ED1093CBF238563F6D70E6077BA2548EE33
E005F17AF8AB381210D8783524439D9ED540DEEA4F43F5B7C4DB69AB6776EF8F
A82FA7A214040BB54093529E1F8C5A6A0CD8266293283DB5422D915C2D121B34
768E366DCFD7C552BA7F49A0AD738E248CCCE09220705219740A10573F4E8EA0
CF01CA7904FBED4422F2A5AAC9D6D60DAAAC85EC77B7A941E5FFDDA032A58395
4298D017B5A25254512444524007582968E8D23A28724D7C11F97AD2117D8E31
10E0E40B26F16DC716786EFBD1555A68DA399F9E3C7669234F5330C8FF9837EC
F58E662BECD182EF5BEF68D649E59E14858D5EA709B54C433984699316286B11
0F4ECAD163BE5CCF0877C5CE7FF4ACDE13F9A3980B8933AFD3599BB72A5D55AF
E06E4851C605F1D7833B5D9C9A0064510EE49203D0525E634239C8E457F06467
D7D5267C21E0E2FD9B7DE07B47265C7310C6857C4FA7AA1E8D652986266C3768
2DBE7A7E6F70F6482353E08C906B4CFF33227B3AB9A6593677D7E794E9B5A7DC
C0594DBACF86F12481E9A5F2F4832A7B4436F36EAB29CB867FF2883F848ADAE3
E5856B545812EB2746E423B5099E0FF0440DC8328A2CAD4E52CC16A8A4D04834
1004D7F0B3B8B286BB298CBF00498D5F9FD1ADC20AB49B5C1D371725CEBFE6CE
5282E4D7A7CC5F37D7165B2049> |-
/e <1C60D8A8C9B766CA3CF1FD5EEC9E0454D0E7D31A6D1D8BE373559E6CBAA0
21EC81C51ECE1C426F70802086C67AB35EEEC6BA376F8B94B72AEE473E578320
06BE70CFE783F6CB3AF81911D853F2F37AACCF6CA5E0396BCE45F069C2F2CD73
4644CBF507B8EACE612C8136CDC31CCECA53970089BFFB8F626DF9F993C70B90
8636B91DB0CA417542461C4A9E98840EF538E718C281A9144EBC0C477B415C2A
A475DA308AB0ED7D46F5745AE460254F9ABCC00ED3C8F9BFBAAF08C776F3BB85
7CB2C565015B26CEE2C91E486746800F72BA4323E87C7CB39C01CB38ACFFF45F
C608DA25BAD63EF522C479BCF6BFB5909054B0D656AF2BC3D3E4C26A14E79AE4
85D392C5C7AFE7B25BF68F9D003F0696DF3AB560CE1C2394DF17FEC717B09A14
E2E702F77620EF0926C8EAA29858442296958EEA3C4F222AD5A77F57022C322A
2ED7D4A8FE87A505C4ED643C732257C1C7141BE61C90360151C46D4F2B1D404F
702290B6E85A94ECE0C4026F00B23A82B2130714D395C7B34B56A2CCA054A53C
164F78A3E8BC6F64855AD4151EC52695D93CF121D9C0B6E183DAC8120724EAAF
A7A78E2B6972BCE593B7AED2C9AF5E6BD48CCBE55425347D824A9380E611C74F
49DB0DE04229D78CC8367E0406BEA8077FF35EC71CF38BC3C31EE9E73003> |-
/f <1C60D8A8C9B81F2C3AFD69D8D3D78004B8B5C70D534DC379093AF10BF3EB
06A8E1C4218E11002434334329D1DACB94EAE8E01760EB3C3B4FCAEA1114D302
853436E13DD143AC60A5F811DF6C39B18C62C132BA301F5FBDB20C351BFBE7E4
5C4C59DA76B1C6B7C223F898B6A3A7822D8BDD3794560D4117A2CD09FBB6A3D6
6A50EACCED081A043D4C1E3994F6409D970B359430AFA809E9E32C24F0069213
5ECC6EF89B043EEA920B60DA68C2D62CD10E485BDF73EF4C45C5A966C44CE3EA
83B6EDF3994CA9896F6A2553627488BDBD52C1B7DCC72BC1E3511D6C8F6B54EC
93E5A34D12EB32E015DD220D7C16038CA0A1911C698F3E792BDAAA2969DCC201
D50061497D1799D6D614AA8A376E868FD5670BC067B345A573BF7F672B09FD5C
61F29CEF4700D3DF22E23F58FFC9CA5DEA3A6CF532DB88114907B861E303E6E3
DA021A16C6D3> |-
/g <1C60D8A8C9B7A73DB901402476CB3B371844A28655D15334C1FC73A8D731
3514105A1204999A8E16CD430765712080AF419A0084690E0EC3168488AF284E
BBCE92E4D9757D21CA2AFFF3E7048D5B5B884A0B89D34D674A8F42C7D19B03A2
0D0B73B59563565131296D9AB3F74B5BA57CCC084F14E6C2EEE9C7C7D13972CD
D53FEF9F79437A31D0E38DAB20934EA6CEB48C0CA642EEF8FC6B04CE1F4F3F1A
E2AAE39B0300B1EE94E6DC7A21911ABBB2E57D96F60DAE93DEFF16835BC1C401
239E39D17159FACC375ECD7049A759B19EFBEB4CE305232A4660066345FB9832
566E6F74FB8D7B7E7698D42E88534A3A4F9DCEE7EE7032B4D89EAC678F8B1ECE
E859BCA2F2327DBD37FC73ACCDEFD83681CDEBCC4D2A30160D9C3060835AAA30
9686898B08FD244F3715E279A3894D1DE7000BDC0464B3530DDACCDBCC933E6B
291360D0D572756CC4B658C2258A0E75BE37399A5533F18C8E45DF4D703812B4
CE0B123C7F86B7D72DF312C55D33F123354805030AC9E5D0F747DCB10C1DF0C2
E8DA60A6DC4FA18116C68BCC689C936F19EDB72DC79ADB6552C330CE6FF1910C
C1811C0BBDC30C9C28C9DFCD2A24885594EB327ECE2201AF3967279C33EB8DEC
C386366753EEBE4B5706A1BD0940F2832F0037EFF456369E5875F02264234B28
38B18840568289EF2CAAB59DA101DB2618E6C5B653582789FF934E34887CA997
3B2066BF736A337595F7C3C65A778F3FFA0C4A2E063A5CAFFBD35021E904EF4A
844B551E8038689338F8C6B453E21552F227C4840E38DE326671A66D8D3A2795
057BAAB6BE47F4A5AF08E6CD41C574FB0CBBE6E9809C3DD9AE5ED5BE5BF67ED9
6DD1F49BD19D8424CC48813A1B8ACD50ABEFE9F35A2FB004A1148136EEC784FC
53C3236A28AE1FF1608F4C3AB05854822C5DE068DF2485C7B6B6951047A49D1D
DB3D5541A09CA2728FAEDC6CE178A6EC98C3FF1AACED6B40F8923E437DD58479
D4D9C40AB9BFE9AADE5370EB948372C3E4FD9CF180EA52F3014169DE989C9B5A
2422BC535570483955545AA8B2DFC11E9CC89CC03414E9FEC22086B2B4838F38
3EE99BE833FF197CEA11B962B8519E28C54D9D17615A97400CBB8A71F05DCB43
FD83AEE3057F87B16F22A8B41B94AF8A1751A1B96C3D6446F944651E8BFF5D94
88FE06E8B1BBB4137E3884BDF792D80556701ACE939452EABB33731D68755CC0
1D4CC05CEC57BD0F16DB1D9819E2EF1FC21A1C1B7A50BD445C3A8AF18F54F970
5C6E3781B73B4C4D78C143944BE03BBAC4976561C0CC9C108B0C3B1C38BC0F43
04EF02F2704E1EEB6531EDA43CEC5FD4E22A25E08F42> |-
/h <1C60D8A8C9B7931DD68447787429E220F50A783D88BAD9FB5381FD9758C1
1C859AB4C1C36E4D561B777294563959D3DFAABF28C8EABDB0350126F89B3A26
999763A8B601DAB3DEF36808A991CCCC0F6E7F2ECCF830FFDED28681319BDB71
0090F82442C855F949EADC3A26F681405BA66124DB70F4663E698F5A56B7996B
4C3D0CABE498B0E61A000967981385A9BF23F2C1739AD71F80F6D3052D592A7D
1884042B8B658FEBF8F84DCCBAD728125854BAF14F2307861194FC0779B8990C
D8A3A2891B475FC35BFB1C533506D284BD27424A0972883BEEB3870BF9195D62
02053FD01B22FE5A26BB5B279BCB5E41C94FD2A3FE60B92D06B8DC763176B3A5
99F0E4E4B4DF9D9046BBEBA2E05EB80466378ACF7E0A480ADE893CFF1FE12380
5FE51F8BDD2852B53867336DBC2BAD51861CA9CF0BC72B7703FB2E4AEBCEF6C5
B04016282314E3E81513F5D16C070545085B7A1DD68E17A62DF75A72FC4083F9
9A6EC074D48B3BA37B3F779DE884E429C22BBB51BDEF11A36566FCC8E463E46C
A81D44A17461F0C4C2834A5A6C44AA049F1B1A39144C3E0C1F3C637A6B2E5693
1D6D0065E4F547> |-
/i <1C60D8A8C9B85C5CA95EB447748BC3AAC6BB31ED886276712A44F9CCC0A7
77C38DF2D23EE07AECF579B5675AE4D7CD6CE5E22D80E83F9523ACA5B296DAF4
3F548206F569AC35A6869DC431FCC032A4F106B847FE110508E6A5E3E1D3500A
3AAEA711E9F556FEB311AFBD41B67CB3D4A3FD58D076E254DCFB10D41CAD6C24
9A3B712568801A24E3618941216D4D41207008536F6D4BD97B66C12DC48DE86B
32757749160960FFFC1430A5D8692770ACC9C2A854B87C9EE899560DDE680168
7EE1F01CE3541A1B91E5F2EFFC45D4FC8F5514E9CB07178AD6E9C15DD65FA536
0EEB362F35236E237B9069A636AABD07D1A5408F0761B3553E5BDBDCDF4A3CBA
D1E6FAC57D7C> |-
/k <1C60D8A8C9B7931DB3BD36D9945C7618D66F8E55566DEE1192682962BDB1
D014E2D50E970915B022FB311806E2E026BBA0BC3A72FC33F8CEE26B12C9BFBB
9387999502311604C2AFB297A7252DBB1DA33A0666E588BBC3F5C274EFA2AFF8
E9FADF49CFC0CB821D02245D5428D245AF3C8C874E00630D61087F4ED0910975
A0C76D0BE457B1786486FD76F94DD2EC1AF00724620A326BFF36EB326F4AF2D0
4275E8BA97A0499E4B2789B3E334C03D74A7153182C8ECEA16655C41DAF67695
0C7B448EE617CEF4EE9011B41AF6AAA44BA0EE7721E6DEF42D4DF2F8C196D966
1C1A5AFD766444AB715D5B45A53FD7686B087FF966DEA95C668C402FAFEC40D2
5C882435C0C53330A9FDCD627A167E59FA0056CD7D937914A5208F2AB9D65FC7
4D84384279E2E775C2CAAC09C073BA0F9F7989D9D22C389FBE> |-
/l <1C60D8A8C9B85C5CE5F0F6C10B895317D80019717F35C7F8EF9182663815
6256CBDC6592892AC4FF6FD3EB6981225A0B62902AB89BAB6D355CF919077A73
8F8F15C395A00B396C5769E24D45D2A790D57267F444ECC2EC0AB5E3D7399BAF
10E4FFECC860D79199F8E18640BE04B0D6D70D548B64599B490E82ACF099788C
64A9738E85DE3545B015D1987FD003AA58> |-
/m <1C60D8A8C9B6ABDDD2BC96BA392C35E0EC537FA0AAC7A372B3EA409875DD
3A3FBC29D9108404C99C5B576AD129E69B4422C5AD10158C1960791FC96C23D9
BFE280454C6DE63B1B4434E7C332EB324F21E1A430274C65FD2302F87098382E
7353909AD2BC987980B4C8C032F1219213F5BB32AFA329DBDD8B114B3A00CC23
445C94B03ED3E79D6EF2FEDFA51B1E47E29BB9EE8587FEB852F3806FC520C1EA
5E5232F98A8AF4D254D6AB15EF9472389E6FFFFBFE31AC80B08D987B66CBD931
212D6D0606F6241783BD365A4F46CA4B11145757F005FBB14378DF6E002EA8E7
61E1198FEB5A43B6EC1B3128D2467794C9988B54928F3BDA6F9669B5EA2969C5
AA4A10B58618FD5916327FF67944659C2D2962C034E978D9636A9E20DD086FAF
609DEAD44D3C5EBA97869D2C7573CC6BCE5358C2AD092E777FE368D794F5A56A
1598AA4CC78A26245505512A7A7822E878F0718CF414064BFE356163947B87C7
EA73553D4537D091E9351384567C82F91C6379D19503D9EE4B7BA876B3186D18
413C753DE67E73FBACF86B46F1DDF4543FA0403367EC1328CB5989613CFCD66C
8B4B366C56A9ED7DD4CA86DC06B00CA741E315EB8FFC3E60557C36F0A2F31056
50D9B92FDE7EE3EB12FFF0D52F22294027FCFF38620B807F3DAC1C4B6DFA6D12
5A4B25E7D7CE1E4A315ABEF31035D014CB97F0ED10B121F75A742961161591D0
E50AE00AE6626A6545E5AF9B63EF03F1648D20805407EB8A71281392864BB8F0
AE4AA3AD97534D4BCEFB0CF8025DDC6B76400445ADFBCDC3081F27617A1511D8
42FEABC94729A685D3867B4D610FCF84430F94987D31CBFD24F3928CC5CEF1E1
E0C0D6F63A358906ADFC5AE59A65156C7674C0C776999C3D745BB0CAF042D94E
80BB011C1488132A3929F1897B22> |-
/n <1C60D8A8C9B7931DC79C8B381A4998DAB9F6E250607B46F0037C91DEFC15
1734A2ECBCB72B1C6623DEEEBA10D5898C11F4C1ACA7AED461C04FFEA80678DC
B704631A5C82F5586856BEF8424C28DEE345BBCC6B265734E928129654F68735
1CEBD24711A75B0E968DDC661F63C9A0C706B12D301369684E46329ADD9EE594
4C056401CBB73BCAA24265FD74D337F53E92690F05B7A0D811DD20F14F0AD995
18C0683490FFECD7029D71CA835FB9F5993540EE19B9BB2150B3422B5B48CFD0
3EA27959B9F48A63FC340662683826A8A54CFA8DACAB05E685A7690D5F5D5463
E4B1E2624F259B10E4F0B15734300592941169AC3FC39D0452E8B9BCB3F1FF28
E699D0D119AC274825E6F3DFE3E7A6ED98406EED666D4C65E97C9734ACCF974D
F5C29B48C3EE8690CEAA39C984535BF4B068EC746316399723AFD23CA3F2D04F
502438C5C9C22EFEED4CBE1C71D232958E01C21D34570E4333B08513D8D2B5E1
F320CFFDF00949E7140A27DD6BB2B9A2834C19C84BE776A6FC24AA269E9CF1C6
ACDEF1CB925DEF25938AF7> |-
/o <1C60D8A8C9B7931D87F66277262B25AB6A9B20DB6E824F9F14CF3973ACF5
1CEF873FF7998ECF724D0B7A21509B1D2D922FF9013B6B15F1E80D05CA556210
980B73F42C6B39CA4ED92548D17F70D3811677AAAF1BE601768F025D63AC657C
78602FB825D069CC7C6A5B6DDBDE1127A1143DE290C9D6C4F4EDB1D9162F546E
8AD36BFED349018140472FBC7F21E6596E1F70B004B781B68E58DF43D1202F98
5458DFA6A0F793807EA16ADE06F8BE0DB9ADA4D7F6E86BA79CF69591EC17DA41
418A3E2E1C579FE114426EAB4BA5BCBEBD2757A6B009A346EE740F7B3E6150F2
82CB35878E1E1B5323C6819C1B5E206E9D3BB15830A97BEE15AA70C3190F1441
E97695F93D14ADD7AFEF9266AAA9A55839FBA17F42F57652318649A4D856E16D
2C8F3C6F77CEC3A5F278E2BB894BD6A53FFFCAB2A078245DF62AF95AB67EB379
50591921618F15198B1A9746B19DFB20586046E50986D643DC108F18F28777B5
159ADD9E53DA38F3A7E021F81A51AE56F6059A819BD9F227137137F6E0F03950
0ABFF2D95F16DB5032C9D6118AC65906E2BCEC5248779E3C4853A2813521386C
DBAB5CBF776F56D91DAB9F0EA6CB618D72F4DAA893860BAADA9BE38AFA379870
99947DA745A0480C0EB1FB551208A44A0F1E01DF4FA0239FF8FD9AE699FC1869
829DC6A5B29DFA6479EF738D5A48360FA35B7D609A5BDD4DF68CACCF215761DC
70> |-
/p <1C60D8A8C9B7931DEF5DD2FF55B7C862C6F9C471BCEFDECC7CDB52495444
685A3F70069486B9FA835E4A5CCEBD4EDE0419035E4BD05AB36E336369D39B7E
35F3A8BFA2F4AE6BD05341D2C7A5577B3B40D7DA521BA1921E4BE8B406CE504C
99CBEDD68FC31EAC0200C7853F563BDA6D22C379EBAADFD1AEC7A008C007E704
AAD9EF3269D33C81669E556F18A9ED1380F1F1DE7C2A70A59C5664F1E39A9BDB
FCAEF378CAFEAE8843D7F8B89FAA7BDE4F8F86EAE2D45F23DE7759882071F572
B98AE57E78F3B5BD96D753AE857FEB21DB1B2DB91AF634B8D27934F87EBAF5F2
44E42DA7CF29495B9C23585211BF997612FEFF4E25FE2A218C14D3692A805694
0D56BE9021EFD8DE6030EB27536C403EE9E58D01997ADFE8286BF69EEE4FE829
3D698C08362934EE9589F88143708E0667D96838DE7D65CA8014E134AE07DC85
80635DF5431B1C8F8A295BFB88A80798913F58FA37EBB8CDEE4FF4A1842E5B36
070CEC1FF5918D08AC892C1827E317AC64ACF2536D0EEDB18B8D678E8F8A8993
88B81117C76A41CC8F50582B1EC76387909269F4CDB992A11FA27F035651CB31
B245D5C8A46FCAB7F8A5197B93CDE82536245BC87A0F7D63C4B0B92865E2547C
02C32E48F8DD41C809AF146608B5C4612B7C46EADFDCD3C0AB4CF528136FA570
0F2AAE3D50CA5C7D2E8916CBE6D638364BC093E349387E139C01A081E179F58F
B94A14A5E868354C92E914B5220AA4856FE15ACFB0208ED3194F060D2E428FA8
7F5445B1DBD6FF1AC8C9AB461B1FCFAF442979376C> |-
/q <1C60D8A8C9B7931D87E1533F11D9A455C108A085F1BAD1484E27C8EB3D8D
7C0E15E055863DC18ABDA18F3E13D708CABB493AB0A0FA331B7E3D92BBDCD6F6
6E5F69578E5828F32EAD2A00A618DB8A5478249843E5034363A57C6DB3055159
B424DF444FAA34EB9D309D916D7090F7259EAD56FF23B60E5E70DBD7B4DF0E1E
79EC575D6AC224D9A370D5AEC27F285E7F1D0143F38FE9C91E345498907210E5
F90BD897A5CF2B9243CA3F629BA3EB16F275E7EFE755039A9FFDEBCF8EAA0C54
003230830A2680B295030459160AF8AC597634CF66541716B101EB2D1CFD4DE1
4B7A22B009FBD5082D318A672648B70A65AD69F8DE45FD09DC18B751C3856E30
1C2BE04527D72DEA7B8D2FE17ECCA628A892E32A6931C8A0D363C4DD4C5EECE2
229F896D7B5E685EA46D04C46E42870581985DA49B11412F9C331666A3212DF9
4F7CC2E0A58EC215C7CBC70BD028172F0E743566DAEA73FF95D1A8EACF212C2C
F3E8A745CA6A7294A862262F55CAD08EDB51F0093695DA6CF668627A52E8948F
175D7EE1B2A13BF81D9E9B3CC9FF2B1120D950D0E2871DAAF18DE7A00AF7CA40
CB12F2760470570589F252435681052B7E2EDB3E5CB9EE07D0E4936DC90665DB
D2D52846875F115FD5BAB912177835271D606C16243C2B8CBE0D55043C53DA1D
F310B591D9D2A4799F5EC0D844CD87AEB2C98F33B3709EEB6BE621D19928B5CC
29C2A02E4342553294585B77E73A8EA1D7BCB18C3A82> |-
/r <1C60D8A8C9B73A4164D44B35A75688F60B079BF5CE4C40E2E71866121DD3
AEC53BEBFA2BCF857F44551697D6C84410776A82FAD963BE79ECAB1A56EFFE0D
12322DC60EC793E1297C9F60829D52B03E56B445428294185613BC9914C76840
B1CED66D4D93A36C2935890C8AF74E1E2FB8C70937A039FD8A9D90FAB2ED20F3
46E47C94E91DF535097BD159998D2A09D4F2EDFB35E0F392BBDEF118C2D3E2D0
4A0219D1AAC021436BB11365815D54FBA2D0EFF34142E5B3275D43167DAF2809
C40A3924D7F9902EB9540B1514097A9DD63010CF9BFFADFA467B57175D9EBCC1
6000E2F5C11C6E7DB71FCE2CCF0988DC59FD13673F17D9214DA8027E8E2846DB
2BC2FB3015F019A7537E79988923187DB4C2C22F41199A9AD4E2C91B42FAC2D1
E36FF1B4E479D741B39B462CD5CA57F200> |-
/s <1C60D8A8C9B73A41220C0B294CAD134EB424EA0ED13620A0273A992DD34A
2CF3153CBD7FDA74F41974B8FF93ACE6D643B52169465E99064CA7BACEA2535F
33282B99AA1E9D95EB4225980F01EC33ADA8A923246D241FC9A63CBA5BDFA907
BD3549FD74DB052805CBF893EBB9A96129C0A3DEC1F92700B4673770B18518DD
A25F43B2FEDB831672E47B8F5B29DE1C247D6E4CFFE9491ED4059D0A5575222A
F752516E46D2AE281A93D67AB54A6022B85FE8F768DAC9A6B7C6A25E431D8437
4A3BD0C9A50DBA269582527052311FA56797E279077BB5230124111642099981
A101344155DF13158EFCECE0E4CF8D7925A5465BAB473E727D6389F590F1679B
FFBF4E54F3A0F2BC316B4C307610C7070036E2F9EAD58663D49EDB94CDE4D834
279C28A3260DCECB3D2C62A72F125CF808C4B9AF1C13C826C7310171E574707D
47BF74E308CAE3033B1E245CBC0DF2137D456E661654A278CDE9C1A7378F99CA
9B1123AB93405A4BA277B51111F6C8DDCF07780768E74703EBFCF98A37CAC480
3648D94CEBEFAB1E30C901A04727A4613656172F4ACFAA9B25713C932EA09DDB
5A01380E3B3416122A9DE21F01E7A26AE0B37DE214C7221F5E67A858BA857429
3FAB5B8B714ED2C23213BB9A9F68A9F200B07775698F757083D7FA2F3C4862C1
8183001F4215D1E88EC8A1109BECF3C4547134FE5EE5DF801C46D623BBA4C4A2
FD5C180A97D7B8A6BFB57B> |-
/t <1C60D8A8C9B81F2C3ABA72340763E4EC80475731494962D1F2F462D253E7
79B0BD79D12FEEAB992917F616DDBA25CDD31014D0BFDE9B73E6CF8445D7F1E5
B8FB53078D4AA131DC975774890D06773058EB1A60FB073954751236CF49F227
A05A0A6784680DFA76FBA7A64E1080E13C0CEC62B2D1C953651A35703A112976
AC6E4E5FE957311D5D36622604F4EB2256CBCCFF65B0A8E0DB6E0A0B533CBE6B
250E1C8653EE1E7469907EF632D2806E1FD1F3AF4AAD84E14C835D44984843B6
15E140E4B50CB3B87D271E669EDEE26A3E> |-
/u <1C60D8A8C9B7931D873B28E233589EF1869244D1D21768542C31EF596A07
51A6C34B37BCE90953D42A9DE5EE57A58036BA1D36E4422E0647C83D76ADCA5E
F8D8DB857F718F1CA1779F930AF740382A6A2DD6D698A7E01E12F02F225A88D0
51CB0B08C5ACF3AADA492BFF764254B76AAB85CCD47290758FF0A8D6E81C5DFB
C8369C37CAA739D17768775F27AA0A5C849AB1AFE5B754EB46F92B72DA3DEA30
EEB0C06500AB501334C34E8A7504F75D6EB65476004CA07AAE7C3EFCC29604BA
1E89ED9455895F82E3F294A8F3357D711F42B6D5CC942618CE61D8129755AEBF
BF8F0606286BD1892A885AAA79132350F0A5E66E93D77EF59BA1BCE51A43A64D
D32B223B79FB910EEF38519B51B3F7B091F851C49713277656D07A40B1070749
D4803A0BF51B99C551A53C859D8A287BA9BF8C1B286B5A65613E9A> |-
/v <1C60D8A8C9B7A73D8E81BC7CB567DD3A4349FC10025A82BF99938258AB62
75A17E466931A33098EE0FEECD95D9D1B05E8D0654CC6F31FCDAEBE16B8A9D6B
DE3E2E276D6C7F8FBAFDF357E62A8248B3F7128DAA01E862FB9B674A1DD0708E
DC01A37D9AA3052131A6D9A0ECBF69BB7C62F64BA0CB7800089717C7C9A5EC3A
0B40B34EDAF3239CBD973AA5ABF5630999934412DA1410C412799717AA8CD6D3
4325581152051CC15D0BC5835BDB13B2B160BCC707482CCE34F6565876E5AA09
60> |-
/w <1C60D8A8C9B603553791AB11408C364981E545B2CEF5085C5D65AAAC1B18
CB0F2840AE8CBF7259E02DBF40E28B30E68E806956C55D2FBFF8816AC63F07EC
26020F26FFE8F8C5FCC83B7FA0F90FBF77B36AB03757E36EFB89AC9D378D1C4F
12DB31DF6FE0388B2322D8D07E1496FF1BD378A64793BF9499039A52D4A5BF18
7ECCD12FC75F29646D40A3FE35614C21CE5D3D89B765BF6E38C0F2D9523C60D0
473D12FBA12FC18D0596C89372242CBA97ECAF6FF479E3DF7145FDF127AA01AB
71DA4DC4AAFE39FD4568464F98CC2B50357A665D4F96464F99F76E652B7A759A
77E4D3BF5C2887448D26AEAB42870DC317DEEEF59C95AEFF5EDC1642A00CCAEA
B144257C90DD0D0753DA7BD8CA465F80B4A65FA9F38A3825873BE3711A12F920
CBE868510C3E7C8D45A754B6561DCA0548BDDC123C6E6B3F7A> |-
/x <1C60D8A8C9B7A73D84919A53FB2F6142119C0B9FE7807E66DE8E738D8DA9
EBAB849A127985D2858A7F7EDA9612D8738B0CD593D96254D467C35809837E32
9A0EA676E8A977BFC8C7C30EF474254B8D2D79ED30D3293E152F3B9C42459BBB
204DF3508EAE043307A30C2FACCC2377C566BB139BA3A6D8CA1B45CD46187C84
716E2CA27E932CA6AF5366E86006789AB71D159E8797DDAA238B55905ED7E2C3
388A06C492C9BD541F6361FCE7E7A9F3BD780AB9865242D5B29253C309AEF3C3
13949D9396DBA7A7EB51AB3F75CFE95D2818A3EBC7FF4E272BEFE6D1C7F57316
353803733CFCFC9508C0EC058485A4555B0C18585E704B26AD6B69789F4235B5
445846434A514865191A6D3C41149E9196A34EC7C627FF6B092E3F3A9BB1D3A9
419B11C8E101A7FEDD1E80F5FCDE46F49D623703FC743BB1537B4E049C109FE8
D7E0A0719308CFD463B460724CAD00E52D25F855D61B8FFB20BDFB5F2AACA2F3
7D027E9EC694CF79CCEB> |-
/y <1C60D8A8C9B7A73D8E81BC7CB2FB65E1DB3A58C24955B8FF28ED746E3C32
CE5D6E4CDDFB3D97886BE1F07A93C300D536CB94DD214329D16ACB839646F833
A4E078856C5FE6DC8A4563928C41C84A711D35128A04DFE6D2BF050A3EFC2ED4
C1B232FFBC43C96F608824673E8043179302CEC5EAE718CB44B414FD0AADED79
0F7E077C30CAE57B7F1DE8ABBB3F7818F790C3420E75E2C929F1F00D7AD80A77
E19482E50AABBFB32349F3C629F047E16030A3D675C95F9C3816FE5CAD9A3D30
CADC90E51213F2126F02DB873B8959093ED75A1B4E667E17689E660BD0B16807
EA4241F1CBF472BC780B6D64289B29E2944815ACA513DB3306F5A76DA57A8E41
1BE809D8D7582C519CA406424C7282BDA5C9A2432AD541158041979CF6581CF3
DD8E95B6800741EF97BB9A3063CD20E8C29E7F31DD92B59C6BCBE7326E457C8A
32F6439ED92757F71DEF6A77D2DB2888FAADD0EBB4729B7A304233AF3BDD1213
EC1B83882C009720DB214F8B2ACDD91C295D4723797540A608CF496DF7DE03A4
2BB29CBA94008921C5446F703CB47652079C16E5D9E20CF38DA49171E8> |-
/endash <1C60D8A8C9B7A73DB62A0F72E3FBFF0DA45CD2F756FFB5> |-
/.notdef <1C60D8A8C9C4A637> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
reset_gvm
/NQHFPJ+AdvTimes /XYEBAA+AdvTimes findfont ct_VMDictPut
/NQHFPJ+AdvTimes*1 
[37{/.notdef}rp /percent /.notdef /quoteright /parenleft /parenright 2{/.notdef}rp /comma 
/hyphen /period /.notdef /zero /one /two /three /four 
/five /six /seven /eight /nine 7{/.notdef}rp /A /B 
6{/.notdef}rp /I 4{/.notdef}rp /N /O 2{/.notdef}rp /R /S 
/T 2{/.notdef}rp /W 3{/.notdef}rp /bracketleft /.notdef /bracketright 2{/.notdef}rp 
/quoteleft /a /b /c /d /e /f /g 
/h /i /.notdef /k /l /m /n /o 
/p /q /r /s /t /u /v /w 
/x /y 55{/.notdef}rp /endash 78{/.notdef}rp]
NQHFPJ+AdvTimes nf
NQHFPJ+AdvTimes*1 [9.9626 0 0 -9.9626 0 0 ]msf
59.6409 675.951 mo
(compositionsattheinternuclearequilibriumsepara-)
[4.35362 5.49937 8.18932 5.49937 5.49937 3.83555 2.68995 3.31747 2.68995 5.49937 5.49937 8.70725 
4.9813 8.16927 3.31746 5.49937 9.21536 2.68996 5.49937 3.31747 4.35361 3.83556 5.49937 5.49937 
4.35362 2.68994 4.35362 4.98129 8.70726 4.35362 5.49937 5.49937 2.68994 2.68994 2.68994 5.49937 
3.83556 2.68994 5.49937 13.081 3.83551 4.35364 5.49939 4.98129 3.83554 4.98129 0 ]xsh
59.6409 687.966 mo
(tionsinTable7,forwhichthecorrespondingexper-)
[3.31747 2.68995 5.49937 5.49937 8.1095 2.68995 9.72352 6.63509 4.98131 5.49937 2.68994 8.59769 
4.98129 6.92407 3.31747 5.49936 8.07962 7.15317 5.49937 2.68994 4.35362 9.78329 3.31747 5.49937 
8.58772 4.35362 5.49937 3.83554 3.83556 4.35362 3.83554 5.49937 5.49937 5.49937 5.49937 2.68994 
5.49939 9.23532 4.35361 4.98132 5.49936 4.35361 3.83557 0 ]xsh
59.6409 699.931 mo
(imentalresultscanbeavailableintheliterature)
[2.68995 8.18932 4.35362 5.49937 3.31747 4.9813 10.0324 3.83554 4.35362 3.83554 5.49937 2.68995 
3.31747 11.168 4.35361 4.98129 12.8319 5.49937 11.6164 4.98129 4.98129 4.98129 2.68996 2.68994 
4.98131 5.49937 2.68994 11.6861 2.68994 12.782 3.31747 5.49937 11.706 2.68994 2.68994 3.31747 
4.35364 3.83551 4.98132 3.31744 5.49939 3.83557 0 ]xsh
59.6409 711.946 mo
([15,16,28,29].)
[2.68995 4.9813 4.9813 2.68995 4.9813 4.98129 2.68995 4.9813 4.9813 2.68994 4.9813 4.9813 
2.68995 0 ]xsh
331.65 78.1752 mo
(TheA)
[6.6351 5.49936 8.04974 0 ]xsh
true set_gvm
%ADOBeginSubsetFont: JMMBAA+AdvMT_SY Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2016 Adobe System Incorporated. All rights reserved.
12 dict dup begin
/FontType 1 def
/FontName /JMMBAA+AdvMT_SY def
/FontInfo 6 dict dup begin
/ItalicAngle 0 def
/BaseFontName (AdvMT_SY) def
/WasEmbedded true def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 48 /zero put
dup 135 /thorn put
dup 255 /C0 put
def
/FontBBox {-20 -947 1114 770} def
end
systemdict begin
dup /Private
7 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [0 0] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
4 dict dup begin
/zero <1C60D8A8C9B8666CCB97C92EC3C49C7A3DEDDBC6EA51F64B5F1416CD9
5082251C36075F9247038BFE3B3> |-
/thorn <1C60D8A8C9B6F715E80DD8CB5DE05B21EA30B3A86B2383CE050E36E2
6CF9F24D75DCEB0035189173C05429D7> |-
/C0 <1C60D8A8C9B6F715E82934161B46F4CD04BAB3BCD607> |-
/.notdef <1C60D8A8C9C4A637> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
reset_gvm
/NQHFPK+AdvMT_SY /JMMBAA+AdvMT_SY findfont ct_VMDictPut
/NQHFPK+AdvMT_SY*1 
[48{/.notdef}rp /zero 86{/.notdef}rp /thorn 119{/.notdef}rp /C0 
]
NQHFPK+AdvMT_SY nf
NQHFPK+AdvMT_SY*1 [6.9738 0 0 -6.9738 0 0 ]msf
359.49 74.6095 mo
(0)sh
NQHFPJ+AdvTimes*1 [7.4718 0 0 -6.641 0 0 ]msf
361.814 73.7592 mo
(3)sh
true set_gvm
%ADOBeginSubsetFont: ZLRAAA+AdvPi1 Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2016 Adobe System Incorporated. All rights reserved.
12 dict dup begin
/FontType 1 def
/FontName /ZLRAAA+AdvPi1 def
/FontInfo 6 dict dup begin
/ItalicAngle 0 def
/BaseFontName (AdvPi1) def
/WasEmbedded true def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 68 /D put
def
/FontBBox {14 -323 958 824} def
end
systemdict begin
dup /Private
7 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [0 0] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
2 dict dup begin
/D <1C60D8A8C9B64FADB56EC1B33DA54F06AE841A1BF4221E4C9B539D14B733
5A34AF45B85B82E7F9F94CD277E372F13B3D236FBFF44F29A4F2DF5692008A13
6B3E1023113B26015908581D5CF192FC309468255135B1640C811818B954DADA
A9F6D9252D67BE7BD1035A48> |-
/.notdef <1C60D8A8C9C4A637> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
reset_gvm
/NQHFPL+AdvPi1 /ZLRAAA+AdvPi1 findfont ct_VMDictPut
/NQHFPL+AdvPi1*1 
[68{/.notdef}rp /D 187{/.notdef}rp]
NQHFPL+AdvPi1 nf
NQHFPL+AdvPi1*1 [9.9626 0 0 -9.9626 0 0 ]msf
365.556 78.1811 mo
(D)sh
NQHFPJ+AdvTimes*1 [7.4718 0 0 -6.641 0 0 ]msf
372.189 79.882 mo
(u)sh
true set_gvm
%ADOBeginSubsetFont: PHMBAA+AdvMT_RM Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2016 Adobe System Incorporated. All rights reserved.
12 dict dup begin
/FontType 1 def
/FontName /PHMBAA+AdvMT_RM def
/FontInfo 6 dict dup begin
/ItalicAngle 0 def
/BaseFontName (AdvMT_RM) def
/WasEmbedded true def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 3 /C3 put
dup 6 /C6 put
dup 10 /C10 put
def
/FontBBox {-104 -208 1000 760} def
end
systemdict begin
dup /Private
7 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [0 0] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
4 dict dup begin
/C3 <1C60D8A8C9B6CAC2945C1121044BFDF926752F2FFCC9980E8610980CA56
786EB39559792087F449F1A798766568D97DB3EACD2370C02EB7BB70AEF06F09
06A07A882807CCFF3F1EA28BA3528104FB1F837C36CB6149EF53E> |-
/C6 <1C60D8A8C9B6ED05DA4ADC71A5579E5D307BF8176F6353DA869F593FF2F
513FAD95EA0A3295FADE59ECC4679B8C4542EBB40E1189C035BFD5F0431A01F7
2A4552D9C15954D9C> |-
/C10 <1C60D8A8C9B6F715E9A7206A8F345539CA25073E5D97CA6431938CA602
526BEC4D8F2BEFE8700D05284F8A1FC6385D3683D9CD322749A7C59A85F38F6D
57D2307F6A3936EC71D44EEFDC795C0C9ACAA1B4ABBDEB9B63DB438D7A73FF7D
923A4659E793388784F6BB53E4DEA75BA1DC1885311181E3D0897F6BE8> |-
/.notdef <1C60D8A8C9C4A637> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
reset_gvm
/NQHFPM+AdvMT_RM /PHMBAA+AdvMT_RM findfont ct_VMDictPut
/NQHFPM+AdvMT_RM*1 
[3{/.notdef}rp /C3 2{/.notdef}rp /C6 3{/.notdef}rp /C10 245{/.notdef}rp]
NQHFPM+AdvMT_RM nf
NQHFPM+AdvMT_RM*1 [9.9626 0 0 -9.9626 0 0 ]msf
380.013 78.1811 mo
(\003)sh
NQHFPJ+AdvTimes*1 [9.9626 0 0 -9.9626 0 0 ]msf
387.893 78.1811 mo
(-Sstatesplitsintothethree)
[3.31747 9.15564 3.83554 3.31747 4.98132 3.31744 8.07965 3.83554 5.49939 2.68994 2.68994 3.31747 
7.53165 2.68994 5.49939 3.31747 9.18555 3.31747 5.49936 8.07962 3.31747 5.49939 3.83554 4.35364 
0 ]xsh
NQHFPM+AdvMT_RM*1 [9.9626 0 0 -9.9626 0 0 ]msf
512.107 78.1811 mo
(\012)sh
NQHFPJ+AdvTimes*1 [9.9626 0 0 -9.9626 0 0 ]msf
523.444 78.1811 mo
(states,)
[3.83557 3.31744 4.98132 3.31744 4.35364 3.83551 0 ]xsh
316.69 90.1462 mo
(A)sh
NQHFPK+AdvMT_SY*1 [6.9738 0 0 -6.9738 0 0 ]msf
324.34 86.5717 mo
(0)sh
NQHFPJ+AdvTimes*1 [9.9626 0 0 -9.9626 0 0 ]msf
326.664 90.1435 mo
(3,A)
[4.98129 8.50812 0 ]xsh
NQHFPK+AdvMT_SY*1 [6.9738 0 0 -6.9738 0 0 ]msf
347.868 86.5717 mo
(0)sh
NQHFPJ+AdvTimes*1 [9.9626 0 0 -9.9626 0 0 ]msf
350.135 90.1435 mo
(2andA)
[10.8293 4.98129 5.49939 11.2876 0 ]xsh
NQHFPK+AdvMT_SY*1 [6.9738 0 0 -6.9738 0 0 ]msf
390.387 86.5717 mo
(0)sh
NQHFPJ+AdvTimes*1 [9.9626 0 0 -9.9626 0 0 ]msf
392.712 90.1435 mo
(1,thespectroscopicparametersof)
[4.98129 8.50812 3.31747 5.49936 10.1718 3.83554 5.49939 4.35361 4.35364 3.31747 3.83554 5.49936 
3.83557 4.35361 5.49936 5.49939 2.68994 10.1817 5.49939 4.98129 3.83554 4.98129 8.18933 4.35364 
3.31744 4.35364 3.83557 9.66364 5.49939 0 ]xsh
316.687 102.109 mo
(whicharealmostthesameasthoseobtainedfrom)
[7.15317 5.49939 2.68994 4.35361 10.7995 4.98132 3.83554 9.60391 4.98129 2.68994 8.18933 5.49936 
3.83557 8.58768 3.31747 5.49936 9.60391 3.83557 4.98129 8.1893 9.63379 4.98132 9.07587 3.31747 
5.49936 5.49939 3.83557 9.62381 5.49936 5.49939 3.31747 4.98129 2.68994 5.49939 4.35364 10.7895 
3.31744 3.83557 5.49939 0 ]xsh
316.687 114.074 mo
(the)
[3.31747 5.49936 0 ]xsh
NQHFPM+AdvMT_RM*1 [9.9626 0 0 -9.9626 0 0 ]msf
335.108 114.074 mo
(\003)sh
NQHFPJ+AdvTimes*1 [9.9626 0 0 -9.9626 0 0 ]msf
343.048 114.074 mo
(-Sstatecalculations.AsseeninTable7,the)
[3.31747 10.7397 3.83557 3.31747 4.98129 3.31747 9.66367 4.35364 4.98129 2.68994 4.35364 5.49936 
2.68994 4.98132 3.31744 2.68994 5.49939 5.49939 3.83554 8 7.67123 9.10577 3.83554 4.35361 
4.35364 10.8094 2.68994 10.7496 6.63513 4.98129 5.49936 2.68994 9.67365 4.98132 7.94025 3.31744 
5.49939 0 ]xsh
316.687 126.039 mo
(present)
[5.49936 3.83557 4.35361 3.83554 4.35364 5.49936 0 ]xsh
true set_gvm
%ADOBeginSubsetFont: GHMAAA+AdvTimes-i Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2016 Adobe System Incorporated. All rights reserved.
12 dict dup begin
/FontType 1 def
/FontName /GHMAAA+AdvTimes-i def
/FontInfo 6 dict dup begin
/ItalicAngle 0 def
/BaseFontName (AdvTimes-i) def
/WasEmbedded true def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 82 /R put
dup 84 /T put
dup 97 /a put
dup 101 /e put
dup 108 /l put
dup 116 /t put
dup 120 /x put
def
/FontBBox {-253 -211 1078 766} def
end
systemdict begin
dup /Private
7 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [0 0] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
8 dict dup begin
/R <1C60D8A8C9B6035577A0590426DC70020B487B40BC93893CC2A5BE2CB29D
035DED48F68F9125F40D6FF2E3A1A06757A8CBE10E72F448CEB0333D6A917A83
F3C4CF62EC92947C6971E2F9731B07E2EC8E2A9F2DC5711F79AC868681FDDE3D
3DC69F2BC72AFDCCBD5FDAC288F163734B5E94BEF8949A662F93E89D9A1D4930
F7058BE3EAA0C81CD738A82E84B1B279D378D61DA9A36C76F1BE3E29E7CA2BCF
FF3C2072250B1C2D63734425692502DD16E64E5C118F0A3E7010799EC9943E83
115416A8D2135134EC2D41EFA01424B4141DC0D1A3E6C0BD04A994B9AD60B449
FB93928B1EDD472AF1E4EBE07E028BBBD71AE4418CAB2114DCF303377162DD21
AFCC727C6DE8E7443E9263FA68AB23AAE5CD50C4949385124F66D3170B9BFFA4
05FEAD1C7BE462DA7EB3D98FDF979AF131B12C2D6604B2A823EC398703F13F42
DAD17DB41E151330BE10D5617E462872A10DAC0FB23781E64245B23AF77E22E9
4DE6169929827CF0BB1C4265B5FE5007C98CA2BBFBE40113AC8AF252A812ACAD
D17DEBE4D6F93D4F642FDFD0E78D95B027560F3B725CE3212559373C724A060C
A9DB9E1D30D37A4F9FCAD65CB950EA98FAB34D7B76540F133F33587DB81050AC
C8036ECDD0984F50CAD529E46011268E10047878BEABA4101B4C0F469E39EE6B
973AFF6D93D1D5236EF4F63728D8D64B5D28A0B565> |-
/T <1C60D8A8C9B64FADBA3E639394DCF270E5AABD04EDB4C6D3070F93937CDD
74EBDC522AB5F06626E41BBED81505661B26F87775D32D67C42A839C8C20BD9D
5B46A9C0F7D3BE951DE45D946FCF1FEAF278F5E767CA7FF47C04FFFD6419256B
36DBA8B100F39C57D01E2B8D0DF4D34BDE92F77EAF145B452A59AA651B6A8AE0
167185C0BC4951345460F5C9B3614E0EB8BBDC12D4CAC0D6815DA75B46C92040
32EF2A63EACA209F218B353E9704CDA2A68730B36C22BBF17C076E7F6B0B9EF1
ECB8463FF50C0C46063B22AA10C82EE21E3AF81BBD2E8039B6D3BAF3277C0CD3
F9852214FF24D11176EAFF7BB858D84244298BAC880882D9F873B9BE48DC722E
988E99548F06C2EA3A8DB98AAF0ABC3D1DA4AEF1C3> |-
/a <1C60D8A8C9B7A73DB942D9CD4E94654999A0FFBBAEDD87A8EBC1066E1B8F
C5DA5BD29403C6F998A225B865BA9634C0A943052EC645224A2DF354D55D698C
70A88EB0A24C20B78F69DF7CAAE4CABD38C33827EB1BF9CEA6CD9EEE8E4683E9
D2AA02CD30F238D6BC58FC040631BFE2706DA26646003123DD024B3A177FEB8D
E7E4413EE0BC0BEC24F651E609E0EA3DBC21E71FD0B6C25E8E326F57F5D2734F
F48E2A7A9FB99F17A794316A0B28E413F714EFAF68379AA845584DBE41E32981
2151B0291F02EA475FFC6F786D80B9FE8E9C166C04646ECEAF1B7C82538F702F
E85BEDB50FC96AADA76F6391B7076B6865C2BCE926A17AC05E033283F9BFFCBB
F14B9DB56366C5F9C373504BD84C05BBC08DEE9FEF0BCB907D5A45D27350F462
08111646816A95A89BAD18C8E3ACBC8CA45AA93E473CD02D5104AF603E5BC3BD
9F3185B9FB5269601E8B7F2F572697B1869DCE22ED0C66CA91E0DCDCC603BC4E
084821B8556F3FF0B81F6D4A0CA63DE451EF452F483BD559ECDB844579E26F70
A066271D09C8DBC4C9433D6EBC007E07B0E2311BDA69C846C8F320E4BF456D86
460B32DABD7235E6C477A2EFB313B5543990AAE43752F5C36BDEEE7CCC58D25A
D5ED4CFD59C89FEB5F625C81AAA702CE51087995A5120829C3FE5F3553703679
40059FE16B6BE513C4150C4E9B377D06B3C4C826AE268239BE6EF4BE9B825EC8
16344044AB2CB8A019C1B1C8744330FBFF3A3E3081334B98CF6E4FE5BD2B64A2
DB68832F6A35C9C2D770949F9CE623EB2AA77E2AD0B24E16821F2E212FFFE85F
BE994E06356E20228E7E217FE893AF541F731BD321A70AC18B5CEBF76B749D6E
620C969E39ABB16A2E> |-
/e <1C60D8A8C9B766CA3C99E8265D59960815BEAB64D50A801632EC630137DD
2EE9621A15429255CB4B19E2C07211EDA31CBA6E1B293EC7C5B5A505CE854BE8
35C3E72E2D2BC7786E06D553EEF76ACD5BD02D183B64A29C58C4CF49606DDD93
06BF74D7C19EBA3F71AE990AEDA51E260BECFE0BFA67F3A528D82C770452F7B6
1EE5F75D1938A2FD186CE3381F448E38ABEFDF42BD865A578B6365B2B03CA017
E534630F1FB7C52586A4EB681075B1EC2B7AB69F4B51833B1BD11C8D6276ED12
887F579C2E0BFD4EB51ECE419CB0F3DEED975CF9A7E86E38E4501ADA0BDB8534
D1DC6596EF992F9D33211A75F62FB030FDAE3ADB1EA6C5F5B58615D3122B27D0
5D173E32B1A05A4DAAC32151435F383EEA268E4FB91C232C91B446B58D5CB5BA
1F5650FE2D24A53451BE8B861184DCA38C8C4114F7B100DD063876B2BD541A06
4E8898429F7117EB8E9B52D39A5BE59027101CBEE8AFF08AEB3838C0AEFBA98E
F839BFA0C101F11611C6AACAC7181F6E28333591FF052E75D43031A1FD28C36C
7149CF91FD958999994B2EA72D32CEC01B193CD3F72EA73D45C1D20F8A2E4DF3
DC0DFA828CB71FD396D19EBF9EDB7817DA600F380660CB1D112616304A8B0D47
4CF30D57092D2A023B6ADD3F57CA2939B5F25C4C96A7D1E90CB5A7A2EDE173BE
55F230C11FD0A5C6BF0E7275F12D4238798641BC3384C487BED7F1D50C3DEE1E
1EBD50154B7C5CABA8250AE2CC616E5017392FE27A4D98EB563843F9A37697E8
5AFF19> |-
/l <1C60D8A8C9B85C5CBA753D7B1DBF54A07E6F0E5CEB2F3F96AEBC22143751
CC17031F2F35BD41EA59FF17E810964ABA2912C54848B82E237BDEF95D250124
08259B631F749D694EA4D0F668495F5C37DC98A65682F1FC86B75D47AA213F26
646A7A196B645B3C91692EA44FA9F2D04EF59842BC27E05C3C34ED98AA02A500
AD8F1DD7AA297F1D30AB332A417A1579F2E1618DCF66FD92CAAA0CD207C55CC7
4B9BEB50DD2495233F34CC9DD2F482D2283B10AF1815898196285B873B772831
F04683681A9570EE7E5223138C2290B5779E618BF472A71AE15F4712CF8B1433
1F6A9C8E353B27B7AA9FDC7DBAEA583CF91D08173CD2365726> |-
/t <1C60D8A8C9B81F2C3AF5E56BD3249CC7B3D9AC50077F3F4CEC4146435A4A
4B8C92F2495B8FE85471F85EAB97E78B86CE86342140C80BE3A0868688EEFCA2
2E5A869191928970CE07C881D553DF4DEED4FA60783ABFAF6A1212AD1103D67C
5ED64C2286831E2F9ED3DD41F34AD47BE798F07D18B8396975053A908E2442ED
7C8AEEEC1EDA2834DDBD3F861C5C4E74DBB614F5B6915591202F724B348C95FE
12386D02E0F1EDBE2F52F640EE99D386A95B94F652F1D51AB59BFA669A807002
FC2F0CAB5386ECF6D6A2B45D24A668DF9B83D6262E5371AFB3B6F52496D82F20
A10DD23B83CB109AC462842DE0297796DF47534ACEFD8FC36660A04C37C9DA19> |-
/x <1C60D8A8C9B7931D87D00DF4A3172D331311646D8C5CAFCE4AECF176168A
5CBB367F627D3B89A9460C183E020EDF3079731B363015C65BCA829F162C0295
5C19FD9080708320160FE6A11100804B70B3A27B8854AB9A2CB500BA78EBA267
B1A0C5AB233C4D0202C784A5616A31304161324C9F35058F874E92779CE9CE01
A67590DB603E976D4A73B80CA702DD140F0F392A0286D3EEE6B24CEFB8EC0EBF
561BD00AB13238470E01C7D9AEB1931FA6133354FF227A7B0DAEFB9F18A1CA0A
5C5AFC6EA6E32FF21A1A15B39788B31E8A5408BCB9B408C6E620A95785568A7D
07BCBF0C749EC9F85434003C57F5EFD4F144E54EAFD228EEA3899736A82B76BB
B2C05F3D8CF5246F1743C9D846606DD7047F92CEBE3C2DAF4AA0E14FEF8BD618
08A89FAB217E64BA1817D65A7721E418882CBFCE6C2138BF6E72A002529EB02E
546E501F9E243208C6E18765255448D320114B113ED54878E9BEE43A8845CDE5
30D8BB955A814906C60182B76696C45017DAC6317995A1AB60F16742D1AF28B9
290ABF735D78BA4131C4902516BA76DA53894C72BD5C34789CE3C04D8586AC97
6313D5BFEDCC246BAB3AFCC84ED2EACD40DEE69BAC83A406D10A8A83C4BF24E7
59DCF2AA70EBC3C3038B856D61D79B1E460B638051160B4296972517CFF92A0C
53BCBAAB67511BBF3B50607EC3F95C982513B3DAB2DDEEF8DB8B217388FA1F68
556AA87FB7F2A64745680120CB8C77E231E8B575E089EBB0A9CE0AA7AFA5F190
DD3A282F80D391F8664FEF71DFC59BBC13276695DCBAEDF4765C0C2E2AA1E91A
FAB3> |-
/.notdef <1C60D8A8C9C4A637> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
reset_gvm
/NQHFPN+AdvTimes-i /GHMAAA+AdvTimes-i findfont ct_VMDictPut
/NQHFPN+AdvTimes-i*1 
[82{/.notdef}rp /R /.notdef /T 12{/.notdef}rp /a 3{/.notdef}rp /e 
6{/.notdef}rp /l 7{/.notdef}rp /t 3{/.notdef}rp /x 135{/.notdef}rp]
NQHFPN+AdvTimes-i nf
NQHFPN+AdvTimes-i*1 [9.9626 0 0 -9.9626 0 0 ]msf
353.31 126.039 mo
(R)sh
NQHFPN+AdvTimes-i*1 [7.4718 0 0 -6.641 0 0 ]msf
360.453 127.674 mo
(e)sh
NQHFPJ+AdvTimes*1 [9.9626 0 0 -9.9626 0 0 ]msf
363.742 126.03 mo
(,)sh
true set_gvm
%ADOBeginSubsetFont: YAZAAA+AdvMT_MI Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2016 Adobe System Incorporated. All rights reserved.
12 dict dup begin
/FontType 1 def
/FontName /YAZAAA+AdvMT_MI def
/FontInfo 6 dict dup begin
/ItalicAngle 0 def
/BaseFontName (AdvMT_MI) def
/WasEmbedded true def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 33 /exclam put
def
/FontBBox {-145 -208 1072 791} def
end
systemdict begin
dup /Private
7 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [0 0] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
2 dict dup begin
/exclam <1C60D8A8C9B678BD190DF7A6BE9A11C90073E38E5EE0DA5EB115753
D68014E07E05ED9897BD8D2153853CBA03D7D5E74261DCB73374C8367938C7E9
AECE57C409FA55212B90BA096D4FF29BA337D3905525D3CD3A0B25C00F7C2A8E
B90F5B5CE7BC80958F30CE26C8AA6DEE99F58E59D121F686B07A7C9CBDF9C776
40B9F054BC5AB2F8E39D6F94454214EC9> |-
/.notdef <1C60D8A8C9C4A637> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
reset_gvm
/NQHFPO+AdvMT_MI /YAZAAA+AdvMT_MI findfont ct_VMDictPut
/NQHFPO+AdvMT_MI*1 
[33{/.notdef}rp /exclam 222{/.notdef}rp]
NQHFPO+AdvMT_MI nf
NQHFPO+AdvMT_MI*1 [9.9626 0 0 -9.9626 0 0 ]msf
372.359 126.03 mo
(!)sh
NQHFPN+AdvTimes-i*1 [7.4718 0 0 -6.641 0 0 ]msf
378.765 127.674 mo
(e)sh
NQHFPJ+AdvTimes*1 [9.9626 0 0 -9.9626 0 0 ]msf
387.949 126.03 mo
(and)
[4.98129 5.49939 0 ]xsh
NQHFPO+AdvMT_MI*1 [9.9626 0 0 -9.9626 0 0 ]msf
409.837 126.03 mo
(!)sh
NQHFPN+AdvTimes-i*1 [7.4718 0 0 -6.641 0 0 ]msf
416.239 127.674 mo
(e)sh
NQHFPN+AdvTimes-i*1 [9.9626 0 0 -9.9626 0 0 ]msf
419.527 126.03 mo
(x)sh
NQHFPN+AdvTimes-i*1 [7.4718 0 0 -6.641 0 0 ]msf
425.027 127.674 mo
(e)sh
NQHFPJ+AdvTimes*1 [9.9626 0 0 -9.9626 0 0 ]msf
434.211 126.03 mo
(ofA)
[5.49936 9.18546 0 ]xsh
NQHFPK+AdvMT_SY*1 [6.9738 0 0 -6.9738 0 0 ]msf
456.605 122.401 mo
(0)sh
NQHFPJ+AdvTimes*1 [9.9626 0 0 -9.9626 0 0 ]msf
458.929 126.03 mo
(3andA)
[10.8891 4.98129 5.49936 11.3972 0 ]xsh
NQHFPK+AdvMT_SY*1 [6.9738 0 0 -6.9738 0 0 ]msf
499.351 122.401 mo
(0)sh
NQHFPJ+AdvTimes*1 [9.9626 0 0 -9.9626 0 0 ]msf
501.676 126.03 mo
(2)sh
NQHFPM+AdvMT_RM*1 [9.9626 0 0 -9.9626 0 0 ]msf
512.565 126.03 mo
(\012)sh
NQHFPJ+AdvTimes*1 [9.9626 0 0 -9.9626 0 0 ]msf
526.174 126.03 mo
(states)
[3.83557 3.31744 4.98132 3.31744 4.35364 0 ]xsh
316.69 137.995 mo
(areinexcellentagreementwiththemeasurements)
[4.98129 3.83554 10.8592 2.68994 12.0448 4.35361 4.98132 4.35361 4.35361 2.68994 2.68997 4.35361 
5.49939 9.86288 4.98129 4.98132 3.83554 4.35361 4.35364 8.1893 4.35364 5.49936 9.85294 7.15317 
2.68994 3.3175 12.0149 3.31747 5.49936 10.8592 8.18933 4.35364 4.98129 3.83554 5.49939 3.83551 
4.35364 8.18933 4.35364 5.49939 3.31744 0 ]xsh
316.69 149.96 mo
([15,28].ThecalculatedsplittingenergybetweentheA)
[2.68994 4.98129 4.98132 2.68994 4.98129 4.98129 2.68994 5.28024 6.63507 5.49939 6.914 4.35364 
4.98129 2.68994 4.35361 5.49939 2.68994 4.98129 3.31747 4.35364 8.07968 3.83554 5.49939 2.68994 
2.68994 3.31744 3.3175 2.68994 5.49936 7.59152 4.35361 5.49936 4.35364 3.83554 4.98129 7.53174 
5.49939 4.35361 3.31747 7.15317 4.35361 4.35364 8.0498 3.31744 5.49939 6.94391 0 ]xsh
NQHFPK+AdvMT_SY*1 [6.9738 0 0 -6.9738 0 0 ]msf
542.494 146.326 mo
(0)sh
NQHFPJ+AdvTimes*1 [9.9626 0 0 -9.9626 0 0 ]msf
544.819 149.954 mo
(3)sh
316.685 161.919 mo
(andA)
[4.98129 5.49939 8.96634 0 ]xsh
NQHFPK+AdvMT_SY*1 [6.9738 0 0 -6.9738 0 0 ]msf
343.786 158.288 mo
(0)sh
NQHFPJ+AdvTimes*1 [9.9626 0 0 -9.9626 0 0 ]msf
346.11 161.917 mo
(2)sh
NQHFPM+AdvMT_RM*1 [9.9626 0 0 -9.9626 0 0 ]msf
354.558 161.917 mo
(\012)sh
NQHFPJ+AdvTimes*1 [9.9626 0 0 -9.9626 0 0 ]msf
365.727 161.917 mo
(stateis379.25cm)
[3.83554 3.31747 4.98129 3.31747 7.79074 2.68994 7.34238 4.98129 4.98129 4.98129 2.68994 4.98132 
6.63507 4.35364 0 ]xsh
NQHFPK+AdvMT_SY*1 [7.4718 0 0 -6.641 0 0 ]msf
440.787 157.495 mo
(\377)sh
NQHFPJ+AdvTimes*1 [7.4718 0 0 -6.641 0 0 ]msf
446.57 157.495 mo
(1)sh
NQHFPJ+AdvTimes*1 [9.9626 0 0 -9.9626 0 0 ]msf
450.312 161.917 mo
(,whichisverycloseto)
[6.17685 7.15317 5.49939 2.68994 4.35361 8.93649 2.68994 7.34238 4.98129 4.35364 3.83554 8.42838 
4.35358 2.68994 5.49939 3.83557 7.83057 3.31744 0 ]xsh
316.683 173.882 mo
(theexperimentalvalesof383[15]and382.9cm)
[3.31747 5.49936 7.452 4.35364 4.98129 5.49936 4.35364 3.83554 2.68994 8.18933 4.35361 5.49939 
3.31747 4.98129 5.82816 4.98129 4.98129 2.68994 4.35364 6.97375 5.49939 6.40588 4.98129 4.98129 
8.0697 2.68994 4.98132 4.98129 5.82816 4.98129 5.49936 8.62762 4.98132 4.98129 4.98129 2.68994 
6.62515 4.35361 0 ]xsh
NQHFPK+AdvMT_SY*1 [7.4718 0 0 -6.641 0 0 ]msf
519.137 169.457 mo
(\377)sh
NQHFPJ+AdvTimes*1 [7.4718 0 0 -6.641 0 0 ]msf
524.92 169.457 mo
(1)sh
NQHFPJ+AdvTimes*1 [9.9626 0 0 -9.9626 0 0 ]msf
531.779 173.879 mo
([28].)
[2.68994 4.98132 4.98126 2.68994 0 ]xsh
316.687 185.844 mo
(Asfortheexcitationenergytermreferredtothe)
[7.67123 10.1817 3.31747 5.49936 10.2315 3.31747 5.49939 10.7397 4.35361 4.98129 4.35364 2.68994 
3.31747 4.98129 3.31747 2.68994 5.49939 11.8854 4.35364 5.49936 4.35361 3.83557 4.98129 11.3275 
3.31744 4.35364 3.83557 14.5753 3.83557 4.35361 3.31747 4.35364 3.83551 3.83557 4.35361 11.9153 
3.31744 11.8754 3.3175 5.49939 0 ]xsh
316.687 197.809 mo
(groundstate,onlytheresultsobtainedbyNarasimham)
[4.98129 3.83554 5.49939 5.49936 5.49939 7.96014 3.83554 3.31747 4.98129 3.31747 4.35361 5.19055 
5.49939 5.49939 2.68994 7.46198 3.31747 5.49936 6.83432 3.83554 4.35364 3.83554 5.49936 2.68994 
3.31747 6.34613 5.49936 5.49939 3.31744 4.98132 2.68994 5.49939 4.35361 7.96011 5.49939 7.48193 
8.1893 4.98129 3.83557 4.98126 3.83557 2.68994 8.18933 5.49939 4.98126 0 ]xsh
NQHFPN+AdvTimes-i*1 [9.9626 0 0 -9.9626 0 0 ]msf
316.687 209.714 mo
(etal)
[4.35361 5.7384 4.98129 0 ]xsh
NQHFPJ+AdvTimes*1 [9.9626 0 0 -9.9626 0 0 ]msf
334.49 209.714 mo
(.[28]areaccurate.Obviously,thepresentresultsof)
[5.10089 2.68994 4.98129 4.98132 5.1507 4.98129 3.83554 6.83432 4.98129 4.35364 4.35361 5.49939 
3.83554 4.98129 3.31747 4.35361 5.14075 7.67126 5.49936 4.98129 2.68994 5.49939 5.49936 3.83554 
2.68994 4.98132 5.1806 3.31744 5.49939 6.77454 5.49939 3.83551 4.35364 3.83554 4.35361 5.49939 
5.78821 3.83551 4.35364 3.83551 5.49939 2.68994 3.3175 6.28638 5.49933 0 ]xsh
316.687 221.679 mo
(A)sh
NQHFPK+AdvMT_SY*1 [6.9738 0 0 -6.9738 0 0 ]msf
324.34 218.099 mo
(0)sh
NQHFPJ+AdvTimes*1 [9.9626 0 0 -9.9626 0 0 ]msf
326.664 221.671 mo
(3andA)
[10.5404 4.98129 5.49939 11.0585 0 ]xsh
NQHFPK+AdvMT_SY*1 [6.9738 0 0 -6.9738 0 0 ]msf
366.406 218.099 mo
(0)sh
NQHFPJ+AdvTimes*1 [9.9626 0 0 -9.9626 0 0 ]msf
368.731 221.671 mo
(2)sh
NQHFPM+AdvMT_RM*1 [9.9626 0 0 -9.9626 0 0 ]msf
379.271 221.671 mo
(\012)sh
NQHFPJ+AdvTimes*1 [9.9626 0 0 -9.9626 0 0 ]msf
392.482 221.671 mo
(statesareveryclosetothem[28].)
[3.83554 3.31747 4.98129 3.31747 4.35364 9.39465 4.98132 3.83554 9.95261 4.98129 4.35361 3.83557 
10.5305 4.35364 2.68994 5.49936 3.83554 9.92273 3.31744 11.0784 3.31747 5.49936 4.35364 13.6987 
2.68994 4.98126 4.98132 2.68994 0 ]xsh
316.686 233.636 mo
(Accordingtothese,weconcludethatthespectroscopic)
[7.67123 4.35364 4.35361 5.49939 3.83554 5.49936 2.68994 5.49939 7.76086 3.31747 8.24905 3.31747 
5.49936 4.35364 3.83554 4.35361 5.45956 7.15317 7.13318 4.35364 5.49936 5.49939 4.35361 2.68994 
5.49939 5.49939 7.14313 3.31747 5.49936 4.98132 6.04721 3.31747 5.49939 7.11325 3.83554 5.49939 
4.35361 4.35361 3.3175 3.83551 5.49939 3.83557 4.35358 5.49939 5.49939 2.68994 0 ]xsh
316.686 245.601 mo
(parametersofA)
[5.49939 4.98129 3.83554 4.98129 8.18933 4.35361 3.31747 4.35361 3.83557 8.75705 5.49939 8.21909 
0 ]xsh
NQHFPK+AdvMT_SY*1 [6.9738 0 0 -6.9738 0 0 ]msf
390.161 241.967 mo
(0)sh
NQHFPJ+AdvTimes*1 [9.9626 0 0 -9.9626 0 0 ]msf
392.485 245.595 mo
(1)sh
NQHFPM+AdvMT_RM*1 [9.9626 0 0 -9.9626 0 0 ]msf
402.348 245.595 mo
(\012)sh
NQHFPJ+AdvTimes*1 [9.9626 0 0 -9.9626 0 0 ]msf
414.881 245.595 mo
(statetabulatedinTable7are)
[3.83554 3.31747 4.98129 3.31747 9.2652 3.31747 4.98129 5.49936 5.49939 2.68994 4.98129 3.31747 
4.35364 10.3711 2.68994 10.401 6.63507 4.98132 5.49939 2.68994 9.27515 9.80316 4.98132 3.83551 
0 ]xsh
316.69 257.56 mo
(reliable.)
[3.83554 4.35364 2.68994 2.68994 4.98129 5.49939 2.68994 4.35361 0 ]xsh
331.653 269.526 mo
(TheA)
[6.6351 5.49936 6.34616 0 ]xsh
NQHFPJ+AdvTimes*1 [7.4718 0 0 -6.641 0 0 ]msf
357.846 265.098 mo
(3)sh
NQHFPM+AdvMT_RM*1 [9.9626 0 0 -9.9626 0 0 ]msf
361.587 269.52 mo
(\006)sh
NQHFPK+AdvMT_SY*1 [6.9738 0 0 -6.9738 0 0 ]msf
369.128 265.891 mo
(\207)sh
NQHFPJ+AdvTimes*1 [6.9738 0 0 -6.9738 0 0 ]msf
369.128 272.3 mo
(u)sh
NQHFPM+AdvMT_RM*1 [9.9626 0 0 -9.9626 0 0 ]msf
377.065 269.52 mo
(\003)sh
NQHFPJ+AdvTimes*1 [9.9626 0 0 -9.9626 0 0 ]msf
384.945 269.52 mo
(-SstatesplitsintoA1andA0)
[3.31747 7.51181 3.83554 3.31747 4.98132 3.31744 6.42584 3.83557 5.49936 2.68994 2.68994 3.31747 
5.88785 2.68994 5.49936 3.3175 7.4819 7.67126 7.06348 4.98129 5.49939 7.49188 7.67123 0 
]xsh
NQHFPK+AdvMT_SY*1 [7.4718 0 0 -6.641 0 0 ]msf
505.984 265.098 mo
(\377)sh
NQHFPM+AdvMT_RM*1 [9.9626 0 0 -9.9626 0 0 ]msf
513.751 269.52 mo
(\012)sh
NQHFPJ+AdvTimes*1 [9.9626 0 0 -9.9626 0 0 ]msf
523.445 269.52 mo
(states,)
[3.83557 3.31744 4.98132 3.31744 4.35364 3.83551 0 ]xsh
316.691 281.485 mo
(the)
[3.31747 5.49936 0 ]xsh
NQHFPN+AdvTimes-i*1 [9.9626 0 0 -9.9626 0 0 ]msf
332.223 281.485 mo
(R)sh
NQHFPN+AdvTimes-i*1 [7.4718 0 0 -6.641 0 0 ]msf
339.364 283.126 mo
(e)sh
NQHFPJ+AdvTimes*1 [9.9626 0 0 -9.9626 0 0 ]msf
342.652 281.482 mo
(,)sh
NQHFPO+AdvMT_MI*1 [9.9626 0 0 -9.9626 0 0 ]msf
347.693 281.482 mo
(!)sh
NQHFPN+AdvTimes-i*1 [7.4718 0 0 -6.641 0 0 ]msf
354.161 283.126 mo
(e)sh
NQHFPJ+AdvTimes*1 [9.9626 0 0 -9.9626 0 0 ]msf
359.773 281.482 mo
(and)
[4.98129 5.49939 0 ]xsh
NQHFPO+AdvMT_MI*1 [9.9626 0 0 -9.9626 0 0 ]msf
378.084 281.482 mo
(!)sh
NQHFPN+AdvTimes-i*1 [7.4718 0 0 -6.641 0 0 ]msf
384.548 283.126 mo
(e)sh
NQHFPN+AdvTimes-i*1 [9.9626 0 0 -9.9626 0 0 ]msf
387.779 281.482 mo
(x)sh
NQHFPN+AdvTimes-i*1 [7.4718 0 0 -6.641 0 0 ]msf
393.279 283.126 mo
(e)sh
NQHFPJ+AdvTimes*1 [9.9626 0 0 -9.9626 0 0 ]msf
398.948 281.482 mo
(ofwhicharestillalmostthesameas)
[5.49936 5.66867 7.15317 5.49936 2.68994 4.35364 7.8605 4.98129 3.83554 6.71478 3.83554 3.31747 
2.68994 2.68994 5.10089 4.98129 2.68994 8.18933 5.49936 3.83557 5.69852 3.31747 5.49939 6.71472 
3.83557 4.98132 8.18927 6.69482 4.98132 0 ]xsh
316.687 293.447 mo
(thosedeterminedfromthe)
[3.31747 5.49936 5.49939 3.83554 7.70105 5.49939 4.35361 3.31747 4.35361 3.83557 8.1893 2.68994 
5.49939 4.35361 8.87671 3.31747 3.83554 5.49939 11.4969 3.31747 5.49936 0 ]xsh
NQHFPM+AdvMT_RM*1 [9.9626 0 0 -9.9626 0 0 ]msf
434.156 293.447 mo
(\003)sh
NQHFPJ+AdvTimes*1 [9.9626 0 0 -9.9626 0 0 ]msf
442.096 293.447 mo
(-Sstatecalculations,and)
[3.31747 8.81693 3.83554 3.31747 4.98129 3.31747 7.68112 4.35364 4.98129 2.68994 4.35361 5.49939 
2.68994 4.98129 3.31747 2.68994 5.49939 5.49939 3.83551 6.07727 4.98126 5.49939 0 ]xsh
316.687 305.412 mo
(areinexcellentagreementwiththemeasurements)
[4.98129 3.83554 10.8592 2.68994 12.0448 4.35361 4.98132 4.35361 4.35361 2.68994 2.68997 4.35361 
5.49939 9.86288 4.98129 4.98132 3.83554 4.35361 4.35364 8.1893 4.35364 5.49936 9.85294 7.15317 
2.68994 3.3175 12.0149 3.31747 5.49936 10.8592 8.18933 4.35364 4.98129 3.83554 5.49939 3.83557 
4.35358 8.18933 4.35364 5.49933 3.3175 0 ]xsh
316.687 317.377 mo
([15,25].Thedeviationsofthepresent)
[2.68994 4.98129 4.98132 2.68994 4.98129 4.98129 2.68994 6.3562 6.63507 5.49939 7.93021 5.49936 
4.35361 4.98132 2.68994 4.98129 3.31747 2.68994 5.49939 5.49936 7.48187 5.49936 6.97375 3.31747 
5.49936 7.96008 5.49939 3.83554 4.35361 3.83557 4.35361 5.49936 0 ]xsh
NQHFPN+AdvTimes-i*1 [9.9626 0 0 -9.9626 0 0 ]msf
481.657 317.377 mo
(R)sh
NQHFPN+AdvTimes-i*1 [7.4718 0 0 -6.641 0 0 ]msf
488.863 319.013 mo
(e)sh
NQHFPJ+AdvTimes*1 [9.9626 0 0 -9.9626 0 0 ]msf
492.094 317.369 mo
(,)sh
NQHFPO+AdvMT_MI*1 [9.9626 0 0 -9.9626 0 0 ]msf
498.441 317.369 mo
(!)sh
NQHFPN+AdvTimes-i*1 [7.4718 0 0 -6.641 0 0 ]msf
504.85 319.013 mo
(e)sh
NQHFPJ+AdvTimes*1 [9.9626 0 0 -9.9626 0 0 ]msf
511.767 317.369 mo
(and)
[4.98129 5.49939 0 ]xsh
NQHFPO+AdvMT_MI*1 [9.9626 0 0 -9.9626 0 0 ]msf
531.323 317.369 mo
(!)sh
NQHFPN+AdvTimes-i*1 [7.4718 0 0 -6.641 0 0 ]msf
537.789 319.013 mo
(e)sh
NQHFPN+AdvTimes-i*1 [9.9626 0 0 -9.9626 0 0 ]msf
541.02 317.369 mo
(x)sh
NQHFPN+AdvTimes-i*1 [7.4718 0 0 -6.641 0 0 ]msf
546.52 319.013 mo
(e)sh
NQHFPJ+AdvTimes*1 [9.9626 0 0 -9.9626 0 0 ]msf
316.687 329.331 mo
(valuesfromthemeasurements[15]are0.00059nm)
[4.98129 4.98129 2.68997 5.49936 4.35361 9.86295 3.31747 3.83554 5.49936 14.1669 3.31747 5.49939 
10.3412 8.1893 4.35361 4.98132 3.83554 5.49936 3.83557 4.35361 8.18933 4.35361 5.49939 3.31744 
9.92273 2.68994 4.98126 4.98132 8.66751 4.98129 3.83557 10.3411 4.98129 2.68994 4.98129 4.98132 
4.98126 4.98132 6.64502 5.49939 0 ]xsh
316.687 341.236 mo
(\(0.27%\),0.54cm)
[3.31747 4.98129 2.68994 4.98129 4.98132 9.96259 3.31747 5.50937 4.98129 2.68994 4.98129 6.67496 
4.35361 0 ]xsh
NQHFPK+AdvMT_SY*1 [7.4718 0 0 -6.641 0 0 ]msf
388.29 336.814 mo
(\377)sh
NQHFPJ+AdvTimes*1 [7.4718 0 0 -6.641 0 0 ]msf
394.073 336.814 mo
(1)sh
NQHFPJ+AdvTimes*1 [9.9626 0 0 -9.9626 0 0 ]msf
400.592 341.236 mo
(\(0.11%\)and0.00874cm)
[3.31747 4.98129 2.68994 4.98129 4.98132 9.96259 6.16678 4.98129 5.49939 8.28888 4.98132 2.68994 
4.98129 4.98129 4.98132 4.98129 6.64505 4.35361 0 ]xsh
NQHFPK+AdvMT_SY*1 [7.4718 0 0 -6.641 0 0 ]msf
503.263 336.814 mo
(\377)sh
NQHFPJ+AdvTimes*1 [7.4718 0 0 -6.641 0 0 ]msf
508.986 336.814 mo
(1)sh
NQHFPJ+AdvTimes*1 [9.9626 0 0 -9.9626 0 0 ]msf
515.565 341.236 mo
(\(0.34%\))
[3.31744 4.98132 2.68994 4.98132 4.98126 9.96265 0 ]xsh
316.692 353.201 mo
(fortheA1)
[3.31747 5.49936 6.20667 3.31747 5.49936 6.71475 7.67126 0 ]xsh
NQHFPM+AdvMT_RM*1 [9.9626 0 0 -9.9626 0 0 ]msf
362.271 353.201 mo
(\012)sh
NQHFPJ+AdvTimes*1 [9.9626 0 0 -9.9626 0 0 ]msf
372.363 353.201 mo
(state,andthedeviationsofthepresent)
[3.83554 3.31747 4.98129 3.31747 4.35364 5.08096 4.98129 5.49939 7.8306 3.31747 5.49939 6.71475 
5.49939 4.35361 4.98129 2.68994 4.98132 3.31744 2.68997 5.49936 5.49939 6.23651 5.49939 5.72842 
3.31747 5.49936 6.71475 5.49939 3.83551 4.35364 3.83557 4.35364 5.49933 0 ]xsh
NQHFPN+AdvTimes-i*1 [9.9626 0 0 -9.9626 0 0 ]msf
536.656 353.201 mo
(R)sh
NQHFPN+AdvTimes-i*1 [7.4718 0 0 -6.641 0 0 ]msf
543.855 354.899 mo
(e)sh
NQHFPJ+AdvTimes*1 [9.9626 0 0 -9.9626 0 0 ]msf
547.086 353.199 mo
(,)sh
NQHFPO+AdvMT_MI*1 [9.9626 0 0 -9.9626 0 0 ]msf
316.691 365.164 mo
(!)sh
NQHFPN+AdvTimes-i*1 [7.4718 0 0 -6.641 0 0 ]msf
323.093 366.862 mo
(e)sh
NQHFPJ+AdvTimes*1 [9.9626 0 0 -9.9626 0 0 ]msf
332.957 365.161 mo
(and)
[4.98129 5.49939 0 ]xsh
NQHFPO+AdvMT_MI*1 [9.9626 0 0 -9.9626 0 0 ]msf
355.463 365.161 mo
(!)sh
NQHFPN+AdvTimes-i*1 [7.4718 0 0 -6.641 0 0 ]msf
361.927 366.862 mo
(e)sh
NQHFPN+AdvTimes-i*1 [9.9626 0 0 -9.9626 0 0 ]msf
365.159 365.161 mo
(x)sh
NQHFPN+AdvTimes-i*1 [7.4718 0 0 -6.641 0 0 ]msf
370.658 366.862 mo
(e)sh
NQHFPJ+AdvTimes*1 [9.9626 0 0 -9.9626 0 0 ]msf
380.466 365.161 mo
(fromtheexperimentalones[15]are)
[3.31747 3.83554 5.49939 14.7845 3.31747 5.49939 10.909 4.35361 4.98129 5.49939 4.35364 3.83554 
2.68994 8.1893 4.35364 5.49936 3.31747 4.98132 9.28516 5.49939 5.49936 4.35364 10.381 2.68994 
4.98132 4.98132 9.2254 4.98126 3.83557 0 ]xsh
316.686 377.126 mo
(0.00136nm\(0.64%\),0.281cm)
[4.98129 2.68994 4.98132 4.98129 4.98129 4.98129 6.64505 5.49939 19.8456 3.31747 4.98129 2.68994 
4.98132 4.98129 9.96262 3.31744 14.406 4.98129 2.68994 4.98129 4.98129 6.62512 4.35364 0 
]xsh
NQHFPK+AdvMT_SY*1 [7.4718 0 0 -6.641 0 0 ]msf
461.764 372.701 mo
(\377)sh
NQHFPJ+AdvTimes*1 [7.4718 0 0 -6.641 0 0 ]msf
467.487 372.701 mo
(1)sh
NQHFPJ+AdvTimes*1 [9.9626 0 0 -9.9626 0 0 ]msf
482.91 377.123 mo
(\(0.058%\)and)
[3.31747 4.98129 2.68994 4.98129 4.98132 4.98129 9.96259 15.0135 4.98132 5.49939 0 ]xsh
316.684 389.088 mo
(0.00128cm)
[4.98129 2.68994 4.98132 4.98129 4.98129 4.98129 6.64505 4.35364 0 ]xsh
NQHFPK+AdvMT_SY*1 [7.4718 0 0 -6.641 0 0 ]msf
363.458 384.663 mo
(\377)sh
NQHFPJ+AdvTimes*1 [7.4718 0 0 -6.641 0 0 ]msf
369.241 384.663 mo
(1)sh
NQHFPJ+AdvTimes*1 [9.9626 0 0 -9.9626 0 0 ]msf
378.142 389.085 mo
(\(0.049%\),respectively,fortheA0)
[3.31747 4.98129 2.68994 4.98129 4.98132 4.98129 9.96259 3.31747 7.90039 3.83554 4.35364 3.83554 
5.49936 4.35364 4.35361 3.31747 2.68994 4.98129 4.35364 2.68994 4.98129 7.90039 3.31747 5.49939 
8.98621 3.31744 5.49939 9.55414 7.6712 0 ]xsh
NQHFPK+AdvMT_SY*1 [7.4718 0 0 -6.641 0 0 ]msf
531.213 384.663 mo
(\377)sh
NQHFPM+AdvMT_RM*1 [9.9626 0 0 -9.9626 0 0 ]msf
542.154 389.085 mo
(\012)sh
NQHFPJ+AdvTimes*1 [9.9626 0 0 -9.9626 0 0 ]msf
316.691 401.05 mo
(state.ThepresentenergysplittingofA)
[3.83554 3.31747 4.98129 3.31747 4.35364 5.36987 6.6351 5.49936 7.02362 5.49936 3.83554 4.35364 
3.83554 4.35364 5.49936 6.01733 4.35361 5.49939 4.35364 3.83554 4.98129 7.70108 3.83554 5.49939 
2.68994 2.68994 3.31747 3.31747 2.68994 5.49939 7.71103 5.49936 5.94763 0 ]xsh
NQHFPJ+AdvTimes*1 [7.4718 0 0 -6.641 0 0 ]msf
481.549 396.625 mo
(3)sh
NQHFPM+AdvMT_RM*1 [9.9626 0 0 -9.9626 0 0 ]msf
485.291 401.047 mo
(\006)sh
NQHFPK+AdvMT_SY*1 [6.9738 0 0 -6.9738 0 0 ]msf
492.831 397.419 mo
(\207)sh
NQHFPJ+AdvTimes*1 [6.9738 0 0 -6.9738 0 0 ]msf
492.831 403.828 mo
(u)sh
NQHFPM+AdvMT_RM*1 [9.9626 0 0 -9.9626 0 0 ]msf
501.392 401.047 mo
(\003)sh
NQHFPJ+AdvTimes*1 [9.9626 0 0 -9.9626 0 0 ]msf
509.272 401.047 mo
(-Sstateis)
[3.31747 8.18927 3.83557 3.31744 4.98132 3.31744 7.05347 2.68994 0 ]xsh
316.685 413.012 mo
(83.40cm)
[4.98129 4.98129 2.68997 4.98129 6.62512 4.35361 0 ]xsh
NQHFPK+AdvMT_SY*1 [7.4718 0 0 -6.641 0 0 ]msf
353.537 408.587 mo
(\377)sh
NQHFPJ+AdvTimes*1 [7.4718 0 0 -6.641 0 0 ]msf
359.26 408.587 mo
(1)sh
NQHFPJ+AdvTimes*1 [9.9626 0 0 -9.9626 0 0 ]msf
363.005 413.009 mo
(,whichagreeswellwiththemeasurementsof)
[4.82193 7.15317 5.49939 2.68994 4.35361 7.57159 4.98132 4.98129 3.83554 4.35364 4.35361 5.95758 
7.15317 4.35364 2.68994 4.79205 7.15314 2.68997 3.31747 7.64133 3.31747 5.49936 6.43582 8.1893 
4.35361 4.98132 3.83554 5.49936 3.83557 4.35364 8.18933 4.35358 5.49939 3.31744 5.94763 5.49939 
0 ]xsh
316.688 424.975 mo
(77.51[15]and77.89cm)
[4.98129 4.98129 2.68997 4.98129 7.98999 2.68994 4.98132 4.98129 5.65878 4.98132 5.49936 8.50809 
4.98129 4.98129 2.68994 4.98132 6.62512 4.35364 0 ]xsh
NQHFPK+AdvMT_SY*1 [7.4718 0 0 -6.641 0 0 ]msf
416.466 420.55 mo
(\377)sh
NQHFPJ+AdvTimes*1 [7.4718 0 0 -6.641 0 0 ]msf
422.189 420.55 mo
(1)sh
NQHFPJ+AdvTimes*1 [9.9626 0 0 -9.9626 0 0 ]msf
428.939 424.972 mo
([29].)
[2.68994 4.98129 4.98132 2.68994 0 ]xsh
331.654 436.937 mo
(Nodirectvalueof)
[8.18933 9.10583 5.49936 2.68994 3.83554 4.35364 4.35361 6.99368 4.98129 4.98129 2.68997 5.49936 
7.98001 5.49936 0 ]xsh
NQHFPN+AdvTimes-i*1 [9.9626 0 0 -9.9626 0 0 ]msf
415.22 436.937 mo
(T)sh
NQHFPN+AdvTimes-i*1 [7.4718 0 0 -6.641 0 0 ]msf
421.909 438.578 mo
(e)sh
NQHFPJ+AdvTimes*1 [9.9626 0 0 -9.9626 0 0 ]msf
428.768 436.934 mo
(isavailablefortheA)
[2.68994 7.46194 4.98129 4.98129 4.98129 2.68994 2.68997 4.98129 5.49936 2.68994 7.99994 3.31747 
5.49939 7.51175 3.31744 5.49939 7.96008 0 ]xsh
NQHFPK+AdvMT_SY*1 [6.9738 0 0 -6.9738 0 0 ]msf
521.234 433.306 mo
(0)sh
NQHFPJ+AdvTimes*1 [9.9626 0 0 -9.9626 0 0 ]msf
523.502 436.934 mo
(3,A)
[4.98132 6.35614 0 ]xsh
NQHFPK+AdvMT_SY*1 [6.9738 0 0 -6.9738 0 0 ]msf
542.494 433.306 mo
(0)sh
NQHFPJ+AdvTimes*1 [9.9626 0 0 -9.9626 0 0 ]msf
544.819 436.934 mo
(2)sh
316.685 448.899 mo
(andA)
[4.98129 5.49939 9.30508 0 ]xsh
NQHFPK+AdvMT_SY*1 [6.9738 0 0 -6.9738 0 0 ]msf
344.183 445.268 mo
(0)sh
NQHFPJ+AdvTimes*1 [9.9626 0 0 -9.9626 0 0 ]msf
346.45 448.896 mo
(1)sh
NQHFPM+AdvMT_RM*1 [9.9626 0 0 -9.9626 0 0 ]msf
355.297 448.896 mo
(\012)sh
NQHFPJ+AdvTimes*1 [9.9626 0 0 -9.9626 0 0 ]msf
366.744 448.896 mo
(statesintheliterature.Narasimham)
[3.83554 3.31747 4.98129 3.31747 4.35364 7.69107 2.68994 9.32501 3.31747 5.49936 8.18924 2.68994 
2.68994 3.31747 4.35361 3.83554 4.98132 3.31744 5.49939 3.83554 4.35364 6.53549 8.18933 4.98129 
3.83554 4.98132 3.83551 2.68994 8.18933 5.49939 4.98126 0 ]xsh
NQHFPN+AdvTimes-i*1 [9.9626 0 0 -9.9626 0 0 ]msf
527.919 448.896 mo
(etal)
[4.35364 7.15308 4.98126 0 ]xsh
NQHFPJ+AdvTimes*1 [9.9626 0 0 -9.9626 0 0 ]msf
547.077 448.896 mo
(.)sh
316.682 460.861 mo
([28]in1976estimatedthe)
[2.68994 4.98129 4.98132 6.05728 2.68994 8.81693 4.98129 4.98132 4.98129 8.29886 4.35361 3.83554 
3.31747 2.68994 8.18933 4.98129 3.31747 4.35361 8.89661 3.3175 5.49936 0 ]xsh
NQHFPN+AdvTimes-i*1 [9.9626 0 0 -9.9626 0 0 ]msf
430.575 460.861 mo
(T)sh
NQHFPN+AdvTimes-i*1 [7.4718 0 0 -6.641 0 0 ]msf
437.216 462.502 mo
(e)sh
NQHFPJ+AdvTimes*1 [9.9626 0 0 -9.9626 0 0 ]msf
443.849 460.858 mo
(ofA)
[5.49939 6.63501 0 ]xsh
NQHFPK+AdvMT_SY*1 [6.9738 0 0 -6.9738 0 0 ]msf
463.691 457.23 mo
(0)sh
NQHFPJ+AdvTimes*1 [9.9626 0 0 -9.9626 0 0 ]msf
466.016 460.858 mo
(3)sh
NQHFPM+AdvMT_RM*1 [9.9626 0 0 -9.9626 0 0 ]msf
474.295 460.858 mo
(\012)sh
NQHFPJ+AdvTimes*1 [9.9626 0 0 -9.9626 0 0 ]msf
485.353 460.858 mo
(statebyBirge\261)
[3.83554 3.31747 4.98129 3.31747 7.68112 5.49939 8.32874 6.63507 2.68994 3.83557 4.98132 4.35358 
0 ]xsh
316.696 472.764 mo
(Sponerextrapolation.Thecorrespondingresultthey)
[5.49936 5.49939 5.49939 5.49936 4.35361 8.62756 4.35364 4.98129 3.31747 3.83554 4.98129 5.49939 
5.49936 2.68994 4.98129 3.3175 2.68994 5.49936 5.49936 7.54175 6.6351 5.49936 9.12573 4.35361 
5.49936 3.83557 3.83554 4.35361 3.83557 5.49936 5.49936 5.49939 5.49939 2.68994 5.49936 9.80319 
3.83557 4.35361 3.83554 5.49939 2.68994 8.12939 3.3175 5.49933 4.35364 0 ]xsh
316.696 484.729 mo
(obtainedis20,974cm)
[5.49936 5.49939 3.31747 4.98129 2.68994 5.49939 4.35361 14.7646 2.68994 13.0709 4.98129 4.98129 
2.68994 4.98132 4.98129 6.6351 4.35361 0 ]xsh
NQHFPK+AdvMT_SY*1 [7.4718 0 0 -6.641 0 0 ]msf
420.888 480.304 mo
(\377)sh
NQHFPJ+AdvTimes*1 [7.4718 0 0 -6.641 0 0 ]msf
426.611 480.304 mo
(1)sh
NQHFPJ+AdvTimes*1 [9.9626 0 0 -9.9626 0 0 ]msf
430.356 484.726 mo
(.Theenergyseparation)
[11.9651 6.6351 5.49936 13.5491 4.35361 5.49936 4.35364 3.83554 4.98129 14.2764 3.83554 4.35361 
5.49939 4.98132 3.83551 4.98132 3.31744 2.68994 5.49939 0 ]xsh
316.683 496.691 mo
(betweentheA)
[5.49939 4.35361 3.31747 7.15317 4.35361 4.35364 10.939 3.31744 5.49939 9.72345 0 ]xsh
NQHFPK+AdvMT_SY*1 [6.9738 0 0 -6.9738 0 0 ]msf
382.904 493.06 mo
(0)sh
NQHFPJ+AdvTimes*1 [9.9626 0 0 -9.9626 0 0 ]msf
385.228 496.688 mo
(3andA)
[10.3711 4.98129 5.49939 10.8891 0 ]xsh
NQHFPK+AdvMT_SY*1 [6.9738 0 0 -6.9738 0 0 ]msf
424.63 493.06 mo
(0)sh
NQHFPJ+AdvTimes*1 [9.9626 0 0 -9.9626 0 0 ]msf
426.954 496.688 mo
(2)sh
NQHFPM+AdvMT_RM*1 [9.9626 0 0 -9.9626 0 0 ]msf
437.325 496.688 mo
(\012)sh
NQHFPJ+AdvTimes*1 [9.9626 0 0 -9.9626 0 0 ]msf
450.366 496.688 mo
(statecollectedinRef.)
[3.83554 3.31747 4.98129 3.31747 9.77328 4.35361 5.49939 2.68994 2.68994 4.35361 4.35364 3.31747 
4.35361 10.9689 2.68994 10.8593 7.6712 4.35364 3.3175 0 ]xsh
316.688 508.653 mo
([15]is383cm)
[2.68994 4.98129 4.98132 6.05728 2.68994 7.23282 4.98129 4.98129 6.64505 4.35361 0 ]xsh
NQHFPK+AdvMT_SY*1 [7.4718 0 0 -6.641 0 0 ]msf
374.513 504.228 mo
(\377)sh
NQHFPJ+AdvTimes*1 [7.4718 0 0 -6.641 0 0 ]msf
380.237 504.228 mo
(1)sh
NQHFPJ+AdvTimes*1 [9.9626 0 0 -9.9626 0 0 ]msf
383.981 508.65 mo
(.Ifweusesuchenergyseparation[15])
[6.06726 3.83554 6.70477 7.15317 7.76083 5.49936 3.83554 7.73096 3.83554 5.49936 4.35364 8.87671 
4.35361 5.49936 4.35364 3.83554 4.98129 8.37854 3.83557 4.35361 5.49936 4.98132 3.83554 4.98129 
3.3175 2.68994 5.49933 8.90662 2.68994 4.98126 4.98132 0 ]xsh
316.684 520.615 mo
(andthe)
[4.98129 5.49939 8.22913 3.31747 5.49936 0 ]xsh
NQHFPN+AdvTimes-i*1 [9.9626 0 0 -9.9626 0 0 ]msf
351.324 520.615 mo
(T)sh
NQHFPN+AdvTimes-i*1 [7.4718 0 0 -6.641 0 0 ]msf
357.959 522.257 mo
(e)sh
NQHFPJ+AdvTimes*1 [9.9626 0 0 -9.9626 0 0 ]msf
364.025 520.613 mo
(estimatedinRef.[28],wecandeterminethe)
[4.35361 3.83557 3.31747 2.68994 8.1893 4.98129 3.31747 4.35364 8.26898 2.68994 8.24905 7.67123 
4.35361 3.31747 5.45956 2.68994 4.98129 4.98129 2.68994 5.45956 7.15317 7.13318 4.35364 4.98129 
8.23907 5.49939 4.35361 3.31747 4.35361 3.83557 8.18933 2.68994 5.49933 7.16309 3.3175 5.49939 
0 ]xsh
316.683 532.578 mo
(`experimental')
[2.68994 4.35364 4.98129 5.49936 4.35364 3.83554 2.68994 8.18933 4.35361 5.49939 3.31744 4.98132 
2.68994 0 ]xsh
NQHFPN+AdvTimes-i*1 [9.9626 0 0 -9.9626 0 0 ]msf
382.725 532.578 mo
(T)sh
NQHFPN+AdvTimes-i*1 [7.4718 0 0 -6.641 0 0 ]msf
389.423 534.219 mo
(e)sh
NQHFPJ+AdvTimes*1 [9.9626 0 0 -9.9626 0 0 ]msf
398.551 532.575 mo
(ofA)
[5.49939 9.23523 0 ]xsh
NQHFPK+AdvMT_SY*1 [6.9738 0 0 -6.9738 0 0 ]msf
420.945 528.946 mo
(0)sh
NQHFPJ+AdvTimes*1 [9.9626 0 0 -9.9626 0 0 ]msf
423.269 532.575 mo
(2)sh
NQHFPM+AdvMT_RM*1 [9.9626 0 0 -9.9626 0 0 ]msf
434.158 532.575 mo
(\012)sh
NQHFPJ+AdvTimes*1 [9.9626 0 0 -9.9626 0 0 ]msf
447.707 532.575 mo
(state,21357cm)
[3.83554 3.31747 4.98129 3.31747 4.35364 8.59775 4.98129 4.98132 4.98129 4.98129 6.66498 4.35364 
0 ]xsh
NQHFPK+AdvMT_SY*1 [7.4718 0 0 -6.641 0 0 ]msf
515.225 528.153 mo
(\377)sh
NQHFPJ+AdvTimes*1 [7.4718 0 0 -6.641 0 0 ]msf
521.008 528.153 mo
(1)sh
NQHFPJ+AdvTimes*1 [9.9626 0 0 -9.9626 0 0 ]msf
524.75 532.575 mo
(.The)
[8.55792 6.63507 5.49939 0 ]xsh
316.691 544.54 mo
(deviationofthepresent)
[5.49936 4.35364 4.98129 2.68994 4.98129 3.31747 2.68997 5.49936 10.6002 5.49939 8.44821 3.31747 
5.49936 9.49432 5.49936 3.83554 4.35364 3.83554 4.35361 5.49939 0 ]xsh
NQHFPN+AdvTimes-i*1 [9.9626 0 0 -9.9626 0 0 ]msf
429.397 544.54 mo
(T)sh
NQHFPN+AdvTimes-i*1 [7.4718 0 0 -6.641 0 0 ]msf
436.025 546.181 mo
(e)sh
NQHFPJ+AdvTimes*1 [9.9626 0 0 -9.9626 0 0 ]msf
444.359 544.537 mo
(fromthisresultisonly)
[3.31747 3.83554 5.49939 13.3101 3.31747 5.49936 2.68994 8.95633 3.83554 4.35364 3.83554 5.49936 
2.68997 8.46814 2.68994 8.9364 5.49939 5.49933 2.68994 0 ]xsh
316.688 556.502 mo
(28.61cm)
[4.98129 4.98129 2.68997 4.98129 6.62512 4.35361 0 ]xsh
NQHFPK+AdvMT_SY*1 [7.4718 0 0 -6.641 0 0 ]msf
353.537 552.077 mo
(\377)sh
NQHFPJ+AdvTimes*1 [7.4718 0 0 -6.641 0 0 ]msf
359.26 552.077 mo
(1)sh
NQHFPJ+AdvTimes*1 [9.9626 0 0 -9.9626 0 0 ]msf
363.005 556.499 mo
(.Inaddition,theenergyseparations)
[12.0747 3.83554 14.8742 4.98129 5.49936 5.49939 2.68994 3.31747 2.68994 5.49936 5.49939 12.0548 
3.31747 5.49939 13.7484 4.35361 5.49936 4.35364 3.83554 4.98129 14.3362 3.83557 4.35361 5.49936 
4.98132 3.83551 4.98132 3.3175 2.68994 5.49933 5.49939 0 ]xsh
316.688 568.464 mo
(betweentheA)
[5.49939 4.35361 3.31747 7.15317 4.35361 4.35364 9.06598 3.31747 5.49936 7.91028 0 ]xsh
NQHFPK+AdvMT_SY*1 [6.9738 0 0 -6.9738 0 0 ]msf
379.219 564.833 mo
(0)sh
NQHFPJ+AdvTimes*1 [9.9626 0 0 -9.9626 0 0 ]msf
381.543 568.461 mo
(3andA1)
[8.50806 4.98129 5.49939 9.07593 7.67126 0 ]xsh
NQHFPM+AdvMT_RM*1 [9.9626 0 0 -9.9626 0 0 ]msf
425.817 568.461 mo
(\012)sh
NQHFPJ+AdvTimes*1 [9.9626 0 0 -9.9626 0 0 ]msf
437.045 568.461 mo
(stateandbetweentheA)
[3.83554 3.31747 4.98129 3.31747 7.96008 4.98129 5.49939 9.01617 5.49936 4.35364 3.31747 7.15317 
4.35361 4.35364 9.12576 3.31744 5.49939 7.91028 0 ]xsh
NQHFPK+AdvMT_SY*1 [6.9738 0 0 -6.9738 0 0 ]msf
542.494 564.833 mo
(0)sh
NQHFPJ+AdvTimes*1 [9.9626 0 0 -9.9626 0 0 ]msf
544.819 568.461 mo
(3)sh
316.685 580.426 mo
(andA0)
[4.98129 5.49939 8.56784 7.67126 0 ]xsh
NQHFPK+AdvMT_SY*1 [7.4718 0 0 -6.641 0 0 ]msf
348.378 576.002 mo
(\377)sh
NQHFPM+AdvMT_RM*1 [9.9626 0 0 -9.9626 0 0 ]msf
357.222 580.424 mo
(\012)sh
NQHFPJ+AdvTimes*1 [9.9626 0 0 -9.9626 0 0 ]msf
367.992 580.424 mo
(statecollectedinRef.[15]are1000.49and)
[3.83554 3.31747 4.98129 3.31747 7.39221 4.35364 5.49936 2.68994 2.68994 4.35364 4.35361 3.31747 
4.35364 8.63757 2.68994 8.5878 7.67123 4.35364 3.31747 5.74844 2.68994 4.98132 4.98129 5.82816 
4.98129 3.83554 7.39221 4.98132 4.98129 4.98129 4.98132 2.68994 4.98132 8.05969 4.98132 5.49939 
0 ]xsh
316.684 592.389 mo
(1078cm)
[4.98129 4.98129 4.98132 6.655 4.35364 0 ]xsh
NQHFPK+AdvMT_SY*1 [7.4718 0 0 -6.641 0 0 ]msf
350.816 587.907 mo
(\377)sh
NQHFPJ+AdvTimes*1 [7.4718 0 0 -6.641 0 0 ]msf
356.599 587.907 mo
(1)sh
NQHFPJ+AdvTimes*1 [9.9626 0 0 -9.9626 0 0 ]msf
360.34 592.386 mo
(,respectively.Similartothe)
[7.77087 3.83554 4.35361 3.83557 5.49936 4.35364 4.35361 3.31747 2.68994 4.98129 4.35364 2.68994 
4.98129 7.84061 5.49939 2.68994 8.18933 2.68994 2.68994 4.98129 8.97623 3.3175 10.6301 3.31747 
5.49939 0 ]xsh
NQHFPN+AdvTimes-i*1 [9.9626 0 0 -9.9626 0 0 ]msf
493.112 592.386 mo
(T)sh
NQHFPN+AdvTimes-i*1 [7.4718 0 0 -6.641 0 0 ]msf
499.748 594.03 mo
(e)sh
NQHFPJ+AdvTimes*1 [9.9626 0 0 -9.9626 0 0 ]msf
508.138 592.386 mo
(ofA)
[5.49936 8.38843 0 ]xsh
NQHFPK+AdvMT_SY*1 [6.9738 0 0 -6.9738 0 0 ]msf
529.739 588.758 mo
(0)sh
NQHFPJ+AdvTimes*1 [9.9626 0 0 -9.9626 0 0 ]msf
532.063 592.386 mo
(2)sh
NQHFPM+AdvMT_RM*1 [9.9626 0 0 -9.9626 0 0 ]msf
542.155 592.386 mo
(\012)sh
NQHFPJ+AdvTimes*1 [9.9626 0 0 -9.9626 0 0 ]msf
316.691 604.291 mo
(state,wecancalculatethatthe`experimental')
[3.83554 3.31747 4.98129 3.31747 4.35364 5.25034 7.15317 6.90402 4.35364 4.98129 8.00995 4.35361 
4.98132 2.68994 4.35361 5.49939 2.68994 4.98129 3.31747 6.93393 3.31747 5.49936 4.98132 5.81808 
3.31747 5.49936 6.88412 2.68994 4.35364 4.98129 5.49936 4.35364 3.83554 2.68994 8.1893 4.35364 
5.49939 3.31744 4.98132 2.68994 0 ]xsh
NQHFPN+AdvTimes-i*1 [9.9626 0 0 -9.9626 0 0 ]msf
511.032 604.291 mo
(T)sh
NQHFPN+AdvTimes-i*1 [7.4718 0 0 -6.641 0 0 ]msf
517.663 605.992 mo
(e)sh
NQHFPJ+AdvTimes*1 [9.9626 0 0 -9.9626 0 0 ]msf
523.446 604.291 mo
(values)
[4.98132 4.98126 2.68994 5.49939 4.35364 0 ]xsh
316.692 616.256 mo
(ofA1andA0)
[5.49939 5.83798 7.67126 7.46198 4.98129 5.49939 8 7.67123 0 ]xsh
NQHFPK+AdvMT_SY*1 [7.4718 0 0 -6.641 0 0 ]msf
374.286 611.831 mo
(\377)sh
NQHFPM+AdvMT_RM*1 [9.9626 0 0 -9.9626 0 0 ]msf
382.564 616.253 mo
(\012)sh
NQHFPJ+AdvTimes*1 [9.9626 0 0 -9.9626 0 0 ]msf
392.716 616.253 mo
(statesare21,974.49and22,052cm)
[3.83554 3.31747 4.98129 3.31747 4.35364 6.38596 4.98129 3.83557 6.83429 4.98132 4.98129 2.68994 
4.98129 4.98129 4.98129 2.68997 4.98129 7.4819 4.98129 5.49939 8 4.98129 4.98129 2.68994 
4.98132 4.98126 6.63513 4.35358 0 ]xsh
NQHFPK+AdvMT_SY*1 [7.4718 0 0 -6.641 0 0 ]msf
537.619 611.831 mo
(\377)sh
NQHFPJ+AdvTimes*1 [7.4718 0 0 -6.641 0 0 ]msf
543.402 611.831 mo
(1)sh
NQHFPJ+AdvTimes*1 [9.9626 0 0 -9.9626 0 0 ]msf
547.086 616.253 mo
(,)sh
316.691 628.219 mo
(respectively.Obviously,the)
[3.83554 4.35364 3.83554 5.49936 4.35364 4.35361 3.31747 2.68994 4.98129 4.35364 2.68994 4.98129 
5.68869 7.67126 5.49936 4.98129 2.68994 5.49939 5.49939 3.83554 2.68994 4.98129 5.63885 3.3175 
5.49936 0 ]xsh
NQHFPN+AdvTimes-i*1 [9.9626 0 0 -9.9626 0 0 ]msf
436.711 628.219 mo
(T)sh
NQHFPN+AdvTimes-i*1 [7.4718 0 0 -6.641 0 0 ]msf
443.339 629.917 mo
(e)sh
NQHFPJ+AdvTimes*1 [9.9626 0 0 -9.9626 0 0 ]msf
449.518 628.216 mo
(resultscalculatedinthe)
[3.83554 4.35364 3.83554 5.49936 2.68994 3.31747 6.79443 4.35364 4.98129 2.68994 4.35364 5.49936 
2.68994 4.98132 3.31744 4.35364 8.4184 2.68994 8.47821 3.31744 5.49939 0 ]xsh
316.687 640.181 mo
(presentpaperareinexcellentagreementwiththe)
[5.49936 3.83557 4.35361 3.83554 4.35364 5.49936 9.70352 5.49936 4.98129 5.49939 4.35361 10.1618 
4.98129 3.83554 10.7397 2.68994 11.8256 4.35364 4.98129 4.35361 4.35364 2.68994 2.68994 4.35364 
5.49936 9.75333 4.98126 4.98132 3.83554 4.35361 4.35364 8.18933 4.35361 5.49936 9.68359 7.15314 
2.68994 3.3175 11.8954 3.31744 5.49939 0 ]xsh
316.687 652.146 mo
(valuesderivedhere.Accordingtothese,wethinkthat)
[4.98129 4.98129 2.68997 5.49936 4.35361 7.14316 5.49936 4.35364 3.83554 2.68994 4.98129 4.35361 
8.80698 5.49936 4.35364 3.83554 4.35361 5.99753 7.67126 4.35361 4.35361 5.49939 3.83554 5.49939 
2.68994 5.49936 8.27893 3.31747 8.81693 3.31744 5.49939 4.35364 3.83554 4.35361 6.01746 7.15317 
7.64127 3.3175 5.49939 2.68994 5.49933 8.78705 3.3175 5.49933 4.98132 0 ]xsh
316.687 664.111 mo
(thespectroscopicparametersofA1andA0)
[3.31747 5.49936 7.91028 3.83554 5.49939 4.35361 4.35364 3.31747 3.83554 5.49936 3.83554 4.35364 
5.49936 5.49939 2.68994 7.97003 5.49939 4.98129 3.83554 4.98129 8.18933 4.35361 3.31747 4.35364 
3.83554 7.45197 5.49939 6.85419 7.67126 8.59772 4.98126 5.49939 9.01617 7.67126 0 ]xsh
NQHFPK+AdvMT_SY*1 [7.4718 0 0 -6.641 0 0 ]msf
505.587 659.68 mo
(\377)sh
NQHFPM+AdvMT_RM*1 [9.9626 0 0 -9.9626 0 0 ]msf
514.885 664.102 mo
(\012)sh
NQHFPJ+AdvTimes*1 [9.9626 0 0 -9.9626 0 0 ]msf
526.163 664.102 mo
(states)
[3.83557 3.31744 4.98132 3.31744 4.35364 0 ]xsh
316.679 676.067 mo
(obtainedhereareaccurate.)
[5.49939 5.49936 3.31747 4.98129 2.68994 5.49939 4.35361 8.80695 5.49939 4.35364 3.83554 7.74091 
4.98129 3.83554 7.68112 4.98132 4.35361 4.35364 5.49936 3.83554 4.98129 3.3175 4.35361 0 
]xsh
331.643 688.033 mo
(Attheinternuclearequilibriumseparation,the)
[7.67123 10.0124 3.31747 5.49936 11.0286 2.68994 5.49939 3.31747 4.35361 3.83554 5.49939 5.49936 
4.35361 2.68997 4.35361 4.98132 10.5802 4.35364 5.49936 5.49939 2.68994 2.68994 2.68994 5.49936 
3.83557 2.68994 5.49939 14.9539 3.83551 4.35364 5.49939 4.98129 3.83554 4.98129 3.31747 2.68994 
5.49939 5.49933 9.36493 3.31744 5.49939 0 ]xsh
316.679 699.998 mo
(dominant)
[5.49939 5.49936 8.18933 2.68994 5.49936 4.98132 5.49936 0 ]xsh
NQHFPM+AdvMT_RM*1 [9.9626 0 0 -9.9626 0 0 ]msf
361.75 699.998 mo
(\003)sh
NQHFPJ+AdvTimes*1 [9.9626 0 0 -9.9626 0 0 ]msf
369.63 699.998 mo
(-SstatecompositionsofA0)
[3.31747 9.3848 3.83554 3.31747 4.98129 3.31747 8.24899 4.35361 5.49939 8.18933 5.49936 5.49939 
3.83554 2.68994 3.31747 2.68994 5.49936 5.49939 7.75085 5.49936 7.20288 7.67126 0 ]xsh
NQHFPK+AdvMT_SY*1 [7.4718 0 0 -6.641 0 0 ]msf
491.754 695.567 mo
(\377)sh
NQHFPM+AdvMT_RM*1 [9.9626 0 0 -9.9626 0 0 ]msf
501.392 699.989 mo
(\012)sh
NQHFPJ+AdvTimes*1 [9.9626 0 0 -9.9626 0 0 ]msf
512.959 699.989 mo
(stateare)
[3.83557 3.31744 4.98132 3.31744 8.24902 4.98126 3.83557 0 ]xsh
316.685 711.954 mo
(A)sh
NQHFPJ+AdvTimes*1 [7.4718 0 0 -6.641 0 0 ]msf
324.34 707.529 mo
(3)sh
NQHFPM+AdvMT_RM*1 [9.9626 0 0 -9.9626 0 0 ]msf
328.082 711.951 mo
(\006)sh
NQHFPK+AdvMT_SY*1 [6.9738 0 0 -6.9738 0 0 ]msf
335.679 708.323 mo
(\207)sh
NQHFPJ+AdvTimes*1 [6.9738 0 0 -6.9738 0 0 ]msf
335.679 714.669 mo
(u)sh
NQHFPJ+AdvTimes*1 [9.9626 0 0 -9.9626 0 0 ]msf
351.553 711.951 mo
(\(95.61%\)andc)
[3.31747 4.98129 4.98129 2.68994 4.98132 4.98129 9.96259 13.31 4.98132 5.49936 15.4819 0 
]xsh
NQHFPJ+AdvTimes*1 [7.4718 0 0 -6.641 0 0 ]msf
431.093 707.529 mo
(1)sh
NQHFPM+AdvMT_RM*1 [9.9626 0 0 -9.9626 0 0 ]msf
434.835 711.951 mo
(\006)sh
NQHFPK+AdvMT_SY*1 [6.9738 0 0 -6.9738 0 0 ]msf
442.431 708.323 mo
(\377)sh
NQHFPJ+AdvTimes*1 [6.9738 0 0 -6.9738 0 0 ]msf
442.431 714.669 mo
(u)sh
NQHFPJ+AdvTimes*1 [9.9626 0 0 -9.9626 0 0 ]msf
458.305 711.951 mo
(\(4.39%\).Withthe)
[3.31747 4.98129 2.68994 4.98129 4.98132 9.96259 3.31747 12.7123 9.85303 2.68994 3.31744 15.4919 
3.31744 5.49939 0 ]xsh
true set_gvm
%ADOBeginSubsetFont: GNMBAA+Times-Roman Initial
%ADOt1write: (1.0.24)
12 dict dup begin
/FontType 1 def
/FontName /GNMBAA+Times-Roman def
/FontInfo 8 dict dup begin
/Notice (Copyright (c) 1985, 1987, 1989, 1990, 1993, 1997 Adobe Systems Incorporated.  All Rights Reserved.Times is a trademark of Linotype-Hell AG and/or its subsidiaries.) def
/Weight (Roman) def
/ItalicAngle 0 def
/BaseFontName (Times-Roman) def
/WasEmbedded true def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 32 /space put
dup 43 /plus put
dup 45 /hyphen put
dup 46 /period put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 55 /seven put
dup 56 /eight put
dup 57 /nine put
dup 80 /P put
dup 83 /S put
def
/FontBBox {-168 -218 1000 898} def
end
systemdict begin
dup /Private
10 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-14 -0 662 676 450 460 683 683] def
/OtherBlues [262 270 -218 -217] def
/StdHW [28] def
/StdVW [84] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
14 dict dup begin
/space <1C60D8A8C9B8707C25> |-
/plus <1C60D8A8C9B7E7C1F8C841328BB123F759A30512BED5DC07FC579EC99
7C91B93D32D4878089842AD2FF4EC36A2E53F55A1F45400D8D5B4> |-
/hyphen <1C60D8A8C9B81F2C3AED63678C15FF4B0D41EAF1ADF08534F78C6CF
D85> |-
/period <1C60D8A8C9B8707CBED44D23D303116EA29D4409ABB37494AFAFCCA
FB9A7D6323F579FF803D5A8B3A108FB2DAB2600F06F9F1ECA49E6BCC3A1E7896
A> |-
/zero <1C60D8A8C9B7A73D33BD7C9339964DD07C87D05AB7B25A7463788209D
FA6F2469A76A662ABDEC36022D07150EBCCB00EAFC3634E253FB48B765FB94D7
1E293B85E25BD0A9620E2BFB3082EA4BB23F9236A4694D2C3E9FC45E251B722> |-
/one <1C60D8A8C9B7A73DC549024B406C76DEED7B46C1EF6EB5651B1F268C37
87648C40DBF41CCAF519D06A13A3171180A36B4BF986E9264F6C74AFB62268E9
5BF4B0184D270E> |-
/two <1C60D8A8C9B7A73DC5046156A965F0B3A5C5C92B949F09859351B7460B
BC2BE41737489572FD61CF5BD3DA796B955EB550353EDF2F8C07B4F538413169
7035B0D3184C9331276BD170AD13B7E6187EA056B38F406A362F0A077FD8459E
E186F67C0C> |-
/three <1C60D8A8C9B7A73D33B7A780A4FB6D47887A89CCD14262CC5EAF9A44
E4667C02E08E12C9FAA81B3FDF7544E6E75E5296452BF3839C72DB687B09DBAE
283E004770052C2C40F3BE9D14CD88A743EF8BCC90D61B07BC93A5F254687A35
8EFD7C6A34DA02B99630F8F91E5B5B18682C41B5E27DFA84375DC950157D776B
EF8B8244DE2CBD755506> |-
/seven <1C60D8A8C9B7A73DD6FE362CD24F05334B0EB647AEFE5409105064A3
E2149E3F071B4B7682CB4AAE846128CC40E4FE81E9AE8C264167A3B3D819A723> |-
/eight <1C60D8A8C9B7A73D33BF1B919D3990280983708D6757A992F5763D40
D0C17EA83BCB85789813648C1332AA4BA5DECDB6C51AC02F13C5CEC3648068DF
163FD5A16CBA724ABBC388395CA8D29C7E9CBEAA9260DD0185441D7B1077F46D
B8D59436936512EF03987B35CAAC3F83CBCFD25406E86BFCA5DD2BD7BAF4B5A6
E1EF7535E35954911D554DFEA44E42DB79B0FB04D3E90477795F66F8A8FEB792
F15D59414AE3673345D8ABA5BD4D2AD8EE578BFD9E28ECEFDCBE7E7D857182A9
F46443C79272F5FFF983387F498DC0041982F82C8B0FA76BA464F5DD7119CCD6
2BCFB1365FA28B858FC14D73B10CF5A83F8B> |-
/nine <1C60D8A8C9B7A73DD0C741EDEE83FA306ACFF34B0F4BCBA36C21A7408
C6F9BEB4A442B2F13237BF635FDFAB907B29059292DDAFF5DABCEDC6EC41C5F3
C648AFBF12E0ECD4E60C870F065877946C9D47E8B9420F50B2720233BC04950F
88E0C085E4CFFDC37232A1913DAF7D116A465520E3E0185527DFA5DEE32> |-
/P <1C60D8A8C9B7EF32570E39CC82D8FC3971C64FFF40AB84806AE53A80D003
59C85B6AFD0D4E4516E6F925E114CB5694CA3C3BB5BD1D3AACEA6F4D4E17877A
A50A9AB3B90A72FF729470C063D06BEEAA5184A0D925F90DCE26119419701EB2
53AFCA84A1D0339652DC6259CB60A6C47C07B17E94492CCC7FA176E9C4175D61
D356F93D23B513D5121081D0F8AD8E04BD4C29CCCFFE386A44> |-
/S <1C60D8A8C9B7EF32A193189DA2467EEF90BB4843AFCD07682C17FCB181C3
F70B0CA8436486C289ED34AE435D16FF1CB07A2B01CAD9573442FA519C68EF9A
198BFAE5C4A460021A5C56FEA9BD8D624F7DAF5F40358D4BEEF4C33B8CA9313A
0976CADAB3AF967336E068B5FDB3E208F4079D52BB0970F735315F1E256DFA87
D04984A8> |-
/.notdef <1C60D8A8C9B8707C25> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
reset_gvm
/NQHFPP+Times-Roman /GNMBAA+Times-Roman findfont ct_VMDictPut
/NQHFPP+Times-Roman*1 
[32{/.notdef}rp /space 10{/.notdef}rp /plus /.notdef /hyphen /period /.notdef 
/zero /one /two /three 3{/.notdef}rp /seven /eight /nine 
22{/.notdef}rp /P 2{/.notdef}rp /S 172{/.notdef}rp]
NQHFPP+Times-Roman nf
NQHFPP+Times-Roman*1 [5.4 0 0 -5.4 0 0 ]msf
231.435 558.024 mo
(3)sh
NQHFPP+Times-Roman*1 [8.1 0 0 -8.1 0 0 ]msf
234.136 561.587 mo
(P)sh
NQHFPP+Times-Roman*1 [5.4 0 0 -5.4 0 0 ]msf
238.778 562.992 mo
(2)sh
NQHFPP+Times-Roman*1 [8.1 0 0 -8.1 0 0 ]msf
241.479 561.587 mo
(+)sh
NQHFPP+Times-Roman*1 [5.4 0 0 -5.4 0 0 ]msf
246.015 558.024 mo
(3)sh
NQHFPP+Times-Roman*1 [8.1 0 0 -8.1 0 0 ]msf
248.607 561.587 mo
(P)sh
NQHFPP+Times-Roman*1 [5.4 0 0 -5.4 0 0 ]msf
253.251 562.992 mo
(1)sh
NQHFPP+Times-Roman*1 [8.1 0 0 -8.1 0 0 ]msf
255.95 561.587 mo
( )sh
NQHFPP+Times-Roman*1 [5.4 0 0 -5.4 0 0 ]msf
231.435 568.824 mo
(3)sh
NQHFPP+Times-Roman*1 [8.1 0 0 -8.1 0 0 ]msf
234.136 572.388 mo
(P)sh
NQHFPP+Times-Roman*1 [5.4 0 0 -5.4 0 0 ]msf
238.778 573.791 mo
(2)sh
NQHFPP+Times-Roman*1 [8.1 0 0 -8.1 0 0 ]msf
241.479 572.388 mo
(+)sh
NQHFPP+Times-Roman*1 [5.4 0 0 -5.4 0 0 ]msf
246.015 568.824 mo
(3)sh
NQHFPP+Times-Roman*1 [8.1 0 0 -8.1 0 0 ]msf
248.607 572.388 mo
(P)sh
NQHFPP+Times-Roman*1 [5.4 0 0 -5.4 0 0 ]msf
253.251 573.791 mo
(2)sh
NQHFPP+Times-Roman*1 [8.1 0 0 -8.1 0 0 ]msf
255.95 572.388 mo
( )sh
NQHFPP+Times-Roman*1 [5.4 0 0 -5.4 0 0 ]msf
229.396 517.103 mo
(3)sh
NQHFPP+Times-Roman*1 [8.1 0 0 -8.1 0 0 ]msf
232.096 520.667 mo
(P)sh
NQHFPP+Times-Roman*1 [5.4 0 0 -5.4 0 0 ]msf
236.738 522.071 mo
(2)sh
NQHFPP+Times-Roman*1 [8.1 0 0 -8.1 0 0 ]msf
239.438 520.667 mo
(+)sh
NQHFPP+Times-Roman*1 [5.4 0 0 -5.4 0 0 ]msf
243.975 517.103 mo
(1)sh
NQHFPP+Times-Roman*1 [8.1 0 0 -8.1 0 0 ]msf
246.675 520.667 mo
(S)sh
NQHFPP+Times-Roman*1 [5.4 0 0 -5.4 0 0 ]msf
251.211 522.071 mo
(0)sh
NQHFPP+Times-Roman*1 [8.1 0 0 -8.1 0 0 ]msf
253.91 520.667 mo
( )sh
NQHFPP+Times-Roman*1 [6.9792 0 0 -6.9792 0 0 ]msf
97.7856 598.667 mo
(-798.3)
[2.32402 3.4896 3.4896 3.4896 1.7448 0 ]xsh
97.7856 569.27 mo
(-798.2)
[2.32402 3.4896 3.4896 3.4896 1.7448 0 ]xsh
97.7856 539.874 mo
(-798.1)
[2.32402 3.4896 3.4896 3.4896 1.7448 0 ]xsh
97.7856 510.596 mo
(-798.0)
[2.32402 3.4896 3.4896 3.4896 1.7448 0 ]xsh
97.7856 481.2 mo
(-797.9)
[2.32402 3.4896 3.4896 3.4896 1.7448 0 ]xsh
.414 lw
1 lc
1 lj
10 ml
[] 0 dsh
true sadj
119.69 596.737 mo
119.69 595.538 li
@
135.17 596.737 mo
135.17 594.338 li
@
150.651 596.737 mo
150.651 595.538 li
@
166.252 596.737 mo
166.252 594.338 li
@
181.732 596.737 mo
181.732 595.538 li
@
197.213 596.737 mo
197.213 594.338 li
@
212.694 596.737 mo
212.694 595.538 li
@
228.294 596.737 mo
228.294 594.338 li
@
243.775 596.737 mo
243.775 595.538 li
@
259.256 596.737 mo
259.256 594.338 li
@
119.69 596.737 mo
267.057 596.737 li
@
119.69 596.737 mo
121.729 596.737 li
@
119.69 581.977 mo
120.77 581.977 li
@
119.69 567.337 mo
121.729 567.337 li
@
119.69 552.576 mo
120.77 552.576 li
@
119.69 537.936 mo
121.729 537.936 li
@
119.69 523.295 mo
120.77 523.295 li
@
119.69 508.534 mo
121.729 508.534 li
@
119.69 493.894 mo
120.77 493.894 li
@
119.69 479.133 mo
121.729 479.133 li
@
119.69 596.734 mo
119.69 473.252 li
@
gsave
123.033 591.828 mo
136.713 591.828 li
136.713 473.268 li
123.033 473.268 li
cp
clp
.35 lw
123.409 336.092 mo
124.01 368.133 li
124.01 371.373 li
124.899 420.902 125.817 470.416 127.249 519.936 cv
127.37 522.937 li
127.489 525.816 li
128.068 542.62 128.876 559.39 129.77 576.098 cv
129.889 576.337 li
129.889 577.298 li
130.009 577.298 li
130.009 578.377 li
130.13 578.496 li
130.13 579.457 li
130.249 579.577 li
130.249 580.417 li
130.37 580.537 li
130.37 581.377 li
130.489 581.497 li
130.489 582.217 li
130.61 582.217 li
130.61 583.058 li
130.729 583.058 li
130.729 583.777 li
130.85 583.898 li
130.85 584.497 li
130.969 584.617 li
130.969 585.218 li
131.089 585.338 li
131.089 585.818 li
131.21 585.818 li
131.21 586.418 li
131.329 586.418 li
131.329 586.898 li
131.45 586.898 li
131.45 587.377 li
131.569 587.497 li
131.569 587.857 li
131.69 587.857 li
131.69 588.217 li
131.809 588.337 li
131.809 588.697 li
131.929 588.697 li
131.929 589.057 li
132.05 589.057 li
132.05 589.417 li
132.17 589.417 li
132.17 589.657 li
132.29 589.777 li
132.29 590.018 li
132.409 590.018 li
132.409 590.257 li
132.53 590.257 li
132.53 590.497 li
132.649 590.497 li
132.649 590.617 li
132.77 590.737 li
132.77 590.858 li
132.889 590.858 li
132.889 590.978 li
133.01 590.978 li
133.01 591.098 li
133.13 591.098 li
133.13 591.218 li
133.37 591.218 li
133.37 591.337 li
133.969 591.337 li
133.969 591.218 li
134.21 591.218 li
134.21 591.098 li
134.33 591.098 li
134.45 590.978 li
134.569 590.978 li
134.569 590.858 li
134.69 590.858 li
134.69 590.737 li
134.809 590.737 li
134.809 590.497 li
134.929 590.497 li
134.929 590.377 li
135.05 590.377 li
135.05 590.257 li
135.17 590.257 li
135.17 590.018 li
135.29 590.018 li
135.29 589.898 li
135.41 589.777 li
135.41 589.657 li
135.53 589.657 li
135.53 589.417 li
135.65 589.417 li
135.65 589.297 li
135.769 589.177 li
135.769 589.057 li
135.889 588.938 li
135.889 588.818 li
136.01 588.697 li
136.01 588.457 li
136.13 588.457 li
136.13 588.217 li
136.25 588.217 li
@
grestore
.35 lw
136.25 588.217 mo
136.25 587.977 li
136.37 587.977 li
136.37 587.736 li
136.49 587.736 li
136.49 587.497 li
136.61 587.497 li
136.61 587.137 li
136.73 587.137 li
136.73 586.898 li
136.85 586.898 li
136.85 586.658 li
136.97 586.538 li
136.97 586.298 li
137.09 586.298 li
137.09 585.938 li
137.21 585.938 li
137.21 585.697 li
137.33 585.697 li
137.33 585.338 li
137.45 585.338 li
137.45 585.098 li
137.57 585.098 li
137.57 584.737 li
137.689 584.737 li
137.689 584.497 li
137.811 584.377 li
137.811 584.138 li
137.93 584.138 li
137.93 583.898 li
138.051 583.777 li
138.051 583.537 li
138.17 583.417 li
138.17 583.178 li
138.29 583.058 li
138.29 582.818 li
138.41 582.818 li
138.41 582.457 li
138.53 582.457 li
138.53 582.097 li
138.65 582.097 li
138.65 581.737 li
138.77 581.737 li
138.77 581.377 li
138.891 581.377 li
138.891 581.017 li
139.01 581.017 li
139.01 580.657 li
139.131 580.657 li
139.131 580.417 li
139.25 580.297 li
139.25 580.057 li
139.37 580.057 li
139.37 579.696 li
139.49 579.696 li
139.49 579.337 li
139.609 579.337 li
139.609 578.977 li
139.73 578.977 li
139.73 578.616 li
139.85 578.616 li
139.85 578.257 li
139.971 578.257 li
139.971 577.898 li
140.09 577.898 li
140.09 577.537 li
140.211 577.537 li
140.211 577.178 li
140.33 577.178 li
140.33 576.818 li
140.45 576.818 li
140.45 576.457 li
140.57 576.457 li
140.57 576.217 li
140.689 576.098 li
140.689 575.858 li
140.811 575.737 li
140.811 575.497 li
140.93 575.497 li
140.93 575.137 li
141.051 575.137 li
141.051 574.777 li
141.17 574.777 li
141.17 574.417 li
141.291 574.417 li
141.291 574.057 li
141.41 574.057 li
141.41 573.697 li
141.53 573.697 li
141.53 573.457 li
141.65 573.337 li
141.65 573.097 li
141.769 573.097 li
141.769 572.737 li
141.891 572.737 li
141.891 572.377 li
142.01 572.377 li
142.01 572.137 li
142.131 572.017 li
142.131 571.777 li
142.25 571.777 li
142.25 571.417 li
142.371 571.417 li
142.371 571.057 li
142.49 571.057 li
142.49 570.697 li
142.61 570.697 li
142.61 570.456 li
142.73 570.456 li
142.73 570.097 li
142.85 570.097 li
142.85 569.857 li
142.971 569.737 li
142.971 569.496 li
143.09 569.496 li
143.09 569.137 li
143.211 569.137 li
143.211 568.898 li
143.33 568.778 li
143.33 568.537 li
143.45 568.537 li
143.45 568.177 li
143.57 568.177 li
143.57 567.937 li
143.69 567.937 li
143.69 567.698 li
143.811 567.577 li
143.811 567.337 li
143.931 567.337 li
143.931 567.097 li
144.051 566.978 li
144.051 566.738 li
144.17 566.738 li
144.17 566.497 li
144.291 566.497 li
144.291 566.257 li
144.41 566.257 li
144.41 565.898 li
144.53 565.898 li
144.53 565.658 li
144.65 565.658 li
144.65 565.417 li
144.77 565.297 li
144.77 565.057 li
144.891 565.057 li
144.891 564.818 li
145.011 564.818 li
145.011 564.577 li
145.131 564.577 li
145.131 564.337 li
145.25 564.337 li
145.25 564.217 li
145.37 564.097 li
145.37 563.977 li
145.671 563.607 145.714 563.114 146.091 562.777 cv
146.091 562.657 li
146.211 562.417 li
146.33 562.296 li
146.33 562.177 li
146.45 562.056 li
146.57 561.817 li
146.57 561.697 li
146.69 561.576 li
146.811 561.337 li
146.931 561.216 li
147.051 560.976 li
147.051 560.857 li
147.171 560.737 li
147.29 560.496 li
147.53 560.256 li
147.65 560.017 li
147.65 559.898 li
147.77 559.658 li
148.011 559.417 li
148.13 559.177 li
148.37 558.937 li
148.37 558.697 li
148.73 558.337 li
148.851 558.097 li
149.091 557.857 li
149.091 557.738 li
149.331 557.497 li
149.45 557.257 li
149.811 556.897 li
149.811 556.777 li
150.53 556.057 li
150.53 555.937 li
150.77 555.697 li
150.892 555.697 li
151.011 555.577 li
151.37 555.216 li
151.37 555.097 li
151.491 555.097 li
151.971 554.616 li
152.091 554.616 li
152.091 554.496 li
152.326 554.328 152.574 554.184 152.811 554.017 cv
152.811 553.896 li
152.931 553.896 li
153.171 553.657 li
153.291 553.657 li
153.411 553.537 li
153.53 553.537 li
153.651 553.416 li
153.651 553.296 li
153.77 553.296 li
153.891 553.177 li
154.011 553.177 li
154.131 553.056 li
154.251 553.056 li
154.491 552.816 li
154.61 552.816 li
154.731 552.697 li
154.971 552.697 li
155.211 552.456 li
155.451 552.456 li
155.571 552.336 li
155.69 552.336 li
155.811 552.216 li
155.931 552.216 li
156.051 552.096 li
156.291 552.096 li
156.411 551.976 li
156.651 551.976 li
156.651 551.857 li
156.771 551.857 li
156.891 551.736 li
157.251 551.736 li
157.371 551.617 li
157.611 551.617 li
157.73 551.496 li
158.091 551.496 li
158.091 551.376 li
158.451 551.376 li
158.571 551.256 li
158.811 551.256 li
158.932 551.137 li
159.531 551.137 li
159.531 551.017 li
160.131 551.017 li
160.252 550.898 li
160.73 550.898 li
160.851 550.777 li
161.57 550.777 li
161.691 550.658 li
162.531 550.658 li
162.531 550.537 li
163.731 550.537 li
163.851 550.417 li
165.291 550.417 li
165.411 550.297 li
167.811 550.297 li
167.932 550.177 li
171.411 550.177 li
171.532 550.057 li
172.972 550.057 li
172.972 549.937 li
173.811 549.937 li
173.932 549.818 li
174.651 549.818 li
174.772 549.697 li
175.372 549.697 li
175.492 549.578 li
176.572 549.578 li
176.692 549.456 li
187.013 549.456 li
187.133 549.337 li
200.693 549.337 li
262.976 549.337 li
@
gsave
123.033 568.428 mo
136.713 568.428 li
136.713 473.268 li
123.033 473.268 li
cp
clp
123.409 231.569 mo
124.01 269.01 li
124.01 272.731 li
125.218 344.664 126.048 416.718 128.45 488.615 cv
128.45 491.135 li
128.69 495.695 li
129.239 512.79 129.744 529.715 131.329 546.096 cv
131.45 546.215 li
131.45 547.416 li
131.569 547.416 li
131.569 548.375 li
131.69 548.375 li
131.69 549.456 li
131.809 549.577 li
131.809 550.536 li
131.929 550.657 li
131.929 551.496 li
132.05 551.616 li
132.05 552.576 li
132.17 552.576 li
132.17 553.415 li
132.29 553.536 li
132.29 554.256 li
132.409 554.375 li
132.409 555.215 li
132.53 555.215 li
132.53 556.056 li
132.649 556.056 li
132.649 556.776 li
132.77 556.896 li
132.77 557.376 li
132.889 557.496 li
132.889 558.096 li
133.01 558.216 li
133.01 558.817 li
133.13 558.936 li
133.13 559.536 li
133.25 559.536 li
133.25 560.135 li
133.37 560.255 li
133.37 560.616 li
133.489 560.736 li
133.489 561.215 li
133.61 561.215 li
133.61 561.696 li
133.729 561.816 li
133.729 562.295 li
133.849 562.295 li
133.849 562.776 li
133.969 562.776 li
133.969 563.136 li
134.09 563.256 li
134.09 563.616 li
134.21 563.616 li
134.21 563.976 li
134.33 564.096 li
134.33 564.455 li
134.45 564.455 li
134.45 564.817 li
134.569 564.817 li
134.569 565.056 li
134.69 565.176 li
134.69 565.416 li
134.809 565.416 li
134.809 565.776 li
134.929 565.776 li
134.929 566.016 li
135.05 566.016 li
135.05 566.256 li
135.17 566.376 li
135.17 566.496 li
135.29 566.617 li
135.29 566.737 li
135.41 566.737 li
135.41 566.977 li
135.53 566.977 li
135.53 567.216 li
135.65 567.216 li
135.65 567.336 li
135.769 567.336 li
135.769 567.577 li
135.889 567.577 li
135.889 567.697 li
136.01 567.697 li
136.01 567.817 li
136.13 567.817 li
136.13 567.936 li
136.25 567.936 li
@
grestore
136.25 567.936 mo
136.25 568.057 li
136.37 568.057 li
136.37 568.176 li
136.49 568.176 li
136.49 568.297 li
136.73 568.297 li
136.73 568.416 li
136.97 568.416 li
136.97 568.537 li
137.93 568.537 li
137.93 568.416 li
138.29 568.416 li
138.29 568.297 li
138.53 568.297 li
138.53 568.176 li
138.65 568.176 li
138.65 568.057 li
138.891 568.057 li
138.891 567.936 li
139.01 567.936 li
139.01 567.817 li
139.25 567.817 li
139.25 567.697 li
139.37 567.697 li
139.37 567.577 li
139.49 567.577 li
139.49 567.457 li
139.609 567.457 li
139.609 567.336 li
139.73 567.336 li
139.73 567.216 li
139.85 567.216 li
139.85 567.096 li
139.971 567.096 li
139.971 566.977 li
140.09 566.977 li
140.09 566.737 li
140.211 566.737 li
140.211 566.617 li
140.33 566.617 li
140.33 566.497 li
140.45 566.497 li
140.45 566.377 li
140.57 566.377 li
140.57 566.256 li
140.689 566.256 li
140.689 566.016 li
140.811 566.016 li
140.811 565.897 li
140.93 565.897 li
140.93 565.776 li
141.051 565.776 li
141.051 565.536 li
141.17 565.536 li
141.17 565.417 li
141.291 565.417 li
141.291 565.296 li
141.41 565.296 li
141.41 565.056 li
141.53 565.056 li
141.53 564.936 li
141.65 564.936 li
141.65 564.817 li
141.769 564.817 li
141.769 564.577 li
141.891 564.577 li
141.891 564.456 li
142.01 564.336 li
142.01 564.216 li
142.131 564.216 li
142.131 564.096 li
142.25 564.096 li
142.25 563.856 li
142.371 563.856 li
142.371 563.736 li
142.49 563.736 li
142.49 563.497 li
142.61 563.497 li
142.61 563.376 li
142.73 563.376 li
142.73 563.256 li
142.85 563.136 li
142.85 563.016 li
142.971 563.016 li
142.971 562.776 li
143.09 562.776 li
143.09 562.656 li
143.211 562.656 li
143.211 562.417 li
143.33 562.417 li
143.33 562.295 li
143.45 562.295 li
143.45 562.055 li
143.57 562.055 li
143.57 561.936 li
143.69 561.936 li
143.69 561.816 li
143.811 561.696 li
143.811 561.576 li
143.931 561.576 li
143.931 561.336 li
144.051 561.336 li
144.051 561.215 li
144.17 561.215 li
144.17 560.975 li
144.291 560.975 li
144.291 560.856 li
144.41 560.856 li
144.41 560.736 li
144.53 560.736 li
144.53 560.496 li
144.65 560.496 li
144.65 560.376 li
144.77 560.376 li
144.77 560.135 li
144.891 560.135 li
144.891 560.016 li
145.011 560.016 li
145.011 559.897 li
145.131 559.776 li
145.131 559.657 li
145.25 559.657 li
145.25 559.537 li
145.37 559.537 li
145.37 559.417 li
145.49 559.296 li
145.49 559.176 li
145.61 559.176 li
145.61 559.057 li
145.73 559.057 li
145.73 558.936 li
145.851 558.817 li
145.851 558.696 li
145.971 558.696 li
146.14 558.462 146.282 558.211 146.45 557.976 cv
146.57 557.976 li
146.57 557.856 li
147.051 557.377 li
147.051 557.256 li
147.65 556.657 li
147.65 556.536 li
147.77 556.417 li
148.37 555.816 li
148.37 555.696 li
148.491 555.696 li
148.61 555.577 li
149.091 555.096 li
149.091 554.976 li
149.21 554.856 li
149.331 554.856 li
149.69 554.496 li
149.811 554.496 li
149.811 554.376 li
150.05 554.135 li
150.171 554.135 li
150.411 553.895 li
150.53 553.895 li
150.53 553.776 li
150.651 553.656 li
150.77 553.656 li
151.011 553.416 li
151.13 553.416 li
151.491 553.055 li
151.61 553.055 li
151.851 552.815 li
151.971 552.815 li
152.21 552.576 li
152.331 552.576 li
152.45 552.456 li
152.571 552.456 li
152.69 552.336 li
152.811 552.336 li
152.931 552.215 li
153.051 552.215 li
153.171 552.095 li
153.291 552.095 li
153.411 551.975 li
153.651 551.975 li
153.651 551.856 li
153.77 551.856 li
153.891 551.735 li
154.131 551.735 li
154.251 551.616 li
154.371 551.616 li
154.491 551.496 li
154.731 551.496 li
154.851 551.376 li
155.091 551.376 li
155.211 551.256 li
155.451 551.256 li
155.571 551.136 li
155.931 551.136 li
155.931 551.016 li
156.411 551.016 li
156.531 550.897 li
156.891 550.897 li
157.011 550.776 li
157.491 550.776 li
157.611 550.657 li
158.211 550.657 li
158.331 550.536 li
159.172 550.536 li
159.291 550.417 li
160.012 550.417 li
160.131 550.296 li
160.971 550.296 li
160.971 550.176 li
161.691 550.176 li
161.81 550.056 li
162.531 550.056 li
162.531 549.936 li
163.371 549.936 li
163.491 549.817 li
164.811 549.817 li
164.811 549.696 li
167.811 549.696 li
167.811 549.577 li
173.571 549.577 li
173.692 549.456 li
187.013 549.456 li
187.133 549.336 li
200.693 549.336 li
262.976 549.336 li
@
129.649 520.176 mo
129.649 521.376 li
129.77 521.495 li
129.77 522.816 li
129.889 522.816 li
129.889 523.896 li
130.008 523.896 li
130.008 525.095 li
130.129 525.216 li
130.129 526.296 li
130.249 526.415 li
130.249 527.495 li
130.37 527.616 li
130.37 528.575 li
130.489 528.696 li
130.489 529.655 li
130.61 529.655 li
130.61 530.616 li
130.729 530.736 li
130.729 531.696 li
130.85 531.817 li
130.85 532.656 li
130.969 532.777 li
130.969 533.615 li
131.088 533.736 li
131.088 534.456 li
131.21 534.456 li
131.21 535.296 li
131.329 535.415 li
131.329 536.136 li
131.45 536.136 li
131.45 536.976 li
131.569 536.976 li
131.569 537.576 li
131.69 537.696 li
131.69 538.416 li
131.809 538.416 li
131.809 539.136 li
131.929 539.257 li
131.929 539.857 li
132.049 539.977 li
132.049 540.576 li
132.169 540.696 li
132.169 541.177 li
132.29 541.296 li
132.29 541.897 li
132.409 541.897 li
132.409 542.495 li
132.53 542.616 li
132.53 543.096 li
132.649 543.216 li
132.649 543.696 li
132.77 543.816 li
132.77 544.176 li
132.889 544.296 li
132.889 544.776 li
133.009 544.776 li
133.009 545.256 li
133.129 545.256 li
133.129 545.735 li
133.25 545.857 li
133.25 546.216 li
133.37 546.336 li
133.37 546.696 li
133.489 546.696 li
133.489 547.177 li
133.61 547.177 li
133.61 547.536 li
133.729 547.536 li
133.729 547.897 li
133.849 548.017 li
133.849 548.376 li
133.969 548.376 li
133.969 548.736 li
134.089 548.736 li
134.089 549.097 li
134.21 549.097 li
134.21 549.456 li
134.33 549.456 li
134.33 549.817 li
134.45 549.817 li
134.45 550.177 li
134.569 550.177 li
134.569 550.417 li
134.69 550.417 li
134.69 550.776 li
134.809 550.776 li
134.809 551.017 li
134.929 551.017 li
134.929 551.256 li
135.049 551.256 li
135.049 551.496 li
135.169 551.496 li
135.169 551.735 li
135.29 551.735 li
135.29 551.976 li
135.41 551.976 li
135.41 552.216 li
135.53 552.216 li
135.53 552.336 li
135.65 552.336 li
135.65 552.576 li
135.769 552.576 li
135.769 552.696 li
135.889 552.816 li
135.889 552.937 li
136.009 552.937 li
136.009 553.056 li
136.129 553.177 li
136.129 553.296 li
136.25 553.296 li
136.25 553.416 li
136.37 553.416 li
136.37 553.536 li
136.49 553.536 li
136.49 553.656 li
136.61 553.656 li
136.61 553.776 li
136.73 553.896 li
136.849 554.017 li
136.969 554.017 li
136.969 554.136 li
137.089 554.136 li
137.089 554.257 li
137.21 554.257 li
137.21 554.376 li
137.45 554.376 li
137.45 554.496 li
137.57 554.496 li
137.689 554.616 li
137.929 554.616 li
137.929 554.736 li
138.169 554.736 li
138.169 554.857 li
138.769 554.857 li
138.769 554.977 li
139.609 554.977 li
139.609 554.857 li
140.211 554.857 li
140.211 554.736 li
140.57 554.736 li
140.689 554.616 li
140.929 554.616 li
141.05 554.496 li
141.291 554.496 li
141.291 554.376 li
141.53 554.376 li
141.53 554.257 li
141.769 554.257 li
141.769 554.136 li
142.009 554.136 li
142.009 554.017 li
142.25 554.017 li
142.25 553.896 li
142.49 553.896 li
142.49 553.776 li
142.73 553.776 li
142.73 553.656 li
142.97 553.656 li
142.97 553.536 li
143.089 553.536 li
143.089 553.416 li
143.33 553.416 li
143.33 553.296 li
143.57 553.296 li
143.57 553.177 li
143.69 553.177 li
143.69 553.056 li
143.93 553.056 li
143.93 552.937 li
144.05 552.937 li
144.169 552.937 li
144.169 552.816 li
144.41 552.816 li
144.41 552.696 li
144.53 552.696 li
144.53 552.576 li
144.77 552.576 li
144.77 552.456 li
145.01 552.456 li
145.01 552.336 li
145.25 552.336 li
145.25 552.216 li
145.49 552.216 li
145.61 552.096 li
145.73 552.096 li
145.85 551.976 li
146.09 551.976 li
146.09 551.857 li
146.33 551.857 li
146.33 551.735 li
146.57 551.735 li
146.57 551.616 li
146.93 551.616 li
147.05 551.496 li
147.17 551.496 li
147.29 551.376 li
147.53 551.376 li
147.65 551.256 li
147.77 551.256 li
147.89 551.137 li
148.251 551.137 li
148.37 551.017 li
148.61 551.017 li
148.73 550.898 li
149.09 550.898 li
149.09 550.776 li
149.571 550.776 li
149.69 550.657 li
150.049 550.657 li
150.17 550.536 li
150.651 550.536 li
150.77 550.417 li
151.37 550.417 li
151.37 550.297 li
152.09 550.297 li
152.09 550.177 li
152.811 550.177 li
152.811 550.057 li
153.651 550.057 li
153.651 549.937 li
154.97 549.937 li
155.09 549.817 li
158.691 549.817 li
158.81 549.696 li
163.97 549.696 li
164.091 549.577 li
168.411 549.577 li
168.532 549.456 li
173.33 549.456 li
173.452 549.337 li
178.251 549.337 li
178.251 549.217 li
182.331 549.217 li
182.452 549.097 li
186.171 549.097 li
186.291 548.977 li
201.412 548.977 li
201.532 548.857 li
262.976 548.857 li
@
gsave
123.033 550.187 mo
136.713 550.187 li
136.713 473.268 li
123.033 473.268 li
cp
clp
123.409 272.61 mo
124.01 305.131 li
124.01 308.372 li
125.024 362.241 125.841 416.164 127.609 470.015 cv
127.729 472.894 li
127.849 475.654 li
128.38 492.43 129.056 509.764 130.13 526.296 cv
130.249 526.415 li
130.249 527.616 li
130.37 527.616 li
130.37 528.815 li
130.489 528.935 li
130.489 529.895 li
130.61 530.016 li
130.61 531.096 li
130.729 531.096 li
130.729 532.177 li
130.85 532.177 li
130.85 533.136 li
130.969 533.257 li
130.969 534.216 li
131.089 534.216 li
131.089 534.935 li
131.21 535.055 li
131.21 535.895 li
131.329 536.015 li
131.329 536.735 li
131.45 536.735 li
131.45 537.456 li
131.569 537.576 li
131.569 538.177 li
131.69 538.296 li
131.69 538.895 li
131.809 539.016 li
131.809 539.736 li
131.929 539.736 li
131.929 540.337 li
132.05 540.456 li
132.05 541.056 li
132.17 541.056 li
132.17 541.657 li
132.29 541.657 li
132.29 542.136 li
132.409 542.255 li
132.409 542.735 li
132.53 542.855 li
132.53 543.336 li
132.649 543.336 li
132.649 543.815 li
132.77 543.815 li
132.77 544.175 li
132.889 544.296 li
132.889 544.655 li
133.01 544.655 li
133.01 545.135 li
133.13 545.135 li
133.13 545.496 li
133.25 545.496 li
133.25 545.856 li
133.37 545.856 li
133.37 546.215 li
133.489 546.215 li
133.489 546.456 li
133.61 546.576 li
133.61 546.816 li
133.729 546.816 li
133.729 547.055 li
133.849 547.176 li
133.849 547.417 li
133.969 547.417 li
133.969 547.656 li
134.09 547.656 li
134.09 547.776 li
134.21 547.896 li
134.21 548.016 li
134.33 548.016 li
134.33 548.257 li
134.45 548.257 li
134.45 548.497 li
134.569 548.497 li
134.569 548.616 li
134.69 548.616 li
134.69 548.736 li
134.809 548.736 li
134.809 548.856 li
134.929 548.976 li
134.929 549.096 li
135.17 549.096 li
135.17 549.216 li
135.29 549.216 li
135.29 549.337 li
135.41 549.337 li
135.41 549.456 li
135.65 549.456 li
135.65 549.577 li
136.01 549.577 li
136.01 549.696 li
136.25 549.696 li
@
grestore
136.25 549.696 mo
136.85 549.696 li
136.97 549.577 li
137.33 549.577 li
137.33 549.456 li
137.57 549.456 li
137.57 549.337 li
137.811 549.337 li
137.811 549.217 li
138.051 549.217 li
138.051 549.096 li
138.17 549.096 li
138.17 548.976 li
138.41 548.976 li
138.41 548.856 li
138.53 548.856 li
138.53 548.736 li
138.65 548.736 li
138.65 548.616 li
138.77 548.616 li
138.77 548.497 li
139.01 548.497 li
139.01 548.376 li
139.131 548.376 li
139.131 548.257 li
139.25 548.257 li
139.25 548.136 li
139.37 548.136 li
139.37 548.016 li
139.49 548.016 li
139.49 547.896 li
139.609 547.896 li
139.609 547.776 li
139.73 547.776 li
139.85 547.656 li
139.971 547.656 li
139.971 547.536 li
140.09 547.536 li
140.09 547.417 li
140.211 547.417 li
140.211 547.296 li
140.33 547.296 li
140.33 547.177 li
140.45 547.177 li
140.45 547.055 li
140.57 547.055 li
140.57 546.936 li
140.689 546.936 li
140.689 546.816 li
140.811 546.816 li
140.811 546.696 li
140.93 546.696 li
140.93 546.576 li
141.051 546.576 li
141.051 546.456 li
141.17 546.456 li
141.17 546.336 li
141.291 546.336 li
141.291 546.216 li
141.41 546.216 li
141.41 546.096 li
141.53 546.096 li
141.53 545.975 li
141.65 545.975 li
141.65 545.856 li
141.769 545.856 li
141.769 545.735 li
141.891 545.735 li
141.891 545.616 li
142.01 545.616 li
142.01 545.496 li
142.131 545.496 li
142.131 545.376 li
142.25 545.376 li
142.25 545.256 li
142.85 545.256 li
142.85 545.376 li
143.09 545.376 li
143.09 545.496 li
143.211 545.496 li
143.211 545.616 li
143.45 545.616 li
143.45 545.735 li
143.57 545.735 li
143.57 545.856 li
143.811 545.856 li
143.811 545.975 li
144.051 545.975 li
144.051 546.096 li
144.17 546.096 li
144.17 546.216 li
144.41 546.216 li
144.41 546.336 li
144.65 546.336 li
144.65 546.456 li
144.891 546.456 li
144.891 546.576 li
145.131 546.576 li
145.131 546.696 li
145.37 546.696 li
145.37 546.816 li
145.73 546.816 li
145.73 546.936 li
145.971 546.936 li
146.091 547.055 li
146.211 547.055 li
146.33 547.177 li
146.57 547.177 li
146.57 547.296 li
146.811 547.296 li
146.931 547.417 li
147.051 547.417 li
147.171 547.536 li
147.53 547.536 li
147.65 547.656 li
147.77 547.656 li
147.891 547.776 li
148.13 547.776 li
148.251 547.896 li
148.491 547.896 li
148.61 548.016 li
148.971 548.016 li
149.091 548.136 li
149.331 548.136 li
149.45 548.257 li
149.811 548.257 li
149.811 548.376 li
150.29 548.376 li
150.411 548.497 li
150.77 548.497 li
150.892 548.616 li
151.37 548.616 li
151.37 548.736 li
152.091 548.736 li
152.21 548.856 li
153.171 548.856 li
153.291 548.976 li
154.491 548.976 li
154.61 549.096 li
155.931 549.096 li
156.051 549.217 li
161.025 549.455 166.242 549.109 171.171 549.456 cv
171.292 549.577 li
172.251 549.577 li
172.251 549.696 li
173.811 549.696 li
173.932 549.817 li
176.811 549.817 li
176.932 549.696 li
200.693 549.696 li
262.976 549.696 li
@
gsave
123.033 541.187 mo
136.713 541.187 li
136.713 473.268 li
123.033 473.268 li
cp
clp
123.409 215.61 mo
124.01 252.811 li
124.01 256.531 li
125.094 322.362 125.972 388.246 127.969 454.055 cv
128.089 456.935 li
128.21 459.575 li
128.803 477.52 129.285 495.894 130.61 513.336 cv
130.729 513.457 li
130.729 514.777 li
130.85 514.777 li
130.85 516.095 li
130.969 516.215 li
130.969 517.416 li
131.089 517.416 li
131.089 518.376 li
131.21 518.496 li
131.205 519.86 131.514 521.228 131.569 522.577 cv
131.69 522.697 li
131.69 523.657 li
131.809 523.777 li
131.809 524.616 li
131.929 524.736 li
131.929 525.576 li
132.05 525.696 li
132.05 526.416 li
132.17 526.537 li
132.17 527.255 li
132.29 527.376 li
132.29 528.096 li
132.409 528.096 li
132.409 528.816 li
132.53 528.936 li
132.53 529.656 li
132.649 529.656 li
132.649 530.376 li
132.77 530.376 li
132.77 530.976 li
132.889 530.976 li
132.889 531.577 li
133.01 531.697 li
133.01 532.177 li
133.13 532.296 li
133.13 532.777 li
133.25 532.897 li
133.25 533.376 li
133.37 533.495 li
133.37 533.856 li
133.489 533.856 li
133.489 534.335 li
133.61 534.456 li
133.61 534.816 li
133.729 534.936 li
133.729 535.296 li
133.849 535.296 li
133.849 535.777 li
133.969 535.777 li
133.969 536.136 li
134.09 536.256 li
134.09 536.617 li
134.21 536.617 li
134.21 536.976 li
134.33 536.976 li
134.33 537.336 li
134.45 537.336 li
134.45 537.697 li
134.569 537.697 li
134.569 537.937 li
134.69 537.937 li
134.69 538.296 li
134.809 538.296 li
134.809 538.537 li
134.929 538.537 li
134.929 538.777 li
135.05 538.777 li
135.05 539.017 li
135.17 539.017 li
135.17 539.257 li
135.29 539.257 li
135.29 539.496 li
135.41 539.496 li
135.41 539.737 li
135.53 539.737 li
135.53 539.857 li
135.65 539.857 li
135.65 540.097 li
135.769 540.097 li
135.769 540.216 li
135.889 540.216 li
135.889 540.337 li
136.01 540.337 li
136.01 540.456 li
136.13 540.456 li
136.13 540.577 li
136.25 540.697 li
@
grestore
136.25 540.696 mo
136.37 540.816 li
136.49 540.816 li
136.49 540.936 li
136.61 540.936 li
136.61 541.056 li
136.85 541.056 li
136.85 541.176 li
137.09 541.176 li
137.09 541.296 li
137.689 541.296 li
137.689 541.417 li
137.811 541.417 li
137.811 541.296 li
138.41 541.296 li
138.41 541.176 li
138.77 541.176 li
138.77 541.056 li
139.01 541.056 li
139.01 540.936 li
139.25 540.936 li
139.25 540.816 li
139.49 540.816 li
139.49 540.696 li
139.609 540.696 li
139.609 540.576 li
139.73 540.576 li
139.73 540.456 li
139.85 540.456 li
139.971 540.337 li
140.09 540.337 li
140.09 540.216 li
140.211 540.216 li
140.211 540.096 li
140.33 540.096 li
140.33 539.976 li
140.45 539.976 li
140.45 539.856 li
140.57 539.856 li
140.57 539.736 li
140.689 539.736 li
140.689 539.616 li
140.811 539.616 li
140.811 539.496 li
140.93 539.496 li
140.93 539.376 li
141.051 539.376 li
141.051 539.257 li
141.17 539.257 li
141.17 539.136 li
141.291 539.136 li
141.291 539.016 li
141.41 539.016 li
141.41 538.895 li
141.53 538.895 li
141.53 538.776 li
141.65 538.776 li
141.65 538.656 li
141.769 538.656 li
141.769 538.536 li
141.891 538.536 li
141.891 538.416 li
142.01 538.416 li
142.01 538.296 li
142.131 538.296 li
142.131 538.177 li
142.25 538.177 li
142.25 538.055 li
142.371 538.055 li
142.371 537.936 li
142.49 537.815 li
142.49 537.696 li
142.61 537.696 li
142.61 537.576 li
142.73 537.576 li
142.73 537.456 li
142.85 537.456 li
142.85 537.336 li
142.971 537.336 li
142.971 537.216 li
143.09 537.216 li
143.09 536.975 li
143.211 536.975 li
143.211 536.856 li
143.33 536.856 li
143.33 536.735 li
143.45 536.735 li
143.45 536.616 li
143.57 536.616 li
143.57 536.495 li
143.69 536.495 li
143.69 536.376 li
143.811 536.376 li
143.811 536.256 li
143.931 536.256 li
143.931 536.136 li
144.051 536.015 li
144.051 535.895 li
144.17 535.895 li
144.17 535.776 li
144.291 535.776 li
144.291 535.655 li
144.41 535.655 li
144.41 535.536 li
144.53 535.536 li
144.53 535.415 li
144.65 535.415 li
144.65 535.296 li
144.77 535.296 li
144.77 535.176 li
145.011 534.935 li
145.011 534.815 li
145.131 534.815 li
145.131 534.695 li
145.25 534.695 li
145.25 534.575 li
145.37 534.575 li
145.37 534.456 li
145.49 534.456 li
145.49 534.335 li
145.61 534.335 li
145.61 534.216 li
145.73 534.216 li
145.73 534.095 li
145.851 534.095 li
145.851 533.975 li
145.971 533.975 li
146.091 533.855 li
146.091 533.735 li
146.211 533.735 li
146.33 533.615 li
146.33 533.495 li
146.45 533.495 li
146.57 533.376 li
146.57 533.257 li
146.69 533.136 li
146.811 533.136 li
147.051 532.896 li
147.051 532.776 li
147.171 532.656 li
147.29 532.656 li
148.011 531.936 li
148.13 531.936 li
148.37 531.696 li
148.37 531.576 li
148.491 531.576 li
148.851 531.216 li
148.971 531.216 li
149.091 531.096 li
149.091 530.975 li
149.21 530.975 li
149.45 530.735 li
149.571 530.735 li
150.05 530.256 li
150.171 530.256 li
150.29 530.136 li
150.411 530.136 li
150.53 530.016 li
150.53 529.895 li
150.651 529.895 li
150.77 529.776 li
150.892 529.776 li
151.011 529.655 li
151.13 529.655 li
151.251 529.536 li
151.37 529.536 li
151.37 529.416 li
151.491 529.416 li
151.61 529.296 li
151.731 529.296 li
151.851 529.176 li
151.971 529.176 li
152.091 529.055 li
152.21 528.935 li
152.331 528.935 li
152.45 528.815 li
152.571 528.815 li
152.69 528.696 li
152.811 528.696 li
152.931 528.575 li
153.051 528.575 li
153.171 528.456 li
153.411 528.456 li
153.53 528.336 li
153.651 528.336 li
153.651 528.216 li
153.891 528.216 li
154.011 528.095 li
154.251 528.095 li
154.371 527.975 li
154.491 527.975 li
154.61 527.855 li
154.851 527.855 li
154.971 527.735 li
155.211 527.735 li
155.331 527.616 li
155.571 527.616 li
155.69 527.495 li
155.931 527.495 li
156.051 527.376 li
156.411 527.376 li
156.531 527.255 li
156.891 527.255 li
157.011 527.136 li
157.371 527.136 li
157.491 527.015 li
157.971 527.015 li
158.091 526.895 li
158.451 526.895 li
158.571 526.775 li
159.172 526.775 li
159.291 526.655 li
160.735 526.518 162.081 526.161 163.611 526.175 cv
163.731 526.055 li
165.052 526.055 li
165.172 525.935 li
166.731 525.935 li
166.851 525.815 li
168.891 525.815 li
169.012 525.695 li
171.651 525.695 li
171.772 525.575 li
175.851 525.575 li
175.971 525.455 li
183.053 525.455 li
183.172 525.335 li
200.693 525.335 li
202.493 525.335 li
202.613 525.216 li
262.976 525.216 li
@
true set_gvm
%ADOBeginSubsetFont: GNMBAA+Times-Roman AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
NQHFPP+Times-Roman dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/slash <1C60D8A8C9B854D091294BA916DE103B530ED44B0658EDFA9AE5572B
AD53C85F2BB138> |-
/four <1C60D8A8C9B7A73DEE9439F6912D1E1928F0E439DE99D7FA22F95B9BD
B0F985F4896E55B0F5D7BF2723296D4324A0885B608798C09417C650CDD9EF61
BED14E8C7781766CB07052C75A7AD> |-
/five <1C60D8A8C9B7A73D33A88FEA12959A734F76D056A6AD18616787F24D4
694B06D2D404FC3FCA38087EA8162B81AF2DD5F722A8A8620829370F42A0D36A
D232CF1AF8C5768FCC5070E4C1D383794DEEE463936008AA8B79C75171B0B56A
EE44FCABBD4B348C68E82A7216D83E5CCC6E39493B5E64C831AA2> |-
/six <1C60D8A8C9B7A73D33BF1B90A184398C344468AF20F393E1CDAE1A1BDF
4B1EF29581C243D118AD9C2F9F3B85C649B4F94D8775B8245D414436A3846937
1891286E3E4F3F2C58114BE7041C63E1137F930DD38393462B124AC8D60E4109
AAD485EEDD44016B3DCF2F116B050BDED76293F395802A2102> |-
/D <1C60D8A8C9B6079F1E66B7565D0C0FE392D7D1AED8C6DCA6A1AA2DE51BB0
54073985C252F108C147E5B894B74E8DD41D4B29079CD8FEDF6FFB13221241AF
8820FB20A248B8E44058D948F8799185C6AB1FC88F91843001045D85F85BFF44
C0DE80EF9567CFF979CF6DFE9ADC683295CC56E28FAA9DD701C805DE88F6EEB7
4153DF11DEC18134D86E418F935794> |-
/H <1C60D8A8C9B6079F1E4884809AF27C32C4C4644B748B72386090B6EA72F2
CAD492799B13A490C22BB769448B5BE5145154E5257C346442332292571F1722
B637B36F195964360C86F3C2FA20D5968E5EF117A87C5275E3CF4EDCBA851C9A
2685EF777C52F37A9D6571C1FF8201E097F935E15B632A692C95A8A199E69FDF
3449B5C7E7D9F966187E> |-
/I <1C60D8A8C9B81F2C46F6291E6BC656A33181A7CEBA53BA35C0D637783657
13E4937D45432C22967EB42DF6DA1495947FD682A87B83F3472A9AC53AFF202C
ED526C6E0626B1> |-
/a <1C60D8A8C9B77FE2B8A4D222FB41F47F459CA0D95123D06ECF654AB05FF5
B6DC144FC9BBEC366E5ECC063C78F59640CE32DD9D219C4F4385FAEDBC60FF33
4CB1D3BF02D9F353F73914E29D9DD64FAA28B45E23265BD78A90B345EFEAD972
A0D93CE817026DBF17DB9E8E49AD8C2AF4FC6486D49F260206F186E614E3D16B
2F4AD46463A28F92ED5F2851044761192B9ADCF8B12C73A96A7E57C5841BD16A
930132DACDF469EE0C2A8F85A167570E289B5609FF9CB20DD38C9C84A9BB9FC8
A7014AC491483F6C> |-
/c <1C60D8A8C9B77FE2B8B3EAC4BBDE029BAC315D1866DD79216DBC0D30C20B
16F949C4DACB51911E080D5D4FADB2A127C4AB23B312E9F44F985AA21BA1A9B7
1EA7AE21C439E05A319047A6D64BC1D4392480160430400AFA5C943510A8521B
80B0990CB49D8F01EE3F> |-
/e <1C60D8A8C9B77FE2B8B0813537CAE403B54DB40537D3B34E4D85733A582F
C4A35A139249CD52BC9F3D8702E5238EA1584552BB139B2FA8E8AF6ADB725AC9
88E8038C63CC98292FA274964F057DD3DD90F918CCDB06CF8FF9093CFB289906
8DCE9A23D07E1368> |-
/g <1C60D8A8C9B7A73DB582976F6FA2EE84F51D64198201D65DA0379D449296
CB33756AB3A7AE8A175EF9BB7E6667E704AA36397D842A4683F771819C78135E
F0B455C13E311CBB866AEFE329B6F52B2221D0336B69FAD4E4E81CDD8998ABF0
669D384CC67DB6CFEB8A66595B4A650724AA273D9E1169E84F9C77F0A418C289
4C5B746841205D3436C2C1B587229CD290D09CA382D1C9529C9CE920A65F438C
38CAA9A135E87D56D7B983324F4ED251DA6E0357F756A1F213D1E3DE07A8846F
D3401EBD39FDF6B92DDF7A8C8A8C8CE90CF9E3A9AABD6ADA466E3F1401FE5B96
D08AC492AE33B92EB9535FDFE1F783249CAEF304B838754D41893E951AD187AF
837A28D1506CE6DEF32CA63A8C2A4B955AF6A40848A98B871F4F1B3FB62013F4
CC669689021E45B3B69D14EDD2B2A744D2C66B261120B6C5CEB8AB138BBF9004
CB2E94E80C216C86B72B469D0BFF2EF69EED7A76E895C3D4BEDBC1E5FA41C0EA
9459E41BB0704A8CFE47> |-
/i <1C60D8A8C9B854D08887A954377F4C214D4B21F7492A7553FF39CC630E80
1180DD16566EA992053D700F571C962E92EE02C6D82716C0473307AD723B6798
5001C64C2D995FF692007B5CA8DE93957C4672C9482F0FE971562A04ADA3ED80
642F55B1C8A3B339468512B3D5E6503179BCD4D2EA59F7619EF7B270C6D7B2B7
C08A6BA66CAC2847BEAAEF1753ED49A16028> |-
/l <1C60D8A8C9B854D08887A955FDB583C10487D3666DB50B4DADE0EC1137BB
795306205027EDAC983BD177C55444B622C3F9984AD7B008877068E438C454AC
8927C615E0E8B502F68753A1A9> |-
/m <1C60D8A8C9B6FF86E3B590DB9FE94810D7AFBFE7B946F15ADC4969344E90
E1A3F6BB0EC423A0839831AD6C986649A08BE59C9A3AF60608A974950B299379
DB00149450A78653D6D4B9B18966FB51AC5B75CCA0334B3300F064709EE52494
90C1CB7C6E6F7A3DBD6837889932B38C16FA553F6A7BD9185FFB7638767BBEB1
CC928CF2A5534FC32F6F3027FAF68DC8EE9A75EC980BD894ADC4F0B26421A336
F0F6A40AAD70D4278736A8FEA511C2ED4A971DB961B998B0AA6DA21448599468
54D246CD2A6E94B7321CC1214550> |-
/n <1C60D8A8C9B7A73DC549024A80DEC09E4F713BEC6C634F1E9284F6FC7263
711D03C47F22A203EB41F88268C104BC4A61C7649DA42D5BE18FE7F731730EB4
D130993D14FEE046DD67E78C9CE5C5598D396AB18A5366D9E71D2D6A292A9108
9ACF40B09098B729C4807DB1C9D54B7EE1602D3D091D4525D3E7868AFA4B4D0D
EB009172C2D67F26ED44CA4931A6533F30AB34> |-
/o <1C60D8A8C9B7A73DCF4402F5174BF7DD0D28D0C5665CB34A93F0BF7A993E
7B76B394E0DD4E0D515EE382B893A080E29B40A4402A4A406056947B5B2334F6
D5909CCB56B0284CEFC066661E9D6B7471673D105428B9DFDD7F> |-
/p <1C60D8A8C9B7A73DB581186A9391F1059D96F459FFDB82B44DD4DA245FA5
07D024F28401075285D307468CE0D757751AAB4F3490756973E462106B10BD76
63199C4B8A27D5695A680192DE86699DAAF1A89717FDB65265476969999FB7D7
847B55845008C66520A977913643311D83941F927D5B958DBE761028866277B0
1C9604CB3013C82C039B9AE8C95A3C2834B9ED8E05831C8156944A7F9B872094
AF1AB63EB96F8DF66A491A85E4F72D480F637D538DE8> |-
/r <1C60D8A8C9B81F2C46F2EFD1B3B81533015C6076AEA2DF2F336244DA608D
0666A9C39147579BE5F84064BA5DCF6CD4C576D0177C42EAE7438D00AB1D6595
6107D443F0AD6F08A63F5306BE8A1920B3CB273D9CF24739F3E4740FB53EC981
D22501D5AF8E600BA9EEBFA742EC328561AB6E257A9B7C3C0B4F8CAC20D46ECD
F05FEB5C54162C09AD2C0169673C> |-
/s <1C60D8A8C9B7361F743FE5C092782516B89C667F24852F2833C914D37274
1C204CB19829CF798EC00B6F60FD56301EF9B4136E1F422FAA9773C81ADFC08A
FD24624819F92289BABB5D2A560D29B4C37B5C72F295B1A8757B2DDC4F96A3A7
A76D5B8850E9D3B3108E173E7C2AC94ED9F5B4EBB2AC4F74997A581EAA1D8190
963213A6DBA3FD99B4DDDF91DEB606EB29DAC3E030DB9A2BEA3B60C98F55A0A9
B8097DA00FD849056413A4E04E950801ED07C405C45837491E4864754EBADCC3
2B5232850305BAEEDA0A345554138E3B49E2F7260D37E80E4C37FED6327D7438
DA6B2E0355D0043D6795C50CA3> |-
/t <1C60D8A8C9B854D082F829CADA24029904B667043F82AAF5798ADB1AF637
87A08D89C04AC22E998B93D82023FC776DB3B03794FD10AD1A9169D67270B70C
C8030C1164B605608F8ED713A3CC4AFDDB0825DD3A8B4DD78D9148075B5FF6> |-
/u <1C60D8A8C9B7A73DE1FEDB8466C8FCD68C94DEDB7A49373DBA7A1C9E1A28
71D4C90F71B659C0863047F14CB42982EA4063AFBFAAC6B3D2E5BB97E3BAD699
7448B1489AE8DACB9CE04A84F3304C7E15BDB3FC7CF43910D25F6E498A671132
04F00FAA06B758EDD80721494126EFEC5BBD3D99372C58318E864E11C8F7BF91
62FC93419A4533C6E009EA9CDBD9062EB4D84947ADD5D4EC1CAB> |-
/y <1C60D8A8C9B7A73DB5828C8EB66C86A2CEEEF3783234CAB54F02AC5BECA9
34D4C3035BDC41358612FD6E1BC5350B8D1DD105076DB794248C0C98CBED3EDF
452F448247582C15974F0D747D31D5F600EB1E61D9E83F9F41926FEEAAC9377F
B1927B010879CBC0B37DE7B7E361C461AAD3428655DB1782170F0E236123E406
C9F566DB7589AA15856E58640BCFE6654A802AC1B0A27F3DE2C1215C078D11E9
CD2EF4F0BAA5D38AE4BB> |-
systemdict /gcheck known {setglobal} if end {end} if
end
NQHFPP+Times-Roman /Encoding get
dup 47 /slash put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 68 /D put
dup 72 /H put
dup 73 /I put
dup 97 /a put
dup 99 /c put
dup 101 /e put
dup 103 /g put
dup 105 /i put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 121 /y put
pop
%ADOEndSubsetFont
reset_gvm
/NQHFPP+Times-Roman*1 
[32{/.notdef}rp /space 10{/.notdef}rp /plus /.notdef /hyphen /period /slash 
/zero /one /two /three /four /five /six /seven 
/eight /nine 10{/.notdef}rp /D 3{/.notdef}rp /H /I 6{/.notdef}rp 
/P 2{/.notdef}rp /S 13{/.notdef}rp /a /.notdef /c /.notdef 
/e /.notdef /g /.notdef /i 2{/.notdef}rp /l /m 
/n /o /p /.notdef /r /s /t /u 
3{/.notdef}rp /y 134{/.notdef}rp]
NQHFPP+Times-Roman nf
NQHFPP+Times-Roman*1 [0 -8.0432 -8.0432 0 0 0 ]msf
91.893 576.578 mo
(Potential energy /Hartree)
[-4.47205 -4.02161 -2.23596 -3.57123 -4.02155 -2.23602 -2.23602 -3.57117 -2.23602 -2.0108 -3.57117 -4.02161 
-3.57117 -2.67834 -4.02161 -4.02161 -2.0108 -2.23596 -5.80719 -3.5712 -2.67831 -2.23602 -2.67831 -3.5712 
0 ]ysh
NQHFPP+Times-Roman*1 [8.0432 0 0 -8.0432 0 0 ]msf
150.753 616.787 mo
(Internuclear se)
[2.67833 4.02159 2.23601 3.57118 2.67833 4.02161 4.02159 3.57118 2.23601 3.57118 3.57118 2.67833 
2.0108 3.12886 0 ]xsh
198.32 616.787 mo
(p)sh
202.342 616.787 mo
(aration /nm)
[3.57118 2.67833 3.57118 2.23601 2.23601 4.02159 4.02161 2.0108 2.23601 4.02159 0 ]xsh
NQHFPP+Times-Roman*1 [6.4313 0 0 -6.4313 0 0 ]msf
144.033 531.828 mo
(5)sh
144.631 545.745 mo
(4)sh
138.271 560.382 mo
(3)sh
135.75 574.782 mo
(2)sh
132.033 587.381 mo
(1)sh
NQHFPP+Times-Roman*1 [6.9792 0 0 -6.9792 0 0 ]msf
131.313 604.787 mo
(0.20.40.60.81.0)
[3.00105 1.56334 26.3953 3.12668 1.56334 26.3953 3.12668 1.56334 26.2767 3.12668 1.56334 26.3953 
3.11969 1.56335 0 ]xsh
true set_gvm
%ADOBeginSubsetFont: XYEBAA+AdvTimes AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2016 Adobe System Incorporated. All rights reserved.
systemdict begin
NQHFPJ+AdvTimes dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/colon <1C60D8A8C9B85C5CAD19F6CB531B0323B14A7D9B3FF2632918A94B4C
9D7DF998E7876BF5FE544958917DFDDF899CFB58ECC9A4023891DB76ACE114FA
2B0EF9065C47D9C5651482D76CC93E097DDC503C12A4755F8653F057482D2519
17D7AF31FCAA5A05ECF92D41A02FC3D58C03F4304F7B69F9A99AF24CDD918D85
F5C5F12F22B8AA118B8619C339CC37A853F569B7EA63D729AD8A3CD79738F2C8
309776D1A4CF95C95125316F49F29CED39BB2B008D0AE1D22C649E1816B988A4
227A19C87817D48457528BFA26252F74CB5ACBB6CB43281C393ADAABA3F1D712
A246FAC278743EE6DD3685A59795FAC1C9B6A0F75DC8D6F28323> |-
/semicolon <1C60D8A8C9B85C5CA95F89551B8D721CB76D0844328512D6ADF4
0D7CB23D8BC9735C06E77206018F48A74E3420A5EE4DDDBDD5062E1E8F167F4B
584AA290C3571FA57E4301AE4F5DE55E8F0A818DE9FC6C21791852C5059AF375
8BB22948C61ABCEEE133D888AF1C12C75FA582238F43EE32666F16622ABFC66B
016E0479D8B9DA3B15C1512B37BBDD4B502D51FD08C096D0862692C5D97F98B1
F79D33FAB6C006887F7D27AA05226D0619CBE6783580EE0D135197C26522F381
77402F98C90F25ED2AAAE6546F1E566F1CB83E3B94594711F74FCF44A47A3FF8
B790CCB05CDE8281A05D4F1B6FBB3A6B4AA4E11C8BD2EFAFE7625E619942F4E7
E4B44A7BC89023C52985137F2D3DAC09990237A38F068DCF6D7B4DA46C55D31B
F717117F777EEB5B732FEDBF04C8D1713BCCFC9E214C1D8FD9AB04BDB944CF2C
21329020DB931C67EF6A5D666B61C03AF6270BC8F84ABC7AEF82485E12> |-
/C <1C60D8A8C9B6035577A7BC18A6F02C67C7534065C6AD357BD4CFF3940B52
3D2CA297E156AF0345AAE64510E6FF047275715D031D5D365D1DB21559B4FAAB
14DAABCCAA4DFBCD7FC5E585401AE26B35035BBADFAE408C7C731039CFDBD07C
6AF4D9E96B8A95F3D358DE2771CA8CC784AB7E4F80E33E440C81399DA7772F43
10CA4A677B91B33B50A490AA199171A5F9D7DA6E6DCBCC93111211C2B3827E0A
0ADD824A10EE3E5BE36CEA0A4F7FD6DD1226154AC5373EC0D40F77D2C3530190
F1EBFC5D3A5438608D87F0A2CB6C571CB7894D0A89C690AB239F3F7417948791
498D101C06B9D5EE19375EB264C66723DA3DB84D15C16C8F909B49FC85685ABC
C29156440BB12D3228D42462A22EC687D1F2F45ED3B66E0B25303444B97286FA
4AD0A1CB295FF5CD50D3877B48E427988B4B07B06FCD69570B5393DA2747B4A3
0E3EA9C515E2BFC0F5535EFFCF1BD232A9E3078D6964AFEE2A4CC24E4A5E9F4B
969F6D8D5DF2378877F05C9AF46284CDA6A991B3796475AA178702A9BD02E98A
45EFF3FE54CCBB78510B831EB7D6287308B5A39D1C44B1209A64D2447F2518D4
AB53759D72B67FCD701BAA5693785F29BF3F23C61BD363A5A4E392AAF9001577
38B35F523BF53E552729A8576BAC7C653DBAF2BC085EB00024C91FF05FD0D937
21AA097CCC3076951E3FDA4CBB95C84AAD855C2B7A649866C3F73FF2223C503E
AB577522EBD8AFF968C1168ED746A6A09AE568594DF038FD537945810F2B52E8
DED8EBE87B6CEF172861B67F7F32E4C1A858CD5FA768FFC9B0F1B80818D45E62
E93E> |-
/E <1C60D8A8C9B64FADBFD4B76FA5162680054C1588FC9413AB6CE5351710BD
8885FA604485D6BAEE0783EB44F5A018A1A1EE3308A976929EFD0D1F6AAE08B7
A6F9A53CF457806B651B089F6A47E53B48E564BC164AA96AB3F6537F3CD63417
CD9DDB93923D9A0A3548861F3278C2DF28BD8DED2DF30E73533F9649F6C27EEB
AF0052509A15261820ABC9C3B306BC53A56F8906A1CD3F392C35B013A43B7F04
70D56D2FD147C318C89D9EC7491A755F2E7D41E01C406B85A36D1B5FE99257B0
E6BF9C737E02E5CEDE56353ABA34C1BFEB48EB8C6241FB92CC93F00C8F9A6290
0222E23D0B2CC541112E16227A67F9DD9EDB8762261F37432C1B99E569A5D987
5710C9210ACBC362305263E58BDB0A9182AC22C38385B3FC1675B5F7D5EAA14B
4C5563E325B1FD57CCA30E68EBC539C8D655964BF19659B36C4F9B4675BA1D3D
5F94C35F54D00E7A28FBB821504D0DEA330BA83F96650DEE4144248DCB7820D5
6CBC9E438016FF6D5E1713697CC51849A7> |-
/F <1C60D8A8C9B64FADA72BFAF4495334739C15606766D5FDB1436712BFE30A
1DE2903CC741903EA6FFD2A3999CA0BC300A00C960A1C24AC0E12B77C54063D2
6E69CB745173FA11DE0FECDEBEC98503A5CB7DBBBCB41B7335DF543D8196F6E1
58E5C66B4FB623438FFA706BBEE91C88023DF1BCCB2599C86D4089C069160F21
A88FE8F556BE89A24DD16D188B033B03616DF859A3169933DE5DADA43B14C39B
5BD469EAC841C2CEFD1DFA73DCF30EC825FB793646DD7D5341AEA0C5BE6BACCC
D36583D02FF300523959725A5F4B3DFB07EDADD26410E77E6F92ECCAEE9B17AA
95034A29F5F45827AA2B0639855B55327A2F4FAB257DA24F8DCE6A18FAB14294
C35C01A6CBA189C32982F9C7D62FFE9CF0F7FC67E7DA96E7CA209950A38D54> |-
/P <1C60D8A8C9B7DF55B685F284689AB44E9DE1BAC80B9C252E7300790FF567
74B401DEE8041790A5DF9DC6541D8AC26FE956778501A84B70FECFD65A11CFCB
D49C2D88B3A9676584208A49A8C09E7C38C861E2EE670A393E76FEC278413365
5F36887E52CAD3DA3B5C5AE8D2A6DAEBE0E35C404F8CC93566AE80D6FEA5C055
2EA07D0724A5CB51E7747832F47EB3FA5B83C397192F11AA9685120831A9993B
3B61F7826A66CE83BBADD6B8A4DE3E11FB9BA6910648492320A4FC360C7CD92D
403B8021B57F418D080DA0C72B1D0899CAF6C5B116D6F26593C6A4DE68F24425
1DCD3563D29C770648F95D2DFA531531884C6027A7AC14C6C3F53333AE31CFA4
02AFE8FABBBF85C1148058D493463BFDB9EACAA333A20018F2BBBE00682BEAE9
F02DAF69D8D7A955161B80997FE405A45FF0AB9BBF857AC4A6EFA3D83B72D8E5
DEC858F6C002273A494FBFA36468B6942F61C8B8E61557AF46637B6879057FF5
3174BBA40CF22711DBE92D3FB7B9BB16889C97AA1D8260324C84D69029138BA6
EF94EC1878809D6EBB6671DBFDC9BC09B40431C224E82FD728F42A2C225B1C00
855B7B2184133A290199EF5CB03F2492> |-
systemdict /gcheck known {setglobal} if end {end} if
end
NQHFPJ+AdvTimes /Encoding get
dup 58 /colon put
dup 59 /semicolon put
dup 67 /C put
dup 69 /E put
dup 70 /F put
dup 80 /P put
pop
%ADOEndSubsetFont
reset_gvm
/NQHFPJ+AdvTimes*1 
[37{/.notdef}rp /percent /.notdef /quoteright /parenleft /parenright 2{/.notdef}rp /comma 
/hyphen /period /.notdef /zero /one /two /three /four 
/five /six /seven /eight /nine /colon /semicolon 5{/.notdef}rp 
/A /B /C /.notdef /E /F 2{/.notdef}rp /I 
4{/.notdef}rp /N /O /P /.notdef /R /S /T 
2{/.notdef}rp /W 3{/.notdef}rp /bracketleft /.notdef /bracketright 2{/.notdef}rp /quoteleft 
/a /b /c /d /e /f /g /h 
/i /.notdef /k /l /m /n /o /p 
/q /r /s /t /u /v /w /x 
/y 55{/.notdef}rp /endash 78{/.notdef}rp]
NQHFPJ+AdvTimes nf
NQHFPJ+AdvTimes*1 [8.9663 0 0 -8.9663 0 0 ]msf
59.6409 634.905 mo
(Figure5.PECsoffive)
[5.97156 2.42094 4.48315 4.94942 3.45197 11.432 4.48315 6.91306 5.41568 5.97157 6.43782 10.9747 
4.94942 10.5264 2.98572 2.42093 4.48315 0 ]xsh
true set_gvm
%ADOBeginSubsetFont: PHMBAA+AdvMT_RM AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2016 Adobe System Incorporated. All rights reserved.
systemdict begin
NQHFPM+AdvMT_RM dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/C5 <1C60D8A8C9B6ABDD86CC327C78EA5B56371C694BE7DF2BAF08075CC8AB9
AAB9B36B0EE20650624125AB167A6D92C0D7D4510616A9A623483AF4960B35F3
B46A117136E3046DDF70B59E1ECADC50FF9FEEE4533B51D3E1B64> |-
systemdict /gcheck known {setglobal} if end {end} if
end
NQHFPM+AdvMT_RM /Encoding get
dup 5 /C5 put
pop
%ADOEndSubsetFont
reset_gvm
/NQHFPM+AdvMT_RM*1 
[3{/.notdef}rp /C3 /.notdef /C5 /C6 3{/.notdef}rp /C10 245{/.notdef}rp]
NQHFPM+AdvMT_RM nf
NQHFPM+AdvMT_RM*1 [8.9663 0 0 -8.9663 0 0 ]msf
169.344 634.905 mo
(\012)sh
NQHFPJ+AdvTimes*1 [8.9663 0 0 -8.9663 0 0 ]msf
183.743 634.905 mo
(statesofS)
[3.45198 2.9857 4.48315 2.98572 3.91823 10.9747 4.94942 10.4726 0 ]xsh
NQHFPJ+AdvTimes*1 [6.7246 0 0 -5.9768 0 0 ]msf
232.951 636.436 mo
(2)sh
NQHFPJ+AdvTimes*1 [8.9663 0 0 -8.9663 0 0 ]msf
243.779 634.905 mo
(1:a)
[4.48315 9.91676 0 ]xsh
NQHFPJ+AdvTimes*1 [6.7246 0 0 -5.9768 0 0 ]msf
262.715 630.937 mo
(1)sh
NQHFPL+AdvPi1*1 [8.9663 0 0 -8.9663 0 0 ]msf
266.06 634.905 mo
(D)sh
NQHFPJ+AdvTimes*1 [6.7246 0 0 -5.9768 0 0 ]msf
272.013 636.436 mo
(g)sh
NQHFPJ+AdvTimes*1 [8.9663 0 0 -8.9663 0 0 ]msf
275.414 634.905 mo
(\(a2\);)
[2.98572 4.48315 4.48312 2.98572 0 ]xsh
59.6401 644.885 mo
(2:A)
[4.48315 5.43362 0 ]xsh
NQHFPK+AdvMT_SY*1 [6.2762 0 0 -6.2762 0 0 ]msf
76.4787 641.652 mo
(0)sh
NQHFPJ+AdvTimes*1 [6.7246 0 0 -5.9768 0 0 ]msf
78.5764 640.915 mo
(3)sh
NQHFPL+AdvPi1*1 [8.9663 0 0 -8.9663 0 0 ]msf
81.9779 644.883 mo
(D)sh
NQHFPJ+AdvTimes*1 [6.7246 0 0 -5.9768 0 0 ]msf
87.9307 646.414 mo
(u)sh
NQHFPJ+AdvTimes*1 [8.9663 0 0 -8.9663 0 0 ]msf
91.6157 644.883 mo
(\(A)
[2.98571 0 ]xsh
NQHFPK+AdvMT_SY*1 [6.2762 0 0 -6.2762 0 0 ]msf
101.537 641.652 mo
(0)sh
NQHFPJ+AdvTimes*1 [8.9663 0 0 -8.9663 0 0 ]msf
103.691 644.883 mo
(2\);3:B)
[4.48315 2.98572 5.39775 4.48315 5.43362 0 ]xsh
NQHFPK+AdvMT_SY*1 [6.2762 0 0 -6.2762 0 0 ]msf
132.435 641.652 mo
(00)
[1.63177 0 ]xsh
NQHFPJ+AdvTimes*1 [6.7246 0 0 -5.9768 0 0 ]msf
136.233 640.915 mo
(3)sh
NQHFPM+AdvMT_RM*1 [8.9663 0 0 -8.9663 0 0 ]msf
139.578 644.883 mo
(\005)sh
NQHFPJ+AdvTimes*1 [6.7246 0 0 -5.9768 0 0 ]msf
146.948 646.414 mo
(u)sh
NQHFPJ+AdvTimes*1 [8.9663 0 0 -8.9663 0 0 ]msf
150.633 644.883 mo
(\(B)
[2.98572 0 ]xsh
NQHFPK+AdvMT_SY*1 [6.2762 0 0 -6.2762 0 0 ]msf
159.647 641.652 mo
(00)
[1.63177 0 ]xsh
NQHFPJ+AdvTimes*1 [8.9663 0 0 -8.9663 0 0 ]msf
163.389 644.883 mo
(2\);4:B)
[4.48315 2.9857 5.39775 4.48315 5.43361 0 ]xsh
NQHFPK+AdvMT_SY*1 [6.2762 0 0 -6.2762 0 0 ]msf
192.132 641.652 mo
(0)sh
NQHFPJ+AdvTimes*1 [6.7246 0 0 -5.9768 0 0 ]msf
194.287 640.915 mo
(3)sh
NQHFPM+AdvMT_RM*1 [8.9663 0 0 -8.9663 0 0 ]msf
197.632 644.883 mo
(\005)sh
NQHFPJ+AdvTimes*1 [6.7246 0 0 -5.9768 0 0 ]msf
205.058 646.414 mo
(g)sh
NQHFPJ+AdvTimes*1 [8.9663 0 0 -8.9663 0 0 ]msf
208.403 644.883 mo
(\(B)
[2.98572 0 ]xsh
NQHFPK+AdvMT_SY*1 [6.2762 0 0 -6.2762 0 0 ]msf
217.361 641.652 mo
(0)sh
NQHFPJ+AdvTimes*1 [8.9663 0 0 -8.9663 0 0 ]msf
219.515 644.883 mo
(2\);5:f)
[4.48315 2.9857 5.39775 4.48315 5.43362 0 ]xsh
NQHFPJ+AdvTimes*1 [6.7246 0 0 -5.9768 0 0 ]msf
245.253 640.915 mo
(1)sh
NQHFPL+AdvPi1*1 [8.9663 0 0 -8.9663 0 0 ]msf
248.655 644.883 mo
(D)sh
NQHFPJ+AdvTimes*1 [6.7246 0 0 -5.9768 0 0 ]msf
254.608 646.414 mo
(u)sh
NQHFPJ+AdvTimes*1 [8.9663 0 0 -8.9663 0 0 ]msf
258.349 644.883 mo
(\(f2\).)
[2.98572 2.98572 4.48312 2.98572 0 ]xsh
NQHFPP+Times-Roman*1 [5.4 0 0 -5.4 0 0 ]msf
230.287 111.211 mo
(3)sh
NQHFPP+Times-Roman*1 [8.1 0 0 -8.1 0 0 ]msf
232.987 114.775 mo
(P)sh
NQHFPP+Times-Roman*1 [5.4 0 0 -5.4 0 0 ]msf
237.63 116.179 mo
(2)sh
NQHFPP+Times-Roman*1 [8.1 0 0 -8.1 0 0 ]msf
240.33 114.775 mo
(+)sh
NQHFPP+Times-Roman*1 [5.4 0 0 -5.4 0 0 ]msf
244.866 111.211 mo
(1)sh
NQHFPP+Times-Roman*1 [8.1 0 0 -8.1 0 0 ]msf
247.567 114.775 mo
(D)sh
NQHFPP+Times-Roman*1 [5.4 0 0 -5.4 0 0 ]msf
253.399 116.179 mo
(2)sh
NQHFPP+Times-Roman*1 [8.1 0 0 -8.1 0 0 ]msf
256.099 114.775 mo
( )sh
NQHFPP+Times-Roman*1 [5.4 0 0 -5.4 0 0 ]msf
232.135 138.691 mo
(3)sh
NQHFPP+Times-Roman*1 [8.1 0 0 -8.1 0 0 ]msf
234.834 142.255 mo
(P)sh
NQHFPP+Times-Roman*1 [5.4 0 0 -5.4 0 0 ]msf
239.478 143.659 mo
(2)sh
NQHFPP+Times-Roman*1 [8.1 0 0 -8.1 0 0 ]msf
242.178 142.255 mo
(+)sh
NQHFPP+Times-Roman*1 [5.4 0 0 -5.4 0 0 ]msf
246.714 138.691 mo
(3)sh
NQHFPP+Times-Roman*1 [8.1 0 0 -8.1 0 0 ]msf
249.307 142.255 mo
(P)sh
NQHFPP+Times-Roman*1 [5.4 0 0 -5.4 0 0 ]msf
253.949 143.659 mo
(1)sh
NQHFPP+Times-Roman*1 [8.1 0 0 -8.1 0 0 ]msf
256.651 142.255 mo
( )sh
NQHFPP+Times-Roman*1 [5.4 0 0 -5.4 0 0 ]msf
232.135 149.491 mo
(3)sh
NQHFPP+Times-Roman*1 [8.1 0 0 -8.1 0 0 ]msf
234.834 153.055 mo
(P)sh
NQHFPP+Times-Roman*1 [5.4 0 0 -5.4 0 0 ]msf
239.478 154.459 mo
(2)sh
NQHFPP+Times-Roman*1 [8.1 0 0 -8.1 0 0 ]msf
242.178 153.055 mo
(+)sh
NQHFPP+Times-Roman*1 [5.4 0 0 -5.4 0 0 ]msf
246.714 149.491 mo
(3)sh
NQHFPP+Times-Roman*1 [8.1 0 0 -8.1 0 0 ]msf
249.307 153.055 mo
(P)sh
NQHFPP+Times-Roman*1 [5.4 0 0 -5.4 0 0 ]msf
253.949 154.459 mo
(2)sh
NQHFPP+Times-Roman*1 [8.1 0 0 -8.1 0 0 ]msf
256.651 153.055 mo
( )sh
NQHFPP+Times-Roman*1 [6.2124 0 0 -6.2124 0 0 ]msf
125.293 192.335 mo
(0.20.40.60.81.0)
[3.0006 1.44748 28.4342 2.88255 1.55931 28.3161 3.0006 1.55931 28.3161 3.0006 1.44748 28.4342 
3.00055 1.44751 0 ]xsh
93.5971 180.177 mo
(-798.3)
[2.06868 3.1062 3.1062 3.1062 1.5531 0 ]xsh
93.5971 151.494 mo
(-798.2)
[2.06868 3.1062 3.1062 3.1062 1.5531 0 ]xsh
93.5971 122.818 mo
(-798.1)
[2.06868 3.1062 3.1062 3.1062 1.5531 0 ]xsh
93.5971 94.1351 mo
(-798.0)
[2.06868 3.1062 3.1062 3.1062 1.5531 0 ]xsh
.384 lw
112.573 184.135 mo
112.573 183.055 li
@
129.012 184.135 mo
129.012 182.095 li
@
145.452 184.135 mo
145.452 183.055 li
@
161.892 184.135 mo
161.892 182.095 li
@
178.331 184.135 mo
178.331 183.055 li
@
194.652 184.135 mo
194.652 182.095 li
@
211.091 184.135 mo
211.091 183.055 li
@
227.531 184.135 mo
227.531 182.095 li
@
243.971 184.135 mo
243.971 183.055 li
@
260.411 184.135 mo
260.411 182.095 li
@
gsave
83.679 203.359 mo
268.724 203.359 li
268.724 69.224 li
83.679 69.224 li
cp
clp
112.572 184.135 mo
268.572 184.135 li
@
grestore
112.572 178.375 mo
114.612 178.375 li
@
112.572 164.095 mo
113.652 164.095 li
@
112.572 149.695 mo
114.612 149.695 li
@
112.572 135.416 mo
113.652 135.416 li
@
112.572 121.016 mo
114.612 121.016 li
@
112.572 106.736 mo
113.652 106.736 li
@
112.572 92.3372 mo
114.612 92.3372 li
@
112.572 78.0571 mo
113.652 78.0571 li
@
112.572 184.137 mo
112.572 69.4171 li
@
gsave
116.173 179.335 mo
130.573 179.335 li
130.573 69.415 li
116.173 69.415 li
cp
clp
.35 lw
116.533 -68.9428 mo
117.133 -37.6228 li
117.253 -34.5028 li
118.183 13.7392 118.985 62.1202 120.733 110.336 cv
120.853 113.216 li
120.853 115.976 li
121.562 132.467 122.32 149.052 123.373 165.416 cv
123.493 165.536 li
123.493 166.496 li
123.613 166.496 li
123.613 167.456 li
123.733 167.456 li
123.733 168.296 li
123.853 168.416 li
123.853 169.135 li
123.972 169.135 li
123.972 169.975 li
124.093 169.975 li
124.093 170.695 li
124.213 170.695 li
124.213 171.416 li
124.333 171.536 li
124.333 172.136 li
124.453 172.136 li
124.453 172.735 li
124.573 172.735 li
124.573 173.336 li
124.693 173.336 li
124.693 173.935 li
124.813 173.935 li
124.813 174.416 li
124.932 174.416 li
124.932 174.895 li
125.052 174.895 li
125.052 175.376 li
125.173 175.376 li
125.173 175.735 li
125.293 175.735 li
125.293 176.096 li
125.413 176.216 li
125.413 176.456 li
125.533 176.576 li
125.533 176.935 li
125.653 176.935 li
125.653 177.176 li
125.773 177.176 li
125.773 177.416 li
125.893 177.416 li
125.893 177.655 li
126.012 177.655 li
126.012 177.895 li
126.133 177.895 li
126.133 178.136 li
126.253 178.136 li
126.253 178.256 li
126.373 178.256 li
126.373 178.376 li
126.493 178.376 li
126.493 178.496 li
126.613 178.496 li
126.613 178.616 li
126.733 178.616 li
126.733 178.735 li
126.972 178.735 li
126.972 178.855 li
127.573 178.855 li
127.573 178.735 li
127.813 178.735 li
127.813 178.616 li
127.932 178.616 li
127.932 178.496 li
128.052 178.496 li
128.533 178.016 li
128.533 177.895 li
128.653 177.895 li
128.653 177.775 li
128.773 177.775 li
128.773 177.655 li
128.893 177.536 li
128.893 177.416 li
129.012 177.416 li
129.012 177.176 li
129.133 177.176 li
129.133 177.056 li
129.253 177.056 li
129.253 176.815 li
129.373 176.815 li
129.373 176.576 li
129.493 176.576 li
129.493 176.336 li
129.613 176.336 li
129.613 176.096 li
129.733 176.096 li
129.733 175.855 li
129.853 175.855 li
129.853 175.616 li
129.972 175.616 li
129.972 175.376 li
130.093 175.256 li
130.093 175.136 li
@
grestore
.35 lw
130.093 175.135 mo
130.213 175.015 li
130.213 174.774 li
130.333 174.774 li
130.333 174.535 li
130.453 174.535 li
130.453 174.175 li
130.573 174.175 li
130.573 173.934 li
130.693 173.934 li
130.693 173.575 li
130.814 173.575 li
130.814 173.335 li
130.933 173.335 li
130.933 173.095 li
131.053 172.974 li
131.053 172.734 li
131.173 172.734 li
131.173 172.375 li
131.293 172.375 li
131.293 172.135 li
131.413 172.135 li
131.413 171.774 li
131.533 171.774 li
131.533 171.415 li
131.653 171.415 li
131.653 171.175 li
131.774 171.175 li
131.774 170.814 li
131.894 170.814 li
131.894 170.455 li
132.013 170.455 li
132.013 170.095 li
132.133 170.095 li
132.133 169.734 li
132.253 169.734 li
132.253 169.375 li
132.373 169.375 li
132.373 169.135 li
132.493 169.015 li
132.493 168.774 li
132.613 168.654 li
132.613 168.415 li
132.734 168.295 li
132.734 168.055 li
132.854 168.055 li
132.854 167.694 li
132.973 167.694 li
132.973 167.335 li
133.093 167.335 li
133.093 166.975 li
133.213 166.975 li
133.213 166.615 li
133.333 166.615 li
133.333 166.255 li
133.453 166.255 li
133.453 165.894 li
133.573 165.894 li
133.573 165.535 li
133.693 165.535 li
133.693 165.175 li
133.814 165.175 li
133.814 164.814 li
133.933 164.814 li
133.933 164.455 li
134.053 164.455 li
134.053 164.095 li
134.173 164.095 li
134.173 163.734 li
134.293 163.734 li
134.293 163.375 li
134.413 163.375 li
134.413 163.015 li
134.533 163.015 li
134.533 162.654 li
134.653 162.654 li
134.653 162.295 li
134.774 162.295 li
134.774 161.934 li
134.894 161.934 li
134.894 161.575 li
135.013 161.575 li
135.013 161.215 li
135.133 161.215 li
135.133 160.854 li
135.253 160.854 li
135.253 160.495 li
135.373 160.495 li
135.373 160.255 li
135.493 160.135 li
135.493 159.895 li
135.613 159.774 li
135.613 159.415 li
135.734 159.415 li
135.734 159.055 li
135.854 159.055 li
135.854 158.694 li
135.973 158.694 li
135.973 158.335 li
136.093 158.335 li
136.093 158.095 li
136.213 157.975 li
136.213 157.734 li
136.333 157.615 li
136.333 157.375 li
136.453 157.375 li
136.453 157.015 li
136.573 157.015 li
136.573 156.654 li
136.693 156.654 li
136.693 156.295 li
136.814 156.295 li
136.814 155.934 li
136.933 155.934 li
136.933 155.575 li
137.053 155.575 li
137.053 155.335 li
137.173 155.335 li
137.173 154.975 li
137.293 154.975 li
137.293 154.615 li
137.413 154.615 li
137.413 154.255 li
137.533 154.255 li
137.533 154.015 li
137.653 153.895 li
137.653 153.654 li
137.774 153.654 li
137.774 153.535 li
137.774 153.415 li
137.894 153.295 li
137.894 153.055 li
138.013 153.055 li
138.013 152.694 li
138.133 152.694 li
138.133 152.335 li
138.253 152.335 li
138.253 152.095 li
138.373 151.975 li
138.373 151.734 li
138.493 151.734 li
138.493 151.375 li
138.613 151.375 li
138.613 151.135 li
138.734 151.015 li
138.734 150.774 li
138.854 150.774 li
138.854 150.535 li
138.973 150.415 li
138.973 150.175 li
139.093 150.175 li
139.093 149.935 li
139.213 149.814 li
139.213 149.575 li
139.333 149.575 li
139.333 149.335 li
139.453 149.335 li
139.453 149.095 li
139.573 148.975 li
139.573 148.854 li
139.693 148.734 li
139.693 148.615 li
139.814 148.495 li
139.814 148.255 li
139.933 148.135 li
139.933 148.015 li
140.053 147.895 li
140.053 147.774 li
140.173 147.654 li
140.173 147.535 li
140.293 147.295 li
140.413 147.175 li
140.413 147.055 li
140.533 146.814 li
140.653 146.694 li
140.653 146.575 li
140.774 146.335 li
140.894 146.215 li
141.013 145.975 li
141.013 145.734 li
141.133 145.615 li
141.253 145.375 li
141.373 145.255 li
141.493 145.015 li
141.493 144.774 li
141.613 144.654 li
141.854 144.175 li
141.973 144.055 li
142.213 143.575 li
142.213 143.455 li
142.453 142.975 li
142.573 142.854 li
142.814 142.375 li
143.528 141.465 143.534 140.847 144.493 139.854 cv
144.613 139.615 li
144.734 139.495 li
144.734 139.375 li
144.854 139.255 li
144.973 139.015 li
145.933 138.055 li
145.933 137.935 li
147.013 136.854 li
147.133 136.854 li
147.253 136.734 li
147.253 136.615 li
147.493 136.375 li
147.613 136.375 li
147.973 136.015 li
148.093 136.015 li
148.213 135.895 li
148.333 135.895 li
148.453 135.775 li
148.453 135.654 li
148.573 135.654 li
148.814 135.415 li
148.933 135.415 li
149.053 135.295 li
149.173 135.295 li
149.293 135.175 li
149.413 135.175 li
149.533 135.055 li
149.653 135.055 li
149.653 134.935 li
149.773 134.935 li
149.894 134.815 li
150.133 134.815 li
150.342 134.564 150.879 134.589 151.093 134.335 cv
151.333 134.335 li
151.453 134.215 li
151.693 134.215 li
151.814 134.095 li
152.053 134.095 li
152.173 133.975 li
152.533 133.975 li
152.653 133.855 li
153.013 133.855 li
153.133 133.734 li
153.613 133.734 li
153.733 133.615 li
154.333 133.615 li
154.453 133.495 li
155.053 133.495 li
155.173 133.375 li
156.133 133.375 li
156.253 133.255 li
157.573 133.255 li
157.693 133.135 li
158.894 133.135 li
159.013 133.015 li
159.854 133.015 li
159.973 132.895 li
160.814 132.895 li
160.933 132.775 li
161.653 132.775 li
161.773 132.654 li
162.733 132.654 li
162.854 132.535 li
165.493 132.535 li
165.613 132.415 li
173.173 132.415 li
173.293 132.295 li
198.373 132.295 li
264.372 132.295 li
@
gsave
116.173 150.415 mo
130.573 150.415 li
130.573 69.415 li
116.173 69.415 li
cp
clp
116.533 -178.623 mo
117.133 -142.024 li
117.253 -138.303 li
118.405 -68.8887 119.354 .636353 121.813 70.0153 cv
121.813 72.4153 li
122.052 77.2153 li
122.672 92.3463 123.045 107.749 124.333 122.335 cv
124.453 122.455 li
124.453 123.655 li
124.573 123.655 li
124.573 124.855 li
124.693 124.975 li
124.693 126.055 li
124.813 126.175 li
124.813 127.255 li
124.932 127.375 li
124.932 128.335 li
125.052 128.455 li
125.052 129.415 li
125.173 129.535 li
125.173 130.495 li
125.293 130.495 li
125.293 131.455 li
125.413 131.575 li
125.413 132.415 li
125.533 132.535 li
125.533 133.495 li
125.653 133.615 li
125.653 134.335 li
125.773 134.455 li
125.773 135.175 li
125.893 135.295 li
125.893 136.015 li
126.012 136.135 li
126.012 136.855 li
126.133 136.855 li
126.133 137.575 li
126.253 137.695 li
126.253 138.295 li
126.373 138.415 li
126.373 139.015 li
126.493 139.135 li
126.493 139.615 li
126.613 139.734 li
126.613 140.335 li
126.733 140.335 li
126.733 140.815 li
126.853 140.935 li
126.853 141.535 li
126.972 141.654 li
126.972 142.135 li
127.093 142.135 li
127.093 142.615 li
127.213 142.734 li
127.213 143.215 li
127.333 143.215 li
127.333 143.694 li
127.453 143.694 li
127.453 144.175 li
127.573 144.175 li
127.573 144.535 li
127.693 144.654 li
127.693 145.015 li
127.813 145.015 li
127.813 145.375 li
127.932 145.495 li
127.932 145.855 li
128.052 145.855 li
128.052 146.215 li
128.173 146.215 li
128.173 146.575 li
128.293 146.575 li
128.293 146.935 li
128.413 146.935 li
128.413 147.175 li
128.533 147.175 li
128.533 147.415 li
128.653 147.535 li
128.653 147.774 li
128.773 147.774 li
128.773 148.015 li
128.893 148.015 li
128.893 148.255 li
129.012 148.255 li
129.012 148.495 li
129.133 148.495 li
129.133 148.615 li
129.253 148.734 li
129.253 148.854 li
129.373 148.854 li
129.373 149.095 li
129.493 149.095 li
129.493 149.215 li
129.613 149.335 li
129.613 149.455 li
129.733 149.455 li
129.733 149.575 li
129.853 149.575 li
129.853 149.694 li
129.972 149.694 li
129.972 149.814 li
130.093 149.814 li
130.093 149.935 li
@
grestore
130.093 149.935 mo
130.213 149.935 li
130.213 150.055 li
130.453 150.055 li
130.453 150.175 li
130.573 150.175 li
130.573 150.295 li
130.933 150.295 li
130.933 150.415 li
132.013 150.415 li
132.013 150.295 li
132.373 150.295 li
132.373 150.175 li
132.613 150.175 li
132.613 150.055 li
132.854 150.055 li
132.854 149.935 li
132.973 149.935 li
133.093 149.815 li
133.213 149.815 li
133.213 149.695 li
133.333 149.695 li
133.333 149.576 li
133.453 149.576 li
133.453 149.456 li
133.573 149.456 li
133.693 149.335 li
133.814 149.335 li
133.814 149.215 li
133.933 149.215 li
133.933 149.095 li
134.053 149.095 li
134.053 148.975 li
134.173 148.975 li
134.173 148.855 li
134.293 148.855 li
134.293 148.616 li
134.413 148.616 li
134.413 148.496 li
134.533 148.496 li
134.533 148.375 li
134.653 148.375 li
134.653 148.255 li
134.774 148.255 li
134.774 148.135 li
134.894 148.135 li
134.894 148.015 li
135.013 148.015 li
135.013 147.895 li
135.133 147.895 li
135.133 147.775 li
135.253 147.775 li
135.253 147.536 li
135.373 147.536 li
135.373 147.415 li
135.493 147.415 li
135.493 147.295 li
135.613 147.295 li
135.613 147.175 li
135.734 147.175 li
135.734 146.935 li
135.854 146.935 li
135.854 146.815 li
135.973 146.815 li
135.973 146.695 li
136.093 146.695 li
136.093 146.456 li
136.213 146.456 li
136.213 146.335 li
136.333 146.335 li
136.333 146.215 li
136.453 146.215 li
136.453 145.975 li
136.573 145.975 li
136.573 145.855 li
136.693 145.855 li
136.693 145.735 li
136.814 145.735 li
136.814 145.496 li
136.933 145.496 li
136.933 145.376 li
137.053 145.376 li
137.053 145.255 li
137.173 145.135 li
137.173 145.015 li
137.293 145.015 li
137.293 144.895 li
137.413 144.895 li
137.413 144.655 li
137.533 144.655 li
137.533 144.536 li
137.653 144.536 li
137.653 144.416 li
137.774 144.416 li
137.774 144.175 li
137.894 144.175 li
137.894 144.055 li
138.013 144.055 li
138.013 143.935 li
138.133 143.935 li
138.133 143.695 li
138.253 143.695 li
138.253 143.576 li
138.373 143.576 li
138.373 143.456 li
138.493 143.335 li
138.493 143.215 li
138.613 143.215 li
138.613 143.095 li
138.734 143.095 li
138.734 142.855 li
138.854 142.855 li
138.854 142.735 li
138.973 142.735 li
138.973 142.616 li
139.093 142.616 li
139.093 142.376 li
139.213 142.376 li
139.213 142.255 li
139.333 142.255 li
139.333 142.135 li
139.453 142.135 li
139.453 141.895 li
139.573 141.895 li
139.693 141.775 li
139.693 141.655 li
139.814 141.655 li
139.814 141.536 li
140.173 141.175 li
140.173 141.055 li
140.293 141.055 li
140.413 140.935 li
140.413 140.815 li
140.533 140.695 li
140.653 140.695 li
140.653 140.576 li
141.013 140.215 li
141.013 140.095 li
141.133 140.095 li
141.493 139.735 li
141.493 139.616 li
142.213 138.895 li
142.213 138.775 li
142.453 138.536 li
142.573 138.536 li
143.894 137.215 li
144.013 137.215 li
144.373 136.855 li
144.493 136.855 li
144.734 136.616 li
144.734 136.496 li
144.854 136.496 li
145.093 136.255 li
145.213 136.255 li
145.453 136.015 li
145.573 136.015 li
145.693 135.895 li
145.814 135.895 li
145.933 135.775 li
145.933 135.655 li
146.053 135.655 li
146.385 135.395 146.802 135.317 147.133 135.055 cv
147.253 135.055 li
147.253 134.935 li
147.373 134.935 li
147.493 134.815 li
147.871 134.857 148.107 134.494 148.453 134.456 cv
148.573 134.335 li
148.814 134.335 li
148.933 134.215 li
149.173 134.215 li
149.293 134.095 li
149.533 134.095 li
149.653 133.975 li
149.894 133.975 li
150.013 133.855 li
150.373 133.855 li
150.493 133.735 li
150.973 133.735 li
150.973 133.616 li
151.453 133.616 li
151.573 133.496 li
152.053 133.496 li
152.173 133.376 li
152.773 133.376 li
152.894 133.255 li
153.733 133.255 li
153.854 133.135 li
155.053 133.135 li
155.173 133.015 li
156.733 133.015 li
156.854 132.895 li
158.293 132.895 li
158.413 132.775 li
159.253 132.775 li
159.373 132.655 li
159.973 132.655 li
160.093 132.536 li
160.573 132.536 li
160.693 132.416 li
161.053 132.416 li
161.173 132.295 li
161.773 132.295 li
161.894 132.175 li
162.613 132.175 li
162.733 132.055 li
164.173 132.055 li
164.293 131.935 li
171.613 131.935 li
171.733 131.815 li
198.373 131.815 li
264.372 131.815 li
@
gsave
116.173 150.055 mo
130.573 150.055 li
130.573 69.416 li
116.173 69.416 li
cp
clp
116.533 -180.423 mo
117.133 -143.703 li
117.253 -139.983 li
118.512 -62.4606 119.62 15.1144 122.653 92.5764 cv
122.773 94.0153 li
122.773 95.3353 li
123.202 108.618 124.181 121.048 125.653 133.615 cv
125.773 133.735 li
125.773 134.575 li
125.893 134.575 li
125.893 135.415 li
126.012 135.415 li
126.012 136.135 li
126.133 136.255 li
126.133 136.975 li
126.253 136.975 li
126.253 137.695 li
126.373 137.815 li
126.373 138.415 li
126.493 138.535 li
126.493 139.015 li
126.613 139.135 li
126.613 139.734 li
126.733 139.734 li
126.733 140.335 li
126.853 140.335 li
126.853 141.055 li
126.972 141.055 li
126.972 141.535 li
127.093 141.535 li
127.093 142.135 li
127.213 142.135 li
127.213 142.615 li
127.333 142.615 li
127.333 143.095 li
127.453 143.215 li
127.453 143.575 li
127.573 143.694 li
127.573 144.055 li
127.693 144.055 li
127.693 144.535 li
127.813 144.535 li
127.813 144.895 li
127.932 145.015 li
127.932 145.255 li
128.052 145.375 li
128.052 145.734 li
128.173 145.734 li
128.173 146.095 li
128.293 146.095 li
128.293 146.455 li
128.413 146.455 li
128.413 146.694 li
128.533 146.694 li
128.533 147.055 li
128.653 147.055 li
128.653 147.295 li
128.773 147.295 li
128.773 147.535 li
128.893 147.535 li
128.893 147.775 li
129.012 147.895 li
129.012 148.015 li
129.133 148.015 li
129.133 148.255 li
129.253 148.255 li
129.253 148.495 li
129.373 148.495 li
129.373 148.734 li
129.493 148.734 li
129.493 148.855 li
129.613 148.855 li
129.613 149.095 li
129.733 149.095 li
129.733 149.215 li
129.853 149.215 li
129.853 149.335 li
129.972 149.335 li
129.972 149.455 li
130.093 149.455 li
130.093 149.575 li
@
grestore
130.093 149.576 mo
130.213 149.576 li
130.213 149.695 li
130.333 149.695 li
130.333 149.815 li
130.453 149.815 li
130.453 149.935 li
130.693 149.935 li
130.693 150.055 li
130.933 150.055 li
130.933 150.176 li
132.253 150.176 li
132.253 150.055 li
132.493 150.055 li
132.493 149.935 li
132.734 149.935 li
132.854 149.815 li
132.973 149.815 li
132.973 149.695 li
133.093 149.695 li
133.213 149.576 li
133.333 149.576 li
133.333 149.456 li
133.453 149.456 li
133.453 149.336 li
133.693 149.336 li
133.693 149.216 li
133.814 149.216 li
133.814 149.095 li
133.933 149.095 li
133.933 148.975 li
134.053 148.975 li
134.053 148.855 li
134.173 148.855 li
134.173 148.735 li
134.293 148.735 li
134.293 148.616 li
134.413 148.616 li
134.413 148.496 li
134.533 148.496 li
134.533 148.376 li
134.653 148.376 li
134.653 148.256 li
134.774 148.256 li
134.774 148.136 li
134.894 148.136 li
134.894 148.015 li
135.013 148.015 li
135.013 147.895 li
135.133 147.895 li
135.133 147.775 li
135.253 147.775 li
135.253 147.536 li
135.373 147.536 li
135.373 147.416 li
135.493 147.416 li
135.493 147.296 li
135.613 147.296 li
135.613 147.176 li
135.734 147.176 li
135.734 146.935 li
135.854 146.935 li
135.854 146.815 li
135.973 146.815 li
135.973 146.695 li
136.093 146.695 li
136.093 146.576 li
136.213 146.576 li
136.213 146.336 li
136.333 146.336 li
136.333 146.216 li
136.453 146.216 li
136.453 146.096 li
136.573 146.096 li
136.573 145.975 li
136.693 145.975 li
136.693 145.735 li
136.814 145.735 li
136.814 145.616 li
136.933 145.616 li
136.933 145.496 li
137.053 145.496 li
137.053 145.256 li
137.173 145.256 li
137.173 145.136 li
137.293 145.136 li
137.293 145.015 li
137.413 145.015 li
137.413 144.775 li
137.533 144.775 li
137.533 144.655 li
137.653 144.655 li
137.653 144.536 li
137.774 144.536 li
137.774 144.296 li
137.894 144.296 li
137.894 144.176 li
138.013 144.176 li
138.013 144.055 li
138.133 144.055 li
138.133 143.935 li
138.253 143.815 li
138.253 143.695 li
138.373 143.695 li
138.373 143.576 li
138.493 143.576 li
138.493 143.336 li
138.613 143.336 li
138.613 143.216 li
138.734 143.216 li
138.734 143.096 li
138.854 143.096 li
138.854 142.855 li
138.973 142.855 li
138.973 142.735 li
139.093 142.735 li
139.093 142.616 li
139.213 142.616 li
139.213 142.376 li
139.333 142.376 li
139.333 142.256 li
139.453 142.256 li
139.453 142.136 li
139.573 142.136 li
139.573 142.015 li
139.693 142.015 li
139.693 141.895 li
139.933 141.655 li
139.933 141.536 li
140.053 141.536 li
140.053 141.416 li
140.173 141.416 li
140.173 141.296 li
140.653 140.815 li
140.653 140.695 li
140.774 140.695 li
141.013 140.456 li
141.013 140.336 li
142.213 139.136 li
142.213 139.015 li
142.933 138.296 li
143.053 138.296 li
143.413 137.935 li
143.413 137.815 li
143.533 137.695 li
143.653 137.695 li
144.133 137.216 li
144.253 137.216 li
144.613 136.855 li
144.734 136.855 li
144.734 136.735 li
144.854 136.616 li
144.973 136.616 li
145.213 136.376 li
145.333 136.376 li
145.573 136.136 li
145.693 136.136 li
145.814 136.015 li
145.933 136.015 li
145.933 135.895 li
146.053 135.895 li
146.293 135.655 li
146.413 135.655 li
146.533 135.536 li
146.653 135.536 li
146.774 135.416 li
146.894 135.416 li
147.013 135.296 li
147.133 135.296 li
147.373 135.055 li
147.613 135.055 li
147.734 134.935 li
147.854 134.935 li
147.973 134.815 li
148.213 134.815 li
148.333 134.695 li
148.453 134.695 li
148.573 134.576 li
148.814 134.576 li
148.933 134.456 li
149.173 134.456 li
149.293 134.336 li
149.533 134.336 li
149.653 134.216 li
149.894 134.216 li
150.013 134.096 li
150.373 134.096 li
150.493 133.975 li
150.854 133.975 li
150.973 133.855 li
151.333 133.855 li
151.453 133.735 li
152.053 133.735 li
152.173 133.616 li
152.773 133.616 li
152.894 133.496 li
153.493 133.496 li
153.493 133.376 li
154.573 133.376 li
154.693 133.256 li
155.533 133.256 li
155.653 133.136 li
156.373 133.136 li
156.493 133.016 li
157.213 133.016 li
157.333 132.895 li
158.31 132.86 159.193 132.584 160.213 132.655 cv
160.333 132.536 li
163.573 132.536 li
163.573 132.416 li
169.693 132.416 li
169.693 132.296 li
198.373 132.296 li
213.372 132.296 li
213.492 132.176 li
264.372 132.176 li
@
123.133 104.096 mo
123.133 104.816 li
123.253 104.936 li
123.253 106.016 li
123.373 106.136 li
123.373 107.216 li
123.493 107.216 li
123.493 108.296 li
123.613 108.416 li
123.613 109.376 li
123.734 109.496 li
123.734 110.456 li
123.854 110.576 li
123.854 111.416 li
123.973 111.536 li
123.973 112.376 li
124.093 112.496 li
124.101 113.711 124.406 114.931 124.453 116.096 cv
124.573 116.216 li
124.573 117.056 li
124.693 117.056 li
124.693 117.896 li
124.814 117.896 li
124.814 118.616 li
124.933 118.736 li
124.933 119.456 li
125.053 119.456 li
125.053 120.176 li
125.173 120.296 li
125.173 120.896 li
125.293 120.896 li
125.293 121.496 li
125.413 121.616 li
125.413 122.216 li
125.533 122.336 li
125.533 123.056 li
125.653 123.056 li
125.653 123.656 li
125.774 123.656 li
125.774 124.256 li
125.894 124.256 li
125.894 124.856 li
126.013 124.856 li
126.013 125.456 li
126.133 125.456 li
126.133 125.936 li
126.253 126.056 li
126.253 126.536 li
126.373 126.536 li
126.373 127.016 li
126.493 127.136 li
126.493 127.496 li
126.613 127.496 li
126.613 127.976 li
126.734 127.976 li
126.734 128.456 li
126.854 128.456 li
126.854 128.936 li
126.973 129.056 li
126.973 129.416 li
127.093 129.416 li
127.093 129.776 li
127.213 129.896 li
127.213 130.256 li
127.333 130.256 li
127.333 130.616 li
127.453 130.616 li
127.453 130.976 li
127.573 130.976 li
127.573 131.336 li
127.693 131.336 li
127.693 131.695 li
127.814 131.695 li
127.814 132.056 li
127.933 132.056 li
127.933 132.416 li
128.053 132.416 li
128.053 132.776 li
128.173 132.776 li
128.173 133.016 li
128.293 133.136 li
128.293 133.376 li
128.413 133.376 li
128.413 133.616 li
128.533 133.616 li
128.533 133.856 li
128.653 133.856 li
128.653 134.096 li
128.774 134.096 li
128.774 134.336 li
128.894 134.336 li
128.894 134.576 li
129.013 134.576 li
129.013 134.816 li
129.133 134.816 li
129.133 135.056 li
129.253 135.056 li
129.253 135.296 li
129.373 135.296 li
129.373 135.416 li
129.493 135.416 li
129.493 135.655 li
129.613 135.655 li
129.613 135.776 li
129.734 135.776 li
129.734 136.016 li
129.854 136.016 li
129.854 136.136 li
129.973 136.136 li
129.973 136.256 li
130.093 136.256 li
130.093 136.376 li
130.213 136.376 li
130.213 136.496 li
130.333 136.496 li
130.333 136.616 li
130.453 136.616 li
130.453 136.735 li
130.573 136.735 li
130.573 136.856 li
130.693 136.856 li
130.693 136.976 li
130.814 136.976 li
130.814 137.096 li
130.933 137.096 li
130.933 137.216 li
131.173 137.216 li
131.173 137.336 li
131.293 137.336 li
131.293 137.456 li
131.533 137.456 li
131.533 137.576 li
131.774 137.576 li
131.774 137.695 li
132.013 137.695 li
132.013 137.816 li
132.493 137.816 li
132.493 137.936 li
134.053 137.936 li
134.053 137.816 li
134.533 137.816 li
134.533 137.695 li
134.894 137.695 li
134.894 137.576 li
135.253 137.576 li
135.253 137.456 li
135.613 137.456 li
135.613 137.336 li
135.854 137.336 li
135.854 137.216 li
136.093 137.216 li
136.093 137.096 li
136.333 137.096 li
136.333 136.976 li
136.573 136.976 li
136.573 136.856 li
136.814 136.856 li
136.814 136.735 li
137.053 136.735 li
137.053 136.616 li
137.293 136.616 li
137.293 136.496 li
137.533 136.496 li
137.533 136.376 li
137.774 136.376 li
137.774 136.256 li
137.894 136.256 li
137.894 136.136 li
138.133 136.136 li
138.133 136.016 li
138.373 136.016 li
138.373 135.896 li
138.613 135.896 li
138.613 135.776 li
138.734 135.776 li
138.734 135.655 li
138.973 135.655 li
138.973 135.536 li
139.213 135.536 li
139.213 135.416 li
139.453 135.416 li
139.453 135.296 li
139.693 135.296 li
139.693 135.176 li
139.933 135.176 li
139.933 135.056 li
140.173 135.056 li
140.293 134.936 li
140.413 134.936 li
140.533 134.816 li
140.774 134.816 li
140.894 134.695 li
141.013 134.695 li
141.133 134.576 li
141.373 134.576 li
141.493 134.456 li
141.613 134.456 li
141.733 134.336 li
141.973 134.336 li
142.093 134.216 li
142.213 134.216 li
142.333 134.096 li
142.573 134.096 li
142.693 133.976 li
143.053 133.976 li
143.173 133.856 li
143.413 133.856 li
143.533 133.735 li
143.894 133.735 li
144.013 133.616 li
144.493 133.616 li
144.613 133.496 li
144.973 133.496 li
145.093 133.376 li
145.693 133.376 li
145.814 133.256 li
146.413 133.256 li
146.533 133.136 li
147.253 133.136 li
147.373 133.016 li
148.213 133.016 li
148.333 132.896 li
149.653 132.896 li
149.653 132.776 li
152.413 132.776 li
152.533 132.655 li
161.053 132.655 li
161.053 132.536 li
166.213 132.536 li
166.333 132.416 li
171.973 132.416 li
172.093 132.296 li
177.853 132.296 li
177.972 132.176 li
182.653 132.176 li
182.773 132.056 li
264.372 132.056 li
@
123.133 95.3363 mo
123.734 101.096 li
123.734 101.576 li
124.205 105.598 124.686 109.783 125.053 113.815 cv
125.173 114.655 li
125.293 115.376 li
125.591 119.119 126.168 122.965 126.493 126.655 cv
126.613 126.775 li
126.613 127.376 li
126.734 127.376 li
126.734 127.855 li
126.854 127.976 li
126.854 128.576 li
126.973 128.576 li
126.973 129.056 li
127.093 129.056 li
127.093 129.536 li
127.213 129.536 li
127.213 130.016 li
127.333 130.016 li
127.333 130.496 li
127.453 130.496 li
127.453 130.855 li
127.573 130.976 li
127.573 131.336 li
127.693 131.336 li
127.693 131.695 li
127.814 131.695 li
127.814 132.056 li
127.933 132.056 li
127.933 132.416 li
128.053 132.416 li
128.053 132.775 li
128.173 132.775 li
128.173 133.136 li
128.293 133.136 li
128.293 133.376 li
128.413 133.496 li
128.413 133.735 li
128.533 133.735 li
128.533 133.976 li
128.653 133.976 li
128.653 134.216 li
128.774 134.216 li
128.774 134.456 li
128.894 134.456 li
128.894 134.695 li
129.013 134.695 li
129.013 134.935 li
129.133 134.935 li
129.133 135.176 li
129.253 135.176 li
129.253 135.296 li
129.373 135.296 li
129.373 135.536 li
129.493 135.536 li
129.493 135.655 li
129.613 135.775 li
129.613 135.895 li
129.734 135.895 li
129.734 136.016 li
129.854 136.016 li
129.854 136.136 li
129.973 136.136 li
129.973 136.256 li
130.093 136.256 li
130.093 136.376 li
130.213 136.376 li
130.213 136.496 li
130.333 136.496 li
130.333 136.616 li
130.573 136.616 li
130.573 136.735 li
130.693 136.735 li
130.693 136.855 li
130.933 136.855 li
130.933 136.976 li
131.413 136.976 li
131.413 137.096 li
132.253 137.096 li
132.373 136.976 li
132.734 136.976 li
132.734 136.855 li
133.093 136.855 li
133.093 136.735 li
133.213 136.735 li
133.333 136.616 li
133.453 136.616 li
133.453 136.496 li
133.693 136.496 li
133.693 136.376 li
133.933 136.376 li
133.933 136.256 li
134.053 136.256 li
134.053 136.136 li
134.293 136.136 li
134.293 136.016 li
134.413 136.016 li
134.413 135.895 li
134.533 135.895 li
134.533 135.775 li
134.653 135.775 li
134.653 135.655 li
134.774 135.655 li
134.774 135.536 li
135.013 135.536 li
135.013 135.416 li
135.133 135.416 li
135.133 135.296 li
135.253 135.296 li
135.253 135.176 li
135.373 135.176 li
135.373 135.056 li
135.493 135.056 li
135.493 134.935 li
135.613 134.935 li
135.613 134.815 li
135.734 134.815 li
135.734 134.695 li
135.854 134.695 li
135.854 134.576 li
135.973 134.576 li
135.973 134.456 li
136.093 134.456 li
136.093 134.336 li
136.213 134.336 li
136.213 134.216 li
136.333 134.216 li
136.333 134.096 li
136.453 134.096 li
136.453 133.976 li
136.573 133.976 li
136.573 133.855 li
136.693 133.855 li
136.693 133.735 li
136.814 133.735 li
136.814 133.616 li
136.933 133.616 li
136.933 133.496 li
137.053 133.496 li
137.053 133.376 li
137.173 133.376 li
137.173 133.256 li
137.293 133.256 li
137.293 133.136 li
137.413 133.136 li
137.413 133.016 li
137.533 133.016 li
137.533 132.895 li
137.653 132.895 li
137.653 132.775 li
137.774 132.775 li
137.774 132.655 li
137.894 132.655 li
137.894 132.416 li
138.013 132.416 li
138.013 132.296 li
138.133 132.296 li
138.133 132.176 li
138.253 132.176 li
138.253 132.056 li
138.373 132.056 li
138.373 131.935 li
138.493 131.815 li
138.613 131.815 li
138.613 131.695 li
139.453 130.855 li
139.453 130.735 li
139.573 130.735 li
139.933 130.376 li
139.933 130.256 li
140.053 130.256 li
140.293 130.016 li
140.293 129.895 li
140.413 129.895 li
140.774 129.536 li
140.774 129.416 li
140.894 129.416 li
141.373 128.935 li
141.373 128.815 li
141.493 128.815 li
142.093 128.216 li
142.213 128.216 li
142.213 128.096 li
142.573 127.735 li
142.693 127.735 li
143.173 127.256 li
143.293 127.256 li
143.413 127.136 li
143.413 127.016 li
143.533 126.895 li
143.653 126.895 li
144.013 126.536 li
144.133 126.536 li
144.373 126.296 li
144.493 126.296 li
144.973 125.815 li
145.093 125.815 li
145.333 125.576 li
145.453 125.576 li
145.693 125.336 li
145.814 125.336 li
146.173 124.976 li
146.293 124.976 li
146.413 124.855 li
146.533 124.855 li
146.653 124.735 li
146.773 124.735 li
147.013 124.496 li
147.133 124.496 li
147.373 124.256 li
147.493 124.256 li
147.613 124.136 li
147.733 124.136 li
147.854 124.016 li
147.973 124.016 li
148.093 123.895 li
148.213 123.895 li
148.573 123.536 li
148.693 123.536 li
148.814 123.416 li
148.933 123.416 li
149.053 123.296 li
149.173 123.296 li
149.293 123.176 li
149.413 123.176 li
149.533 123.056 li
149.653 123.056 li
149.653 122.935 li
149.773 122.935 li
149.894 122.815 li
150.013 122.815 li
150.133 122.695 li
150.253 122.695 li
150.373 122.576 li
150.493 122.576 li
150.613 122.456 li
150.854 122.456 li
151.125 122.208 151.445 121.989 151.814 121.976 cv
151.933 121.855 li
152.173 121.855 li
152.173 121.735 li
152.413 121.735 li
152.533 121.616 li
152.773 121.616 li
152.894 121.496 li
153.253 121.496 li
153.373 121.376 li
153.733 121.376 li
153.854 121.256 li
154.573 121.256 li
154.693 121.136 li
155.653 121.136 li
155.773 121.016 li
156.854 121.016 li
156.973 120.896 li
158.413 120.896 li
158.533 120.775 li
160.333 120.775 li
160.453 120.655 li
162.853 120.655 li
162.973 120.536 li
165.373 120.536 li
165.493 120.416 li
167.773 120.416 li
167.893 120.296 li
171.013 120.296 li
264.372 120.296 li
@
gsave
116.173 132.775 mo
130.573 132.775 li
130.573 69.416 li
116.173 69.416 li
cp
clp
116.533 -138.183 mo
117.133 -106.383 li
117.253 -103.263 li
118.335 -47.2316 119.195 8.98633 121.453 64.9753 cv
121.453 67.3763 li
121.693 71.9354 li
122.381 84.8373 122.686 98.4304 123.853 110.935 cv
123.972 111.055 li
123.972 112.135 li
124.093 112.135 li
124.093 113.095 li
124.213 113.215 li
124.213 114.296 li
124.333 114.296 li
124.333 115.135 li
124.453 115.255 li
124.453 116.095 li
124.573 116.215 li
124.573 116.935 li
124.693 117.055 li
124.693 117.895 li
124.813 117.895 li
124.813 118.616 li
124.932 118.735 li
124.932 119.456 li
125.052 119.576 li
125.052 120.175 li
125.173 120.295 li
125.173 120.895 li
125.293 120.895 li
125.293 121.496 li
125.413 121.616 li
125.413 122.215 li
125.533 122.335 li
125.533 122.935 li
125.653 123.055 li
125.653 123.536 li
125.773 123.536 li
125.773 124.015 li
125.893 124.135 li
125.893 124.616 li
126.012 124.616 li
126.012 125.095 li
126.133 125.215 li
126.133 125.576 li
126.253 125.695 li
126.253 126.055 li
126.373 126.175 li
126.373 126.536 li
126.493 126.655 li
126.493 126.895 li
126.613 127.015 li
126.613 127.376 li
126.733 127.376 li
126.733 127.735 li
126.853 127.735 li
126.853 128.095 li
126.972 128.215 li
126.972 128.455 li
127.093 128.455 li
127.093 128.815 li
127.213 128.815 li
127.213 129.055 li
127.333 129.055 li
127.333 129.295 li
127.453 129.416 li
127.453 129.655 li
127.573 129.655 li
127.573 129.895 li
127.693 129.895 li
127.693 130.135 li
127.813 130.135 li
127.813 130.375 li
127.932 130.375 li
127.932 130.496 li
128.052 130.616 li
128.052 130.735 li
128.173 130.735 li
128.173 130.975 li
128.293 130.975 li
128.293 131.095 li
128.413 131.095 li
128.413 131.215 li
128.533 131.215 li
128.533 131.335 li
128.773 131.576 li
128.893 131.576 li
128.893 131.695 li
129.012 131.695 li
129.012 131.815 li
129.133 131.815 li
129.133 131.935 li
129.253 131.935 li
129.373 132.055 li
129.493 132.055 li
129.613 132.175 li
129.972 132.175 li
129.972 132.295 li
130.093 132.295 li
@
grestore
130.093 132.295 mo
130.693 132.295 li
130.693 132.175 li
131.173 132.175 li
131.173 132.055 li
131.533 132.055 li
131.533 131.935 li
131.774 131.935 li
131.774 131.815 li
132.013 131.815 li
132.013 131.694 li
132.133 131.694 li
132.253 131.575 li
132.373 131.575 li
132.373 131.455 li
132.613 131.455 li
132.613 131.335 li
132.734 131.335 li
132.734 131.215 li
132.854 131.215 li
132.854 131.095 li
133.093 131.095 li
133.093 130.975 li
133.213 130.975 li
133.213 130.855 li
133.333 130.855 li
133.333 130.734 li
133.453 130.734 li
133.453 130.615 li
133.693 130.615 li
133.693 130.495 li
133.814 130.495 li
133.814 130.375 li
133.933 130.375 li
133.933 130.255 li
134.053 130.255 li
134.053 130.135 li
134.173 130.135 li
134.173 130.015 li
134.293 130.015 li
134.293 129.895 li
134.413 129.895 li
134.413 129.774 li
134.533 129.774 li
134.533 129.654 li
134.653 129.654 li
134.774 129.535 li
134.894 129.535 li
134.894 129.415 li
135.013 129.415 li
135.013 129.295 li
135.133 129.295 li
135.133 129.175 li
135.253 129.175 li
135.253 129.055 li
135.373 129.055 li
135.373 128.935 li
135.493 128.935 li
135.493 128.815 li
135.613 128.815 li
135.613 128.694 li
135.734 128.694 li
135.734 128.575 li
135.854 128.575 li
135.854 128.455 li
135.973 128.455 li
135.973 128.335 li
136.093 128.335 li
136.213 128.215 li
136.333 128.215 li
136.333 128.095 li
136.453 128.095 li
136.453 127.975 li
137.173 127.975 li
137.173 128.095 li
137.293 128.095 li
137.293 128.215 li
137.533 128.215 li
137.533 128.335 li
137.774 128.335 li
137.774 128.455 li
137.894 128.455 li
137.894 128.575 li
138.133 128.575 li
138.133 128.694 li
138.253 128.694 li
138.253 128.815 li
138.493 128.815 li
138.493 128.935 li
138.734 128.935 li
138.734 129.055 li
138.973 129.055 li
138.973 129.175 li
139.213 129.175 li
139.213 129.295 li
139.453 129.295 li
139.453 129.415 li
139.693 129.415 li
139.814 129.535 li
140.053 129.535 li
140.053 129.654 li
140.293 129.654 li
140.413 129.774 li
140.653 129.774 li
140.653 129.895 li
140.894 129.895 li
141.013 130.015 li
141.253 130.015 li
141.373 130.135 li
141.493 130.135 li
141.613 130.255 li
141.854 130.255 li
141.973 130.375 li
142.213 130.375 li
142.213 130.495 li
142.573 130.495 li
142.693 130.615 li
142.933 130.615 li
143.053 130.734 li
143.413 130.734 li
143.413 130.855 li
143.653 130.855 li
143.774 130.975 li
144.72 131.089 145.679 131.518 146.774 131.455 cv
146.894 131.575 li
149.293 131.575 li
149.413 131.694 li
150.973 131.694 li
151.093 131.815 li
152.533 131.815 li
152.653 131.935 li
154.213 131.935 li
154.333 132.055 li
158.173 132.055 li
158.293 132.175 li
166.453 132.175 li
166.573 132.055 li
198.373 132.055 li
264.372 132.055 li
@
gsave
116.173 128.455 mo
130.573 128.455 li
130.573 69.415 li
116.173 69.415 li
cp
clp
116.533 -120.183 mo
117.133 -90.4227 li
117.253 -87.4227 li
118.222 -38.5587 119.121 10.3813 121.093 59.2164 cv
121.213 61.4963 li
121.333 63.6553 li
121.915 76.0374 122.557 89.0844 123.613 101.216 cv
123.733 101.336 li
123.733 102.296 li
123.853 102.296 li
123.853 103.135 li
123.972 103.256 li
123.972 104.095 li
124.093 104.095 li
124.093 104.935 li
124.213 105.055 li
124.213 105.895 li
124.333 106.015 li
124.333 106.735 li
124.453 106.735 li
124.453 107.576 li
124.573 107.576 li
124.573 108.416 li
124.693 108.416 li
124.693 109.135 li
124.813 109.256 li
124.813 109.975 li
124.932 109.975 li
124.932 110.695 li
125.052 110.815 li
125.052 111.416 li
125.173 111.536 li
125.173 112.015 li
125.293 112.135 li
125.293 112.735 li
125.413 112.855 li
125.413 113.456 li
125.533 113.456 li
125.533 114.176 li
125.653 114.176 li
125.653 114.775 li
125.773 114.775 li
125.773 115.376 li
125.893 115.376 li
125.893 115.975 li
126.012 115.975 li
126.012 116.456 li
126.133 116.576 li
126.133 117.055 li
126.253 117.055 li
126.253 117.655 li
126.373 117.655 li
126.373 118.135 li
126.493 118.135 li
126.493 118.616 li
126.613 118.616 li
126.613 119.095 li
126.733 119.095 li
126.733 119.576 li
126.853 119.576 li
126.853 120.055 li
126.972 120.055 li
126.972 120.416 li
127.093 120.536 li
127.093 120.895 li
127.213 120.895 li
127.213 121.255 li
127.333 121.376 li
127.333 121.735 li
127.453 121.735 li
127.453 122.095 li
127.573 122.095 li
127.573 122.456 li
127.693 122.576 li
127.693 122.815 li
127.813 122.935 li
127.813 123.175 li
127.932 123.296 li
127.932 123.536 li
128.052 123.536 li
128.052 123.895 li
128.173 123.895 li
128.173 124.255 li
128.293 124.255 li
128.293 124.496 li
128.413 124.616 li
128.413 124.855 li
128.533 124.855 li
128.533 125.095 li
128.653 125.095 li
128.653 125.336 li
128.773 125.336 li
128.773 125.576 li
128.893 125.576 li
128.893 125.815 li
129.153 126.147 129.232 126.564 129.493 126.895 cv
129.493 127.015 li
129.613 127.015 li
129.613 127.255 li
129.733 127.255 li
129.733 127.496 li
129.853 127.496 li
129.853 127.616 li
129.972 127.616 li
129.972 127.855 li
130.093 127.855 li
130.093 127.975 li
@
grestore
130.093 127.975 mo
130.213 127.975 li
130.213 128.095 li
130.333 128.215 li
130.333 128.335 li
130.453 128.335 li
130.453 128.455 li
130.573 128.455 li
130.573 128.576 li
130.693 128.576 li
130.693 128.815 li
130.814 128.815 li
130.814 128.935 li
130.933 128.935 li
130.933 129.055 li
131.053 129.055 li
131.053 129.175 li
131.173 129.175 li
131.173 129.295 li
131.293 129.295 li
131.293 129.415 li
131.533 129.415 li
131.533 129.536 li
131.653 129.536 li
131.653 129.655 li
131.774 129.655 li
131.774 129.775 li
131.894 129.775 li
131.894 129.895 li
132.133 129.895 li
132.133 130.015 li
132.253 130.015 li
132.253 130.135 li
132.493 130.135 li
132.493 130.255 li
132.734 130.255 li
132.734 130.375 li
132.973 130.375 li
132.973 130.496 li
133.333 130.496 li
133.333 130.616 li
133.573 130.616 li
133.573 130.735 li
133.933 130.735 li
133.933 130.855 li
134.293 130.855 li
134.293 130.975 li
134.653 130.975 li
134.653 131.095 li
136.333 131.095 li
136.333 131.215 li
140.053 131.215 li
140.173 131.335 li
141.613 131.335 li
141.734 131.455 li
143.173 131.455 li
143.293 131.576 li
144.613 131.576 li
144.734 131.695 li
145.933 131.695 li
145.933 131.815 li
147.373 131.815 li
147.493 131.935 li
149.053 131.935 li
149.173 132.055 li
152.293 132.055 li
152.413 132.175 li
156.973 132.175 li
157.093 132.055 li
165.733 132.055 li
165.854 132.175 li
166.453 132.175 li
166.573 132.295 li
167.516 132.322 168.914 132.884 169.933 132.775 cv
170.053 132.895 li
177.373 132.895 li
177.373 132.775 li
264.372 132.775 li
@
gsave
116.173 123.175 mo
130.573 123.175 li
130.573 69.415 li
116.173 69.415 li
cp
clp
116.533 -155.104 mo
117.133 -123.064 li
117.253 -119.823 li
118.318 -63.7028 119.217 -7.55981 121.333 48.5362 cv
121.453 51.0552 li
121.453 53.5762 li
122.319 69.0222 122.59 85.0262 123.972 100.015 cv
124.093 100.135 li
124.093 101.215 li
124.213 101.215 li
124.213 102.295 li
124.333 102.416 li
124.333 103.255 li
124.453 103.376 li
124.453 104.335 li
124.573 104.456 li
124.573 105.295 li
124.693 105.416 li
124.693 106.255 li
124.813 106.255 li
124.813 107.095 li
124.932 107.215 li
124.914 108.012 125.166 108.709 125.173 109.496 cv
125.293 109.616 li
125.293 110.215 li
125.413 110.335 li
125.413 110.935 li
125.533 111.055 li
125.533 111.775 li
125.653 111.895 li
125.653 112.375 li
125.773 112.496 li
125.773 113.095 li
125.893 113.095 li
125.893 113.695 li
126.012 113.695 li
126.012 114.175 li
126.133 114.295 li
126.133 114.775 li
126.253 114.775 li
126.253 115.255 li
126.373 115.375 li
126.373 115.855 li
126.493 115.855 li
126.493 116.215 li
126.613 116.335 li
126.613 116.695 li
126.733 116.695 li
126.733 117.055 li
126.853 117.175 li
126.853 117.536 li
126.972 117.655 li
126.972 117.895 li
127.093 118.015 li
127.093 118.255 li
127.213 118.375 li
127.213 118.616 li
127.333 118.735 li
127.333 118.975 li
127.453 118.975 li
127.453 119.335 li
127.573 119.335 li
127.573 119.576 li
127.693 119.695 li
127.693 119.935 li
127.813 119.935 li
127.813 120.175 li
127.932 120.175 li
127.932 120.415 li
128.052 120.415 li
128.052 120.655 li
128.173 120.655 li
128.173 120.895 li
128.293 120.895 li
128.293 121.135 li
128.413 121.135 li
128.413 121.255 li
128.533 121.255 li
128.533 121.375 li
128.653 121.496 li
128.653 121.616 li
128.773 121.616 li
128.773 121.735 li
128.893 121.735 li
128.893 121.855 li
129.012 121.855 li
129.012 121.975 li
129.133 121.975 li
129.133 122.095 li
129.253 122.095 li
129.253 122.215 li
129.373 122.215 li
129.373 122.335 li
129.493 122.335 li
129.493 122.455 li
129.733 122.455 li
129.733 122.576 li
129.972 122.576 li
129.972 122.695 li
130.093 122.695 li
@
grestore
130.093 122.695 mo
130.333 122.695 li
130.333 122.815 li
131.173 122.815 li
131.173 122.695 li
131.653 122.695 li
131.653 122.576 li
131.894 122.576 li
131.894 122.456 li
132.133 122.456 li
132.133 122.336 li
132.373 122.336 li
132.373 122.215 li
132.613 122.215 li
132.613 122.095 li
132.734 122.095 li
132.734 121.975 li
132.973 121.975 li
132.973 121.855 li
133.093 121.855 li
133.093 121.735 li
133.333 121.735 li
133.333 121.616 li
133.453 121.616 li
133.453 121.496 li
133.573 121.496 li
133.573 121.376 li
133.693 121.376 li
133.693 121.255 li
133.814 121.255 li
133.814 121.135 li
133.933 121.135 li
133.933 121.015 li
134.053 121.015 li
134.053 120.895 li
134.173 120.895 li
134.173 120.775 li
134.293 120.775 li
134.293 120.655 li
134.533 120.655 li
134.533 120.775 li
134.653 120.775 li
134.653 120.895 li
134.774 120.895 li
134.774 121.015 li
134.894 121.015 li
134.894 121.135 li
135.013 121.135 li
135.013 121.376 li
135.133 121.376 li
135.133 121.496 li
135.253 121.496 li
135.253 121.735 li
135.373 121.735 li
135.373 121.855 li
135.493 121.855 li
135.493 122.095 li
135.613 122.095 li
135.613 122.215 li
135.734 122.215 li
135.734 122.456 li
135.854 122.456 li
135.854 122.576 li
135.973 122.576 li
135.973 122.815 li
136.093 122.815 li
136.093 122.935 li
136.213 122.935 li
136.213 123.175 li
136.333 123.175 li
136.333 123.296 li
136.453 123.296 li
136.453 123.536 li
136.573 123.536 li
136.573 123.655 li
136.693 123.655 li
136.693 123.895 li
136.814 123.895 li
136.814 124.015 li
136.933 124.015 li
136.933 124.255 li
137.053 124.255 li
137.053 124.376 li
137.173 124.376 li
137.173 124.496 li
137.293 124.496 li
137.293 124.616 li
137.413 124.735 li
137.413 124.855 li
137.533 124.855 li
137.533 124.975 li
137.653 124.975 li
137.653 125.095 li
137.774 125.095 li
137.774 125.215 li
137.894 125.215 li
137.894 125.456 li
138.013 125.456 li
138.013 125.576 li
138.133 125.576 li
138.133 125.695 li
138.253 125.695 li
138.253 125.815 li
138.373 125.815 li
138.373 125.935 li
138.493 125.935 li
138.493 126.055 li
138.613 126.055 li
138.613 126.175 li
138.734 126.175 li
138.734 126.296 li
138.854 126.296 li
138.854 126.416 li
138.973 126.536 li
139.093 126.536 li
139.093 126.655 li
139.213 126.655 li
139.213 126.775 li
139.333 126.775 li
139.333 126.895 li
139.453 126.895 li
139.453 127.015 li
139.573 127.015 li
139.573 127.135 li
139.693 127.135 li
139.693 127.255 li
139.814 127.255 li
139.933 127.376 li
140.053 127.376 li
140.053 127.496 li
140.173 127.496 li
140.173 127.616 li
140.293 127.616 li
140.533 127.855 li
140.653 127.855 li
140.653 127.975 li
140.774 127.975 li
140.894 128.095 li
141.013 128.095 li
141.013 128.215 li
141.133 128.215 li
141.253 128.336 li
141.373 128.336 li
141.493 128.456 li
141.493 128.576 li
141.613 128.576 li
141.734 128.695 li
141.854 128.695 li
142.093 128.935 li
142.213 128.935 li
142.213 129.055 li
142.333 129.055 li
142.573 129.296 li
142.693 129.296 li
142.814 129.416 li
142.933 129.416 li
143.053 129.536 li
143.173 129.536 li
143.293 129.655 li
143.413 129.655 li
143.413 129.775 li
143.533 129.775 li
143.653 129.895 li
143.774 129.895 li
143.937 130.02 144.757 130.276 144.973 130.496 cv
145.093 130.496 li
145.213 130.616 li
145.672 130.595 146.365 131.192 147.013 131.215 cv
147.133 131.336 li
147.253 131.336 li
147.373 131.456 li
147.613 131.456 li
147.734 131.576 li
148.093 131.576 li
148.213 131.695 li
148.453 131.695 li
148.573 131.815 li
148.933 131.815 li
149.053 131.935 li
149.413 131.935 li
149.533 132.055 li
150.013 132.055 li
150.133 132.175 li
150.854 132.175 li
150.973 132.296 li
151.933 132.296 li
152.053 132.416 li
153.253 132.416 li
153.373 132.536 li
158.173 132.536 li
158.293 132.655 li
160.333 132.655 li
160.453 132.775 li
161.653 132.775 li
161.773 132.895 li
171.013 132.895 li
171.013 132.775 li
172.573 132.775 li
172.693 132.655 li
173.533 132.655 li
173.653 132.536 li
174.493 132.536 li
174.613 132.416 li
175.333 132.416 li
175.453 132.296 li
177.013 132.296 li
177.133 132.175 li
198.373 132.175 li
206.893 132.175 li
207.012 132.055 li
264.372 132.055 li
@
NQHFPP+Times-Roman*1 [5.7248 0 0 -5.7248 0 0 ]msf
131.413 120.896 mo
(8)sh
132.735 128.693 mo
(7)sh
130.457 136.135 mo
(6)sh
147.374 122.453 mo
(5)sh
135.615 141.534 mo
(4)sh
131.894 147.894 mo
(3)sh
128.052 154.134 mo
(2)sh
126.255 176.575 mo
(1)sh
NQHFPP+Times-Roman*1 [0 -6.6863 -6.6863 0 0 0 ]msf
89.2353 160.664 mo
(Potential energy /Hartree)
[-3.71759 -3.34314 -1.85876 -2.96875 -3.34314 -1.85883 -1.85876 -2.96869 -1.85883 -1.67157 -2.96869 -3.3432 
-2.96869 -2.2265 -3.34314 -3.34314 -1.67157 -1.85883 -4.82751 -2.96869 -2.2265 -1.85876 -2.2265 -2.96875 
0 ]ysh
NQHFPP+Times-Roman*1 [6.6863 0 0 -6.6863 0 0 ]msf
154.333 201.935 mo
(Internuclear se)
[2.02589 3.22949 1.78523 2.89517 2.02589 3.22949 3.22948 2.88849 1.78523 2.76814 2.89516 2.15294 
1.56459 2.52748 0 ]xsh
192.231 201.935 mo
(p)sh
195.34 201.935 mo
(aration /nm)
[2.87511 2.13289 2.87511 1.76518 1.68495 3.24284 3.24954 1.56459 1.7652 3.24954 0 ]xsh
true set_gvm
%ADOBeginSubsetFont: XYEBAA+AdvTimes AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2016 Adobe System Incorporated. All rights reserved.
systemdict begin
NQHFPJ+AdvTimes dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/X <1C60D8A8C9B6F715D887C03B395206079B2D9B586279523AC600119D3FE5
278D074C475DC9F45438B433AFEF84137D5825C66ADE976088DEB2B4B5F4F886
459C02C41F3C4116B5127A21B02BA34873762E74E41B04DB9725A0A205DF0110
B4287FF741C430F4771E8832FDE0A92FA452EC27164421CBD6F583B53F940672
CCD3BA364928CE50654AAF3658E970FC368DABAC4625BD538E6AAAB6381ACD84
CBB0855285150BA5EC0C44C9C96AFCE333719C6743B0CF72D46722FC1133A97F
1A821EB318F34FF28E11AA702931FDCEEA38BBDDA03486E970987D111880763A
BF5E1D2E11B0DEF965612D5D7A932EEC51208E284B3CA6A1DAC488EF4B04841C
21AF3C8B814D961930FC9D997D1783F762E7CF1343DA57CDE9FAC7CB327D4A83
AED368B80485E96E27DA0B0A70190785CB17EBDFC0799D21271162107216EC16
F700BF3A12D6CE66E87A3E3564ABB21E28A37FA01060E17E655DA5209BB632AC
70E5A07DF8C1820DC18465C515518364D6B0174BF406E888791AFC7CDE17A258
4DE9C4F8BF36E5F5C817E4DC469894696E2A6F1327A6813A81> |-
systemdict /gcheck known {setglobal} if end {end} if
end
NQHFPJ+AdvTimes /Encoding get
dup 88 /X put
pop
%ADOEndSubsetFont
reset_gvm
/NQHFPJ+AdvTimes*1 
[37{/.notdef}rp /percent /.notdef /quoteright /parenleft /parenright 2{/.notdef}rp /comma 
/hyphen /period /.notdef /zero /one /two /three /four 
/five /six /seven /eight /nine /colon /semicolon 5{/.notdef}rp 
/A /B /C /.notdef /E /F 2{/.notdef}rp /I 
4{/.notdef}rp /N /O /P /.notdef /R /S /T 
2{/.notdef}rp /W /X 2{/.notdef}rp /bracketleft /.notdef /bracketright 2{/.notdef}rp 
/quoteleft /a /b /c /d /e /f /g 
/h /i /.notdef /k /l /m /n /o 
/p /q /r /s /t /u /v /w 
/x /y 55{/.notdef}rp /endash 78{/.notdef}rp]
NQHFPJ+AdvTimes nf
NQHFPJ+AdvTimes*1 [8.9663 0 0 -8.9663 0 0 ]msf
59.6409 219.857 mo
(Figure3.PECsofeight)
[5.97156 2.42094 4.48315 4.94942 3.45197 10.0781 4.48315 6.85926 5.41568 5.97156 6.43782 9.61183 
4.94942 9.05589 3.91824 2.42093 4.48315 4.94942 0 ]xsh
NQHFPM+AdvMT_RM*1 [8.9663 0 0 -8.9663 0 0 ]msf
168.662 219.857 mo
(\012)sh
NQHFPJ+AdvTimes*1 [8.9663 0 0 -8.9663 0 0 ]msf
181.699 219.857 mo
(statesofS)
[3.45198 2.9857 4.48315 2.98572 3.91823 9.55803 4.94942 9.05589 0 ]xsh
NQHFPJ+AdvTimes*1 [6.7246 0 0 -5.9768 0 0 ]msf
228.076 221.331 mo
(2)sh
NQHFPJ+AdvTimes*1 [8.9663 0 0 -8.9663 0 0 ]msf
237.543 219.857 mo
(1:X)
[4.48315 8.50009 0 ]xsh
NQHFPJ+AdvTimes*1 [6.7246 0 0 -5.9768 0 0 ]msf
257.443 215.888 mo
(3)sh
NQHFPM+AdvMT_RM*1 [8.9663 0 0 -8.9663 0 0 ]msf
260.787 219.857 mo
(\006)sh
NQHFPK+AdvMT_SY*1 [6.2762 0 0 -6.2762 0 0 ]msf
267.647 216.568 mo
(\377)sh
NQHFPJ+AdvTimes*1 [6.2762 0 0 -6.2762 0 0 ]msf
267.647 222.349 mo
(g)sh
NQHFPJ+AdvTimes*1 [8.9663 0 0 -8.9663 0 0 ]msf
272.976 219.857 mo
(\(X1\);)
[2.98572 6.90408 4.48315 2.98572 0 ]xsh
59.6411 229.836 mo
(2:A)
[4.48315 7.02962 0 ]xsh
NQHFPK+AdvMT_SY*1 [6.2762 0 0 -6.2762 0 0 ]msf
78.0661 226.546 mo
(0)sh
NQHFPJ+AdvTimes*1 [6.7246 0 0 -5.9768 0 0 ]msf
80.1638 225.809 mo
(3)sh
NQHFPL+AdvPi1*1 [8.9663 0 0 -8.9663 0 0 ]msf
83.5653 229.835 mo
(D)sh
NQHFPJ+AdvTimes*1 [6.7246 0 0 -5.9768 0 0 ]msf
89.5181 231.309 mo
(u)sh
NQHFPJ+AdvTimes*1 [8.9663 0 0 -8.9663 0 0 ]msf
93.2031 229.835 mo
(\(A)
[2.98571 0 ]xsh
NQHFPK+AdvMT_SY*1 [6.2762 0 0 -6.2762 0 0 ]msf
103.124 226.546 mo
(0)sh
NQHFPJ+AdvTimes*1 [8.9663 0 0 -8.9663 0 0 ]msf
105.279 229.835 mo
(1\);3:A)
[4.48315 2.98572 6.98478 4.48315 7.02962 0 ]xsh
NQHFPJ+AdvTimes*1 [6.7246 0 0 -5.9768 0 0 ]msf
138.161 225.809 mo
(3)sh
NQHFPM+AdvMT_RM*1 [8.9663 0 0 -8.9663 0 0 ]msf
141.505 229.835 mo
(\006)sh
NQHFPK+AdvMT_SY*1 [6.2762 0 0 -6.2762 0 0 ]msf
148.309 226.546 mo
(\207)sh
NQHFPJ+AdvTimes*1 [6.2762 0 0 -6.2762 0 0 ]msf
148.309 232.327 mo
(u)sh
NQHFPJ+AdvTimes*1 [8.9663 0 0 -8.9663 0 0 ]msf
153.638 229.835 mo
(\(A1\);4:B)
[2.98572 6.90408 4.48315 2.9857 7.02066 4.48314 7.02962 0 ]xsh
NQHFPK+AdvMT_SY*1 [6.2762 0 0 -6.2762 0 0 ]msf
195.477 226.546 mo
(00)
[1.63177 0 ]xsh
NQHFPJ+AdvTimes*1 [6.7246 0 0 -5.9768 0 0 ]msf
199.275 225.809 mo
(3)sh
NQHFPM+AdvMT_RM*1 [8.9663 0 0 -8.9663 0 0 ]msf
202.62 229.835 mo
(\005)sh
NQHFPJ+AdvTimes*1 [6.7246 0 0 -5.9768 0 0 ]msf
209.99 231.309 mo
(u)sh
NQHFPJ+AdvTimes*1 [8.9663 0 0 -8.9663 0 0 ]msf
213.732 229.835 mo
(\(B)
[2.98572 0 ]xsh
NQHFPK+AdvMT_SY*1 [6.2762 0 0 -6.2762 0 0 ]msf
222.69 226.546 mo
(00)
[1.63177 0 ]xsh
NQHFPJ+AdvTimes*1 [8.9663 0 0 -8.9663 0 0 ]msf
226.432 229.835 mo
(1\);5:B)
[4.48315 2.9857 7.04756 4.48314 6.96686 0 ]xsh
NQHFPJ+AdvTimes*1 [6.7246 0 0 -5.9768 0 0 ]msf
258.406 225.809 mo
(3)sh
NQHFPM+AdvMT_RM*1 [8.9663 0 0 -8.9663 0 0 ]msf
261.751 229.835 mo
(\006)sh
NQHFPK+AdvMT_SY*1 [6.2762 0 0 -6.2762 0 0 ]msf
268.554 226.546 mo
(\377)sh
NQHFPJ+AdvTimes*1 [6.2762 0 0 -6.2762 0 0 ]msf
268.554 232.327 mo
(u)sh
NQHFPJ+AdvTimes*1 [8.9663 0 0 -8.9663 0 0 ]msf
273.883 229.835 mo
(\(B1\);)
[2.98572 5.97156 4.48315 2.98569 0 ]xsh
59.6426 239.751 mo
(6:B)
[4.48315 5.43362 0 ]xsh
NQHFPK+AdvMT_SY*1 [6.2762 0 0 -6.2762 0 0 ]msf
75.515 236.524 mo
(0)sh
NQHFPJ+AdvTimes*1 [6.7246 0 0 -5.9768 0 0 ]msf
77.6693 235.787 mo
(3)sh
NQHFPM+AdvMT_RM*1 [8.9663 0 0 -8.9663 0 0 ]msf
81.0142 239.756 mo
(\005)sh
NQHFPJ+AdvTimes*1 [6.7246 0 0 -5.9768 0 0 ]msf
88.3842 241.287 mo
(g)sh
NQHFPJ+AdvTimes*1 [8.9663 0 0 -8.9663 0 0 ]msf
91.7858 239.756 mo
(\(B)
[2.98571 0 ]xsh
NQHFPK+AdvMT_SY*1 [6.2762 0 0 -6.2762 0 0 ]msf
100.743 236.524 mo
(0)sh
NQHFPJ+AdvTimes*1 [8.9663 0 0 -8.9663 0 0 ]msf
102.841 239.756 mo
(1\);7:1)
[4.48315 2.98572 5.46051 4.48315 5.37982 0 ]xsh
NQHFPJ+AdvTimes*1 [6.7246 0 0 -5.9768 0 0 ]msf
130.11 235.787 mo
(1)sh
NQHFPM+AdvMT_RM*1 [8.9663 0 0 -8.9663 0 0 ]msf
133.512 239.756 mo
(\005)sh
NQHFPJ+AdvTimes*1 [6.7246 0 0 -5.9768 0 0 ]msf
140.882 241.287 mo
(u)sh
NQHFPJ+AdvTimes*1 [8.9663 0 0 -8.9663 0 0 ]msf
144.567 239.756 mo
(\(11\);8:e)
[2.98572 4.48314 4.48315 2.98572 5.41568 4.48315 5.43361 0 ]xsh
NQHFPJ+AdvTimes*1 [6.7246 0 0 -5.9768 0 0 ]msf
178.753 235.787 mo
(1)sh
NQHFPM+AdvMT_RM*1 [8.9663 0 0 -8.9663 0 0 ]msf
182.154 239.756 mo
(\005)sh
NQHFPJ+AdvTimes*1 [6.7246 0 0 -5.9768 0 0 ]msf
189.524 241.287 mo
(g)sh
NQHFPJ+AdvTimes*1 [8.9663 0 0 -8.9663 0 0 ]msf
192.869 239.756 mo
(\(e1\).)
[2.98572 3.91823 4.48315 2.98572 0 ]xsh
NQHFPP+Times-Roman*1 [5.4 0 0 -5.4 0 0 ]msf
226.912 309.027 mo
(3)sh
NQHFPP+Times-Roman*1 [8.1 0 0 -8.1 0 0 ]msf
229.612 312.591 mo
(P)sh
NQHFPP+Times-Roman*1 [5.4 0 0 -5.4 0 0 ]msf
234.256 313.995 mo
(1)sh
NQHFPP+Times-Roman*1 [8.1 0 0 -8.1 0 0 ]msf
236.956 312.591 mo
(+)sh
NQHFPP+Times-Roman*1 [5.4 0 0 -5.4 0 0 ]msf
241.492 309.027 mo
(3)sh
NQHFPP+Times-Roman*1 [8.1 0 0 -8.1 0 0 ]msf
244.084 312.591 mo
(P)sh
NQHFPP+Times-Roman*1 [5.4 0 0 -5.4 0 0 ]msf
248.728 313.995 mo
(1)sh
NQHFPP+Times-Roman*1 [8.1 0 0 -8.1 0 0 ]msf
251.428 312.591 mo
( )sh
NQHFPP+Times-Roman*1 [5.4 0 0 -5.4 0 0 ]msf
226.912 319.827 mo
(3)sh
NQHFPP+Times-Roman*1 [8.1 0 0 -8.1 0 0 ]msf
229.612 323.391 mo
(P)sh
NQHFPP+Times-Roman*1 [5.4 0 0 -5.4 0 0 ]msf
234.256 324.796 mo
(2)sh
NQHFPP+Times-Roman*1 [8.1 0 0 -8.1 0 0 ]msf
236.956 323.391 mo
(+)sh
NQHFPP+Times-Roman*1 [5.4 0 0 -5.4 0 0 ]msf
241.492 319.827 mo
(3)sh
NQHFPP+Times-Roman*1 [8.1 0 0 -8.1 0 0 ]msf
244.084 323.391 mo
(P)sh
NQHFPP+Times-Roman*1 [5.4 0 0 -5.4 0 0 ]msf
248.728 324.796 mo
(1)sh
NQHFPP+Times-Roman*1 [8.1 0 0 -8.1 0 0 ]msf
251.428 323.391 mo
( )sh
NQHFPP+Times-Roman*1 [5.4 0 0 -5.4 0 0 ]msf
226.912 330.519 mo
(3)sh
NQHFPP+Times-Roman*1 [8.1 0 0 -8.1 0 0 ]msf
229.612 334.083 mo
(P)sh
NQHFPP+Times-Roman*1 [5.4 0 0 -5.4 0 0 ]msf
234.256 335.487 mo
(2)sh
NQHFPP+Times-Roman*1 [8.1 0 0 -8.1 0 0 ]msf
236.956 334.083 mo
(+)sh
NQHFPP+Times-Roman*1 [5.4 0 0 -5.4 0 0 ]msf
241.492 330.519 mo
(3)sh
NQHFPP+Times-Roman*1 [8.1 0 0 -8.1 0 0 ]msf
244.084 334.083 mo
(P)sh
NQHFPP+Times-Roman*1 [5.4 0 0 -5.4 0 0 ]msf
248.728 335.487 mo
(2)sh
NQHFPP+Times-Roman*1 [8.1 0 0 -8.1 0 0 ]msf
251.428 334.083 mo
( )sh
NQHFPP+Times-Roman*1 [7.0172 0 0 -7.0172 0 0 ]msf
133.271 402.237 mo
(0.20.40.60.81.0)
[3.12265 1.44554 25.9145 3.00337 1.56483 25.7952 3.12265 1.56485 25.7952 3.00336 1.56483 25.7952 
3.12267 1.56482 0 ]xsh
97.1468 381.115 mo
(-798.20)
[2.33668 3.5086 3.5086 3.5086 1.7543 3.5086 0 ]xsh
97.1468 350.878 mo
(-798.15)
[2.33668 3.5086 3.5086 3.5086 1.7543 3.5086 0 ]xsh
97.1468 320.641 mo
(-798.10)
[2.33668 3.5086 3.5086 3.5086 1.7543 3.5086 0 ]xsh
97.1468 290.404 mo
(-798.05)
[2.33668 3.5086 3.5086 3.5086 1.7543 3.5086 0 ]xsh
.42 lw
121.874 394.088 mo
121.874 392.889 li
@
137.115 394.088 mo
137.115 391.689 li
@
152.355 394.088 mo
152.355 392.889 li
@
167.595 394.088 mo
167.595 391.689 li
@
182.715 394.088 mo
182.715 392.889 li
@
197.957 394.088 mo
197.957 391.689 li
@
213.197 394.088 mo
213.197 392.889 li
@
228.437 394.088 mo
228.437 391.689 li
@
243.678 394.088 mo
243.678 392.889 li
@
258.798 394.088 mo
258.798 391.689 li
@
gsave
85.833 415.106 mo
266.627 415.106 li
266.627 269.803 li
85.833 269.803 li
cp
clp
121.875 394.088 mo
266.478 394.088 li
@
grestore
121.875 394.088 mo
122.956 394.088 li
@
121.875 378.97 mo
124.036 378.97 li
@
121.875 363.85 mo
122.956 363.85 li
@
121.875 348.73 mo
124.036 348.73 li
@
121.875 333.491 mo
122.956 333.491 li
@
121.875 318.372 mo
124.036 318.372 li
@
121.875 303.252 mo
122.956 303.252 li
@
121.875 288.133 mo
124.036 288.133 li
@
121.875 273.013 mo
122.956 273.013 li
@
121.875 394.088 mo
121.875 270.014 li
@
gsave
125.231 384.117 mo
138.671 384.117 li
138.671 269.997 li
125.231 269.997 li
cp
clp
.35 lw
125.595 -307.647 mo
126.075 -230.25 li
126.195 -222.569 li
127.687 -44.9097 128.344 133.077 132.195 310.571 cv
132.315 310.811 li
132.315 314.051 li
132.435 314.41 li
132.435 317.531 li
132.555 317.891 li
132.555 320.891 li
132.675 321.131 li
132.675 324.01 li
132.795 324.371 li
132.795 327.131 li
132.915 327.37 li
132.915 329.65 li
133.035 329.89 li
133.035 332.41 li
133.155 332.65 li
133.155 335.17 li
133.276 335.41 li
133.276 337.57 li
133.395 337.809 li
133.395 340.09 li
133.515 340.33 li
133.515 342.49 li
133.635 342.73 li
133.635 344.89 li
133.756 345.13 li
133.756 347.17 li
133.875 347.289 li
133.875 349.329 li
133.995 349.45 li
133.995 351.37 li
134.115 351.49 li
134.115 353.289 li
134.236 353.41 li
134.236 355.21 li
134.355 355.329 li
134.355 357.009 li
134.475 357.13 li
134.475 358.689 li
134.595 358.808 li
134.595 360.369 li
134.715 360.489 li
134.715 361.929 li
134.835 362.05 li
134.835 363.369 li
134.955 363.49 li
134.955 364.808 li
135.075 364.929 li
135.075 366.249 li
135.195 366.369 li
135.195 367.329 li
135.315 367.449 li
135.315 368.529 li
135.435 368.649 li
135.435 369.609 li
135.555 369.728 li
135.555 370.689 li
135.675 370.808 li
135.675 371.768 li
135.795 371.889 li
135.795 372.848 li
135.915 372.969 li
135.915 373.809 li
136.035 373.928 li
136.035 374.769 li
136.155 374.769 li
136.155 375.609 li
136.275 375.609 li
136.275 376.328 li
136.395 376.448 li
136.395 377.168 li
136.515 377.168 li
136.515 377.889 li
136.635 377.889 li
136.635 378.489 li
136.756 378.608 li
136.756 379.208 li
136.875 379.208 li
136.875 379.688 li
136.995 379.808 li
136.995 380.288 li
137.115 380.288 li
137.115 380.769 li
137.236 380.769 li
137.236 381.247 li
137.355 381.247 li
137.355 381.728 li
137.475 381.728 li
137.475 382.088 li
137.595 382.088 li
137.595 382.448 li
137.716 382.448 li
137.716 382.688 li
137.835 382.808 li
137.835 383.048 li
137.955 383.048 li
137.955 383.288 li
138.075 383.408 li
138.075 383.649 li
138.196 383.649 li
@
grestore
.35 lw
138.195 383.65 mo
138.195 383.769 li
138.315 383.889 li
138.315 384.009 li
138.435 384.009 li
138.435 384.128 li
138.554 384.249 li
138.554 384.368 li
138.675 384.368 li
138.675 384.49 li
138.915 384.49 li
138.915 384.609 li
139.155 384.609 li
139.155 384.73 li
139.514 384.73 li
139.514 384.609 li
139.755 384.609 li
139.875 384.49 li
139.994 384.49 li
139.994 384.368 li
140.114 384.368 li
140.114 384.249 li
140.235 384.249 li
140.235 384.128 li
140.355 384.128 li
140.355 384.009 li
140.474 384.009 li
140.474 383.769 li
140.594 383.769 li
140.594 383.65 li
140.715 383.65 li
140.715 383.529 li
140.835 383.409 li
140.835 383.289 li
140.954 383.289 li
140.954 383.049 li
141.074 383.049 li
141.074 382.809 li
141.195 382.809 li
141.195 382.569 li
141.315 382.569 li
141.315 382.328 li
141.435 382.328 li
141.435 382.209 li
141.554 382.089 li
141.554 381.85 li
141.675 381.85 li
141.675 381.61 li
141.795 381.61 li
141.795 381.369 li
141.915 381.369 li
141.915 381.129 li
142.034 381.129 li
142.034 380.77 li
142.155 380.77 li
142.155 380.53 li
142.275 380.409 li
142.275 380.169 li
142.395 380.169 li
142.395 379.809 li
142.514 379.809 li
142.514 379.57 li
142.635 379.449 li
142.635 379.209 li
142.755 379.209 li
142.755 378.849 li
142.875 378.849 li
142.875 378.49 li
142.994 378.49 li
142.994 378.249 li
143.115 378.129 li
143.115 377.89 li
143.235 377.89 li
143.235 377.53 li
143.355 377.53 li
143.355 377.169 li
143.474 377.169 li
143.474 376.809 li
143.595 376.809 li
143.595 376.449 li
143.715 376.449 li
143.715 376.09 li
143.835 376.09 li
143.835 375.85 li
143.954 375.729 li
143.954 375.369 li
144.075 375.369 li
144.075 375.01 li
144.195 375.01 li
144.195 374.77 li
144.315 374.65 li
144.315 374.289 li
144.435 374.289 li
144.435 373.929 li
144.555 373.929 li
144.555 373.57 li
144.675 373.57 li
144.675 373.209 li
144.795 373.209 li
144.795 372.849 li
144.915 372.849 li
144.915 372.49 li
145.034 372.49 li
145.034 372.129 li
145.155 372.009 li
145.155 371.769 li
145.275 371.65 li
145.275 371.409 li
145.395 371.289 li
145.395 370.93 li
145.514 370.93 li
145.514 370.569 li
145.635 370.569 li
145.635 370.209 li
145.755 370.209 li
145.755 369.85 li
145.875 369.85 li
145.875 369.49 li
145.994 369.49 li
145.994 369.129 li
146.115 369.129 li
146.115 368.77 li
146.235 368.77 li
146.235 368.409 li
146.355 368.409 li
146.355 368.05 li
146.474 368.05 li
146.474 367.689 li
146.595 367.689 li
146.595 367.33 li
146.715 367.33 li
146.715 367.089 li
146.835 366.97 li
146.835 366.73 li
146.954 366.61 li
147 366.269 147.096 365.919 147.315 365.65 cv
147.315 365.53 li
147.434 365.409 li
147.434 365.17 li
147.555 365.049 li
147.555 364.809 li
147.675 364.69 li
147.675 364.45 li
147.795 364.33 li
147.915 364.09 li
147.915 363.85 li
148.035 363.731 li
148.155 363.491 li
148.155 363.25 li
148.395 362.77 li
148.395 362.53 li
148.635 362.05 li
148.755 361.93 li
148.875 361.57 li
148.875 361.33 li
148.995 361.089 li
149.115 360.97 li
149.235 360.61 li
149.355 360.37 li
149.355 360.129 li
149.475 359.889 li
149.595 359.77 li
149.715 359.411 li
149.835 359.17 li
149.954 359.049 li
150.075 358.809 li
150.075 358.571 li
150.675 357.37 li
150.675 357.25 li
151.035 356.53 li
151.155 356.411 li
151.395 355.93 li
151.395 355.81 li
151.635 355.33 li
151.755 355.21 li
151.875 354.97 li
151.995 354.85 li
151.995 354.61 li
152.115 354.49 li
152.235 354.25 li
152.355 354.129 li
152.475 353.889 li
152.595 353.77 li
152.595 353.53 li
152.715 353.411 li
152.835 353.17 li
153.193 352.866 153.311 352.46 153.555 352.09 cv
153.915 351.731 li
153.915 351.61 li
154.035 351.371 li
154.635 350.77 li
154.635 350.651 li
155.235 350.05 li
155.235 349.93 li
155.955 349.21 li
155.955 349.09 li
156.075 348.97 li
156.195 348.97 li
156.555 348.61 li
156.555 348.491 li
156.675 348.491 li
156.915 348.25 li
157.035 348.25 li
157.155 348.129 li
157.155 348.01 li
157.274 347.889 li
157.396 347.889 li
157.635 347.651 li
157.754 347.651 li
158.115 347.289 li
158.234 347.289 li
158.355 347.17 li
158.475 347.17 li
158.475 347.051 li
158.595 347.051 li
158.835 346.811 li
158.955 346.811 li
159.075 346.69 li
159.195 346.69 li
159.195 346.571 li
159.315 346.571 li
159.435 346.45 li
159.675 346.45 li
159.915 346.211 li
160.035 346.211 li
160.155 346.09 li
160.395 346.09 li
160.635 345.85 li
160.876 345.85 li
160.995 345.731 li
161.115 345.731 li
161.234 345.611 li
161.475 345.611 li
161.661 345.384 162.976 345.046 163.275 345.01 cv
163.395 344.891 li
163.755 344.891 li
163.755 344.771 li
164.235 344.771 li
164.355 344.651 li
164.835 344.651 li
164.955 344.531 li
165.435 344.531 li
165.555 344.411 li
166.155 344.411 li
166.275 344.291 li
166.995 344.291 li
166.995 344.17 li
167.835 344.17 li
167.955 344.05 li
169.035 344.05 li
169.035 343.93 li
170.235 343.93 li
170.355 343.81 li
171.676 343.81 li
171.795 343.69 li
173.835 343.69 li
173.955 343.57 li
177.076 343.57 li
177.195 343.451 li
182.596 343.451 li
182.715 343.331 li
201.316 343.331 li
203.116 343.331 li
203.236 343.21 li
262.517 343.21 li
@
gsave
125.231 378.837 mo
138.671 378.837 li
138.671 269.998 li
125.231 269.998 li
cp
clp
125.595 -307.647 mo
126.075 -231.929 li
126.195 -224.369 li
126.314 -216.451 li
127.228 -80.5026 128.247 55.4783 130.155 191.415 cv
130.395 203.055 li
130.395 208.575 li
130.635 218.895 li
130.784 234.72 131.209 250.589 131.355 266.412 cv
131.475 268.813 li
131.475 273.133 li
131.77 283.155 131.931 293.165 132.195 303.131 cv
132.315 303.371 li
132.315 306.73 li
132.435 307.092 li
132.435 310.211 li
132.555 310.571 li
132.555 313.57 li
132.675 313.931 li
132.675 316.811 li
132.795 317.172 li
132.795 319.931 li
132.915 320.291 li
132.915 322.451 li
133.035 322.691 li
133.035 325.45 li
133.155 325.57 li
133.155 328.211 li
133.276 328.451 li
133.276 330.609 li
133.395 330.85 li
133.395 333.251 li
133.515 333.49 li
133.515 335.65 li
133.635 335.89 li
133.635 338.05 li
133.756 338.29 li
133.756 340.33 li
133.875 340.57 li
133.875 342.609 li
133.995 342.73 li
133.995 344.65 li
134.115 344.77 li
134.115 346.689 li
134.236 346.81 li
134.236 348.609 li
134.355 348.729 li
134.355 350.41 li
134.475 350.65 li
134.475 352.209 li
134.595 352.33 li
134.595 353.888 li
134.715 354.009 li
134.715 355.569 li
134.835 355.689 li
134.835 357.13 li
134.955 357.25 li
134.955 358.57 li
135.075 358.689 li
135.075 360.009 li
135.195 360.129 li
135.195 361.089 li
135.315 361.209 li
135.315 362.41 li
135.435 362.529 li
135.435 363.49 li
135.555 363.609 li
135.555 364.689 li
135.675 364.808 li
135.675 365.769 li
135.795 365.889 li
135.795 366.848 li
135.915 366.969 li
135.915 367.809 li
136.035 367.928 li
136.035 368.769 li
136.155 368.888 li
136.155 369.728 li
136.275 369.728 li
136.275 370.568 li
136.395 370.568 li
136.395 371.408 li
136.515 371.408 li
136.515 372.128 li
136.635 372.128 li
136.635 372.848 li
136.756 372.848 li
136.756 373.448 li
136.875 373.569 li
136.875 374.048 li
136.995 374.168 li
136.995 374.649 li
137.115 374.769 li
137.115 375.248 li
137.236 375.248 li
137.236 375.728 li
137.355 375.728 li
137.355 376.208 li
137.475 376.208 li
137.475 376.568 li
137.595 376.568 li
137.595 376.928 li
137.716 377.048 li
137.716 377.408 li
137.835 377.408 li
137.835 377.649 li
137.955 377.768 li
137.955 378.008 li
138.075 378.008 li
138.075 378.248 li
138.196 378.367 li
@
grestore
138.195 378.368 mo
138.195 378.49 li
138.315 378.609 li
138.315 378.73 li
138.435 378.849 li
138.435 378.97 li
138.554 378.97 li
138.554 379.209 li
138.675 379.209 li
138.675 379.329 li
138.795 379.329 li
138.795 379.449 li
138.915 379.449 li
138.915 379.57 li
139.155 379.57 li
139.155 379.689 li
139.755 379.689 li
139.875 379.57 li
139.994 379.57 li
140.114 379.449 li
140.235 379.449 li
140.235 379.329 li
140.355 379.329 li
140.355 379.209 li
140.474 379.209 li
140.474 379.089 li
140.594 379.089 li
140.594 378.97 li
140.715 378.97 li
140.715 378.73 li
140.835 378.73 li
140.835 378.609 li
140.954 378.609 li
140.954 378.368 li
141.074 378.368 li
141.074 378.129 li
141.195 378.129 li
141.195 378.009 li
141.315 378.009 li
141.315 377.769 li
141.435 377.769 li
141.435 377.53 li
141.554 377.53 li
141.554 377.289 li
141.675 377.289 li
141.675 377.049 li
141.795 377.049 li
141.795 376.809 li
141.915 376.809 li
141.915 376.569 li
142.034 376.569 li
142.034 376.329 li
142.155 376.209 li
142.155 375.969 li
142.275 375.969 li
142.275 375.729 li
142.395 375.729 li
142.395 375.369 li
142.514 375.369 li
142.514 375.129 li
142.635 375.129 li
142.635 374.77 li
142.755 374.77 li
142.755 374.53 li
142.875 374.409 li
142.875 374.169 li
142.994 374.169 li
142.994 373.81 li
143.115 373.81 li
143.115 373.57 li
143.235 373.449 li
143.235 373.209 li
143.355 373.089 li
143.355 372.849 li
143.474 372.849 li
143.474 372.49 li
143.595 372.49 li
143.595 372.129 li
143.715 372.129 li
143.715 371.769 li
143.835 371.769 li
143.835 371.53 li
143.954 371.53 li
143.954 371.169 li
144.075 371.049 li
144.075 370.809 li
144.195 370.69 li
144.195 370.449 li
144.315 370.449 li
144.315 370.09 li
144.435 370.09 li
144.435 369.729 li
144.555 369.729 li
144.555 369.369 li
144.675 369.369 li
144.675 369.01 li
144.795 369.01 li
144.795 368.65 li
144.915 368.53 li
144.915 368.289 li
145.034 368.169 li
145.034 367.81 li
145.155 367.81 li
145.155 367.45 li
145.275 367.45 li
145.275 367.089 li
145.395 367.089 li
145.395 366.73 li
145.514 366.73 li
145.514 366.369 li
145.635 366.369 li
145.635 366.009 li
145.755 366.009 li
145.755 365.65 li
145.875 365.65 li
145.875 365.289 li
145.994 365.289 li
145.994 364.93 li
146.115 364.93 li
146.115 364.569 li
146.235 364.569 li
146.235 364.209 li
146.355 364.209 li
146.355 363.85 li
146.474 363.85 li
146.474 363.491 li
146.595 363.491 li
146.595 363.129 li
146.715 363.129 li
146.715 362.89 li
146.835 362.77 li
146.835 362.53 li
146.954 362.41 li
146.954 362.17 li
147.075 362.05 li
147.075 361.81 li
147.195 361.69 li
147.195 361.57 li
147.315 361.45 li
147.315 361.329 li
147.434 361.209 li
147.434 360.97 li
147.555 360.85 li
147.555 360.61 li
147.675 360.49 li
147.675 360.249 li
147.795 360.129 li
147.915 359.889 li
147.915 359.649 li
148.035 359.53 li
148.155 359.289 li
148.155 359.049 li
148.395 358.571 li
148.395 358.33 li
148.515 358.09 li
148.635 357.971 li
148.875 357.491 li
148.875 357.25 li
149.355 356.29 li
149.355 356.05 li
150.075 354.61 li
150.075 354.369 li
150.195 354.129 li
150.315 354.01 li
150.675 353.289 li
150.675 353.17 li
150.915 352.69 li
151.035 352.571 li
151.275 352.09 li
151.395 351.971 li
151.395 351.731 li
151.515 351.61 li
151.635 351.371 li
151.755 351.25 li
151.875 351.01 li
151.995 350.89 li
151.995 350.651 li
152.235 350.411 li
152.355 350.17 li
152.595 349.93 li
152.595 349.69 li
153.075 349.21 li
153.195 348.97 li
153.315 348.85 li
153.315 348.73 li
153.915 348.129 li
153.915 348.01 li
154.515 347.411 li
154.635 347.411 li
154.635 347.289 li
155.115 346.811 li
155.235 346.811 li
155.235 346.69 li
155.472 346.523 155.718 346.378 155.955 346.211 cv
155.955 346.09 li
156.075 346.09 li
156.315 345.85 li
156.435 345.85 li
156.675 345.611 li
156.794 345.611 li
156.915 345.491 li
157.035 345.491 li
157.274 345.25 li
157.396 345.25 li
157.515 345.13 li
157.635 345.13 li
157.754 345.01 li
157.876 345.01 li
157.876 344.891 li
157.995 344.891 li
158.115 344.771 li
158.355 344.771 li
158.475 344.651 li
158.595 344.651 li
158.715 344.531 li
158.955 344.531 li
159.075 344.411 li
159.195 344.411 li
159.315 344.29 li
159.555 344.29 li
159.675 344.17 li
159.915 344.17 li
160.035 344.05 li
160.395 344.05 li
160.515 343.93 li
160.754 343.93 li
160.876 343.81 li
161.115 343.81 li
161.234 343.69 li
161.475 343.69 li
161.595 343.57 li
161.835 343.57 li
161.955 343.451 li
162.195 343.451 li
162.315 343.33 li
162.435 343.33 li
162.555 343.21 li
162.795 343.21 li
162.915 343.09 li
163.035 343.09 li
163.155 342.97 li
163.395 342.97 li
163.515 342.85 li
163.755 342.85 li
163.755 342.731 li
163.875 342.731 li
163.995 342.61 li
164.355 342.61 li
164.355 342.491 li
164.595 342.491 li
164.715 342.37 li
164.955 342.37 li
165.075 342.25 li
165.315 342.25 li
165.435 342.129 li
165.795 342.129 li
165.915 342.01 li
166.893 341.977 167.775 341.699 168.795 341.77 cv
168.915 341.651 li
170.235 341.651 li
170.235 341.53 li
172.275 341.53 li
172.275 341.411 li
174.795 341.411 li
174.915 341.291 li
178.516 341.291 li
178.636 341.17 li
184.275 341.17 li
184.396 341.051 li
197.115 341.051 li
197.115 340.93 li
201.316 340.93 li
262.517 340.93 li
@
131.714 283.093 mo
131.714 285.493 li
131.835 285.733 li
132.021 293.498 132.571 301.226 132.915 308.892 cv
133.034 309.132 li
133.034 310.933 li
133.154 311.052 li
133.154 312.731 li
133.275 312.972 li
133.275 314.411 li
133.395 314.651 li
133.395 316.212 li
133.514 316.452 li
133.514 318.013 li
133.634 318.132 li
133.634 319.571 li
133.755 319.812 li
133.755 321.252 li
133.875 321.372 li
133.875 322.812 li
133.994 322.933 li
133.994 324.251 li
134.114 324.372 li
134.114 325.691 li
134.235 325.811 li
134.235 327.012 li
134.355 327.132 li
134.355 328.452 li
134.474 328.452 li
134.474 329.651 li
134.594 329.77 li
134.577 330.971 134.852 332.053 134.835 333.252 cv
134.954 333.371 li
134.954 334.331 li
135.074 334.452 li
135.074 335.411 li
135.194 335.53 li
135.194 336.251 li
135.315 336.37 li
135.315 337.211 li
135.435 337.331 li
135.435 338.171 li
135.554 338.171 li
135.554 339.012 li
135.674 339.131 li
135.674 339.972 li
135.795 339.972 li
135.795 340.811 li
135.915 340.811 li
135.915 341.651 li
136.034 341.651 li
136.034 342.37 li
136.154 342.491 li
136.154 343.211 li
136.275 343.211 li
136.275 343.931 li
136.395 343.931 li
136.395 344.651 li
136.514 344.651 li
136.514 345.251 li
136.634 345.371 li
136.634 345.85 li
136.755 345.972 li
136.755 346.45 li
136.875 346.571 li
136.875 347.052 li
136.994 347.052 li
136.994 347.53 li
137.114 347.651 li
137.114 348.011 li
137.235 348.13 li
137.235 348.491 li
137.355 348.61 li
137.355 348.971 li
137.474 348.971 li
137.474 349.33 li
137.594 349.451 li
137.594 349.81 li
137.715 349.81 li
137.715 350.171 li
137.835 350.171 li
137.835 350.531 li
137.954 350.531 li
137.954 350.89 li
138.074 350.89 li
138.074 351.251 li
138.195 351.251 li
138.195 351.491 li
138.315 351.61 li
138.315 351.85 li
138.435 351.85 li
138.435 352.091 li
138.554 352.091 li
138.554 352.331 li
138.675 352.331 li
138.675 352.571 li
138.795 352.571 li
138.795 352.811 li
138.915 352.811 li
138.915 353.05 li
139.034 353.05 li
139.034 353.171 li
139.155 353.29 li
139.155 353.411 li
139.275 353.411 li
139.275 353.53 li
139.395 353.53 li
139.395 353.77 li
139.514 353.77 li
139.514 353.889 li
139.634 353.889 li
139.634 354.011 li
139.755 354.011 li
139.755 354.13 li
139.994 354.13 li
139.994 354.251 li
140.114 354.251 li
140.114 354.37 li
140.355 354.37 li
140.355 354.49 li
140.715 354.49 li
140.715 354.61 li
141.315 354.61 li
141.315 354.49 li
141.675 354.49 li
141.675 354.37 li
141.915 354.37 li
141.915 354.251 li
142.155 354.251 li
142.155 354.13 li
142.275 354.13 li
142.395 354.011 li
142.514 354.011 li
142.514 353.889 li
142.635 353.889 li
142.635 353.77 li
142.755 353.77 li
142.755 353.65 li
142.875 353.65 li
142.994 353.53 li
143.115 353.53 li
143.115 353.411 li
143.235 353.411 li
143.235 353.29 li
143.474 353.05 li
143.595 353.05 li
143.595 352.931 li
143.715 352.811 li
143.715 352.69 li
143.835 352.69 li
143.835 352.571 li
143.954 352.571 li
143.954 352.45 li
144.075 352.45 li
144.075 352.331 li
144.195 352.331 li
144.195 352.21 li
144.315 352.21 li
144.315 352.091 li
144.435 351.972 li
144.435 351.85 li
144.555 351.85 li
144.555 351.731 li
144.675 351.731 li
144.675 351.61 li
144.795 351.61 li
144.795 351.491 li
144.915 351.371 li
144.915 351.251 li
145.034 351.251 li
145.034 351.131 li
145.155 351.131 li
145.155 350.89 li
145.275 350.89 li
145.275 350.77 li
145.395 350.77 li
145.395 350.651 li
145.514 350.651 li
145.514 350.531 li
145.635 350.411 li
145.635 350.291 li
145.755 350.291 li
145.755 350.171 li
145.875 350.171 li
145.875 350.051 li
145.994 349.931 li
145.994 349.81 li
146.115 349.81 li
146.115 349.69 li
146.235 349.69 li
146.235 349.57 li
146.355 349.57 li
146.355 349.33 li
146.474 349.33 li
146.474 349.211 li
146.595 349.211 li
146.595 349.091 li
146.715 349.091 li
146.715 348.971 li
146.835 348.971 li
146.835 348.85 li
146.954 348.73 li
146.954 348.61 li
147.075 348.61 li
147.075 348.491 li
147.195 348.491 li
147.195 348.37 li
147.315 348.37 li
147.434 348.251 li
147.434 348.13 li
147.555 348.13 li
147.555 348.011 li
147.675 348.011 li
147.675 347.889 li
147.795 347.77 li
147.915 347.77 li
147.915 347.651 li
148.035 347.53 li
148.155 347.53 li
148.155 347.411 li
148.275 347.29 li
148.395 347.29 li
148.395 347.171 li
148.755 346.811 li
148.875 346.811 li
148.875 346.69 li
148.995 346.571 li
149.115 346.571 li
149.355 346.331 li
149.355 346.212 li
149.475 346.212 li
149.835 345.85 li
149.954 345.85 li
150.075 345.731 li
150.075 345.611 li
150.195 345.611 li
150.314 345.491 li
150.434 345.491 li
150.555 345.371 li
150.675 345.371 li
150.675 345.251 li
150.794 345.131 li
150.915 345.131 li
151.035 345.011 li
151.155 345.011 li
151.275 344.891 li
151.395 344.891 li
151.395 344.771 li
151.635 344.771 li
151.754 344.651 li
151.875 344.651 li
151.995 344.531 li
152.115 344.531 li
152.235 344.411 li
152.355 344.411 li
152.475 344.291 li
152.595 344.291 li
152.715 344.171 li
152.955 344.171 li
153.075 344.051 li
153.314 344.051 li
153.435 343.931 li
153.675 343.931 li
153.794 343.81 li
154.035 343.81 li
154.155 343.69 li
154.515 343.69 li
154.635 343.57 li
154.995 343.57 li
155.115 343.451 li
155.595 343.451 li
155.715 343.331 li
156.435 343.331 li
156.555 343.211 li
157.876 343.211 li
157.876 343.091 li
159.675 343.091 li
159.794 342.971 li
163.395 342.971 li
163.515 343.091 li
164.955 343.091 li
165.075 343.211 li
166.755 343.211 li
166.875 343.091 li
169.035 343.091 li
169.035 342.971 li
171.435 342.971 li
171.555 342.851 li
174.076 342.851 li
174.195 342.731 li
176.235 342.731 li
176.355 342.61 li
178.756 342.61 li
178.875 342.491 li
181.035 342.491 li
181.156 342.37 li
183.795 342.37 li
183.916 342.251 li
199.996 342.251 li
200.115 342.13 li
262.517 342.13 li
@
gsave
125.231 341.878 mo
138.671 341.878 li
138.671 269.999 li
125.231 269.999 li
cp
clp
125.595 -229.048 mo
126.075 -162.091 li
126.195 -155.492 li
127.455 -17.4136 128.266 120.69 131.235 258.733 cv
131.355 261.012 li
131.355 265.214 li
131.808 285.244 132.539 304.773 134.115 324.131 cv
134.236 324.25 li
134.236 325.451 li
134.355 325.451 li
134.355 326.531 li
134.475 326.651 li
134.475 327.731 li
134.595 327.851 li
134.595 328.811 li
134.715 328.811 li
134.715 329.77 li
134.835 329.891 li
134.835 330.731 li
134.955 330.85 li
134.955 331.691 li
135.075 331.691 li
135.075 332.531 li
135.195 332.531 li
135.195 333.131 li
135.315 333.251 li
135.315 333.851 li
135.435 333.971 li
135.435 334.571 li
135.555 334.571 li
135.555 335.17 li
135.675 335.291 li
135.675 335.891 li
135.795 335.891 li
135.795 336.491 li
135.915 336.491 li
135.915 336.97 li
136.035 336.97 li
136.035 337.451 li
136.155 337.571 li
136.155 337.93 li
136.275 337.93 li
136.275 338.41 li
136.395 338.41 li
136.395 338.771 li
136.515 338.771 li
136.515 339.13 li
136.635 339.13 li
136.635 339.491 li
136.756 339.491 li
136.756 339.731 li
136.875 339.851 li
136.875 340.09 li
136.995 340.09 li
136.995 340.33 li
137.115 340.33 li
137.115 340.451 li
137.236 340.451 li
137.236 340.69 li
137.355 340.69 li
137.355 340.811 li
137.595 341.051 li
137.595 341.17 li
137.835 341.17 li
137.835 341.291 li
137.955 341.291 li
137.955 341.41 li
138.196 341.41 li
@
grestore
138.195 341.41 mo
138.675 341.41 li
138.795 341.291 li
138.915 341.291 li
138.915 341.17 li
139.155 341.17 li
139.155 341.051 li
139.275 341.051 li
139.275 340.93 li
139.395 340.93 li
139.395 340.81 li
139.514 340.81 li
139.514 340.689 li
139.634 340.689 li
139.634 340.57 li
139.755 340.57 li
139.755 340.451 li
139.875 340.451 li
139.875 340.33 li
139.994 340.33 li
139.994 340.09 li
140.114 340.09 li
140.114 339.971 li
140.235 339.971 li
140.235 339.73 li
140.355 339.73 li
140.355 339.61 li
140.474 339.61 li
140.474 339.37 li
140.594 339.37 li
140.594 339.13 li
140.715 339.13 li
140.715 339.011 li
140.835 339.011 li
140.835 338.77 li
140.954 338.77 li
140.954 338.53 li
141.074 338.53 li
141.074 338.29 li
141.195 338.29 li
141.195 338.05 li
141.315 338.05 li
141.315 337.93 li
141.435 337.809 li
141.435 337.69 li
141.554 337.69 li
141.554 337.45 li
141.675 337.33 li
141.675 337.21 li
141.795 337.21 li
141.795 336.97 li
141.915 336.97 li
141.915 336.73 li
142.034 336.73 li
142.034 336.49 li
142.155 336.49 li
142.155 336.25 li
142.275 336.25 li
142.275 336.01 li
142.395 335.891 li
142.395 335.769 li
142.514 335.65 li
142.514 335.41 li
142.635 335.41 li
142.635 335.17 li
142.755 335.17 li
142.755 334.93 li
142.875 334.93 li
142.875 334.691 li
142.994 334.691 li
142.994 334.451 li
143.115 334.451 li
143.115 334.211 li
143.235 334.09 li
143.235 333.851 li
143.355 333.851 li
143.355 333.61 li
143.474 333.61 li
143.474 333.37 li
143.595 333.37 li
143.595 333.131 li
143.715 333.131 li
143.715 332.891 li
143.835 332.891 li
143.835 332.65 li
143.954 332.65 li
143.954 332.41 li
144.075 332.41 li
144.075 332.29 li
144.435 332.29 li
144.435 332.41 li
144.555 332.41 li
144.555 332.65 li
144.675 332.65 li
144.675 332.77 li
144.795 332.77 li
144.795 333.011 li
144.915 333.011 li
144.915 333.131 li
145.034 333.131 li
145.034 333.37 li
145.155 333.37 li
145.155 333.49 li
145.275 333.49 li
145.275 333.73 li
145.395 333.73 li
145.395 333.851 li
145.514 333.851 li
145.514 333.971 li
145.635 334.09 li
145.635 334.211 li
145.755 334.211 li
145.755 334.33 li
145.875 334.33 li
145.875 334.451 li
145.994 334.57 li
145.994 334.691 li
146.115 334.691 li
146.115 334.81 li
146.235 334.81 li
146.235 334.93 li
146.355 334.93 li
146.355 335.051 li
146.474 335.051 li
146.474 335.17 li
146.595 335.17 li
146.595 335.41 li
146.715 335.41 li
146.715 335.529 li
146.835 335.529 li
147.195 335.891 li
147.315 335.891 li
147.315 336.01 li
147.434 336.01 li
147.434 336.131 li
147.555 336.131 li
147.555 336.25 li
147.675 336.25 li
147.675 336.369 li
147.795 336.369 li
148.275 336.85 li
148.395 336.85 li
148.395 336.97 li
148.515 337.09 li
148.635 337.09 li
149.115 337.57 li
149.235 337.57 li
149.355 337.69 li
149.355 337.809 li
149.475 337.809 li
149.595 337.93 li
149.715 337.93 li
149.954 338.17 li
150.075 338.17 li
150.075 338.29 li
150.195 338.29 li
150.434 338.53 li
150.555 338.53 li
150.795 338.77 li
150.915 338.77 li
151.035 338.891 li
151.155 338.891 li
151.275 339.011 li
151.395 339.011 li
151.395 339.13 li
151.515 339.13 li
151.635 339.25 li
151.755 339.25 li
151.875 339.37 li
151.995 339.37 li
151.995 339.49 li
152.235 339.49 li
152.579 339.813 153.272 339.881 153.555 340.09 cv
153.915 340.09 li
153.915 340.211 li
154.275 340.211 li
154.396 340.33 li
154.875 340.33 li
154.995 340.451 li
155.475 340.451 li
155.595 340.57 li
156.075 340.57 li
156.195 340.689 li
156.794 340.689 li
156.915 340.81 li
157.515 340.81 li
157.635 340.93 li
158.475 340.93 li
158.475 341.051 li
159.555 341.051 li
159.675 341.17 li
165.435 341.17 li
165.555 341.051 li
167.955 341.051 li
168.075 341.17 li
168.915 341.17 li
169.035 341.291 li
169.635 341.291 li
169.635 341.41 li
170.235 341.41 li
170.235 341.529 li
170.955 341.529 li
170.955 341.65 li
172.156 341.65 li
172.275 341.769 li
174.555 341.769 li
174.676 341.89 li
175.515 341.89 li
175.636 342.01 li
176.475 342.01 li
176.596 342.129 li
177.915 342.129 li
178.035 342.25 li
180.795 342.25 li
180.915 342.129 li
191.835 342.129 li
191.956 342.01 li
201.316 342.01 li
262.517 342.01 li
@
NQHFPP+Times-Roman*1 [6.4669 0 0 -6.4669 0 0 ]msf
142.391 329.157 mo
(4)sh
140.593 351.597 mo
(3)sh
138.433 374.994 mo
(2)sh
137.353 389.512 mo
(1)sh
NQHFPP+Times-Roman*1 [0 -7.5526 -7.5526 0 0 0 ]msf
92.1094 370.011 mo
(Potential energy /Hartree)
[-4.19925 -3.77631 -2.09961 -3.35336 -3.77631 -2.09961 -2.09961 -3.35336 -2.09964 -1.88812 -3.35336 -3.77631 
-3.35336 -2.51495 -3.77631 -3.77631 -1.88812 -2.09964 -5.45297 -3.35336 -2.51495 -2.09964 -2.51495 -3.35333 
0 ]ysh
NQHFPP+Times-Roman*1 [7.5526 0 0 -7.5526 0 0 ]msf
152.591 413.517 mo
(Internuclear se)
[2.51495 3.77631 2.09962 3.35335 2.51497 3.77629 3.77631 3.35336 2.09961 3.35336 3.35336 2.51495 
1.88815 2.93802 0 ]xsh
197.257 413.517 mo
(p)sh
201.033 413.517 mo
(aration /nm)
[3.35336 2.51495 3.35335 2.09962 2.09962 3.77631 3.77629 1.88815 2.09962 3.77631 0 ]xsh
NQHFPJ+AdvTimes*1 [8.9663 0 0 -8.9663 0 0 ]msf
59.6409 431.548 mo
(Figure4.PECsoffour)
[5.97156 2.42094 4.48315 4.94942 3.45197 10.4098 4.48315 6.91306 5.41568 5.97156 6.43783 9.89874 
4.94943 9.45041 2.98572 4.9494 4.94943 0 ]xsh
NQHFPM+AdvMT_RM*1 [8.9663 0 0 -8.9663 0 0 ]msf
167.703 431.548 mo
(\012)sh
NQHFPJ+AdvTimes*1 [8.9663 0 0 -8.9663 0 0 ]msf
181.027 431.548 mo
(statesofS)
[3.45198 2.9857 4.48315 2.98572 3.91823 9.95255 4.94942 9.45041 0 ]xsh
NQHFPJ+AdvTimes*1 [6.7246 0 0 -5.9768 0 0 ]msf
228.132 433.079 mo
(2)sh
NQHFPJ+AdvTimes*1 [8.9663 0 0 -8.9663 0 0 ]msf
237.94 431.548 mo
(1:c)
[4.48315 8.89461 0 ]xsh
NQHFPJ+AdvTimes*1 [6.7246 0 0 -5.9768 0 0 ]msf
255.231 427.58 mo
(1)sh
NQHFPM+AdvMT_RM*1 [8.9663 0 0 -8.9663 0 0 ]msf
258.633 431.548 mo
(\006)sh
NQHFPK+AdvMT_SY*1 [6.2762 0 0 -6.2762 0 0 ]msf
265.436 428.317 mo
(\377)sh
NQHFPJ+AdvTimes*1 [6.2762 0 0 -6.2762 0 0 ]msf
265.436 434.04 mo
(u)sh
NQHFPJ+AdvTimes*1 [8.9663 0 0 -8.9663 0 0 ]msf
270.765 431.548 mo
(\(c0)
[2.98572 3.91824 0 ]xsh
NQHFPK+AdvMT_SY*1 [6.7246 0 0 -5.9768 0 0 ]msf
282.161 427.58 mo
(\377)sh
NQHFPJ+AdvTimes*1 [8.9663 0 0 -8.9663 0 0 ]msf
287.376 431.548 mo
(\);)
[2.98572 0 ]xsh
59.6413 441.528 mo
(2:A)
[4.48315 5.43362 0 ]xsh
NQHFPJ+AdvTimes*1 [6.7246 0 0 -5.9768 0 0 ]msf
76.4787 437.557 mo
(3)sh
NQHFPM+AdvMT_RM*1 [8.9663 0 0 -8.9663 0 0 ]msf
79.8236 441.526 mo
(\006)sh
NQHFPK+AdvMT_SY*1 [6.2762 0 0 -6.2762 0 0 ]msf
86.6268 438.294 mo
(\207)sh
NQHFPJ+AdvTimes*1 [6.2762 0 0 -6.2762 0 0 ]msf
86.6268 444.018 mo
(u)sh
NQHFPJ+AdvTimes*1 [8.9663 0 0 -8.9663 0 0 ]msf
91.9559 441.526 mo
(\(A0)
[2.98571 6.90409 0 ]xsh
NQHFPK+AdvMT_SY*1 [6.7246 0 0 -5.9768 0 0 ]msf
106.356 437.557 mo
(\377)sh
NQHFPJ+AdvTimes*1 [8.9663 0 0 -8.9663 0 0 ]msf
111.515 441.526 mo
(\);3:B)
[2.98571 5.46052 4.48315 5.37982 0 ]xsh
NQHFPK+AdvMT_SY*1 [6.2762 0 0 -6.2762 0 0 ]msf
135.836 438.294 mo
(00)
[1.63177 0 ]xsh
NQHFPJ+AdvTimes*1 [6.7246 0 0 -5.9768 0 0 ]msf
139.578 437.557 mo
(3)sh
NQHFPM+AdvMT_RM*1 [8.9663 0 0 -8.9663 0 0 ]msf
142.98 441.526 mo
(\005)sh
NQHFPJ+AdvTimes*1 [6.7246 0 0 -5.9768 0 0 ]msf
150.35 443 mo
(u)sh
NQHFPJ+AdvTimes*1 [8.9663 0 0 -8.9663 0 0 ]msf
154.035 441.526 mo
(\(B)
[2.98572 0 ]xsh
NQHFPK+AdvMT_SY*1 [6.2762 0 0 -6.2762 0 0 ]msf
162.992 438.294 mo
(00)
[1.63177 0 ]xsh
NQHFPJ+AdvTimes*1 [8.9663 0 0 -8.9663 0 0 ]msf
166.79 441.526 mo
(0)sh
NQHFPJ+AdvTimes*1 [6.7246 0 0 -5.9768 0 0 ]msf
171.269 437.557 mo
(-)sh
NQHFPJ+AdvTimes*1 [8.9663 0 0 -8.9663 0 0 ]msf
173.48 441.526 mo
(\);4:B)
[2.98572 5.46051 4.48315 5.37981 0 ]xsh
NQHFPK+AdvMT_SY*1 [6.2762 0 0 -6.2762 0 0 ]msf
197.801 438.294 mo
(0)sh
NQHFPJ+AdvTimes*1 [6.7246 0 0 -5.9768 0 0 ]msf
199.899 437.557 mo
(3)sh
NQHFPM+AdvMT_RM*1 [8.9663 0 0 -8.9663 0 0 ]msf
203.301 441.526 mo
(\005)sh
NQHFPJ+AdvTimes*1 [6.7246 0 0 -5.9768 0 0 ]msf
210.671 443 mo
(g)sh
NQHFPJ+AdvTimes*1 [8.9663 0 0 -8.9663 0 0 ]msf
214.016 441.526 mo
(\(B)
[2.98572 0 ]xsh
NQHFPK+AdvMT_SY*1 [6.2762 0 0 -6.2762 0 0 ]msf
222.973 438.294 mo
(0)sh
NQHFPJ+AdvTimes*1 [8.9663 0 0 -8.9663 0 0 ]msf
225.128 441.526 mo
(0)sh
NQHFPK+AdvMT_SY*1 [6.7246 0 0 -5.9768 0 0 ]msf
229.606 437.557 mo
(\377)sh
NQHFPJ+AdvTimes*1 [8.9663 0 0 -8.9663 0 0 ]msf
234.765 441.526 mo
(\).)
[2.98572 0 ]xsh
gsave
0 793.44 mo
609.12 793.44 li
609.12 0 li
0 0 li
cp
clp
/0 
<<
/Name (Black)
/CSA /0 get_csa_by_name
/MappedCSA /0 /CSA get_res
/TintMethod /Subtractive
/TintProc null
/NComponents 4 
/Components [ 0 0 0 1 ] 
>>
/CSD add_res
1 /0 /CSD get_res sepcs
1 sep
true set_gvm
%ADOBeginSubsetFont: TimesNewRomanPSMT Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2016 Adobe System Incorporated. All rights reserved.
12 dict dup begin
/FontType 1 def
/FontName /TimesNewRomanPSMT def
/FontInfo 5 dict dup begin
/ItalicAngle 0 def
/FSType 0 def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 32 /space put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 56 /eight put
dup 58 /colon put
dup 65 /A put
dup 68 /D put
dup 78 /N put
dup 85 /U put
dup 91 /bracketleft put
dup 93 /bracketright put
dup 97 /a put
dup 98 /b put
dup 100 /d put
dup 101 /e put
dup 103 /g put
dup 105 /i put
dup 108 /l put
dup 110 /n put
dup 111 /o put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 121 /y put
def
/FontBBox {-568 -307 2028 1007} def
end
systemdict begin
dup /Private
7 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [0 0] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
31 dict dup begin
/.notdef <1C60D8A8C9B6FF86FBD66B095379F45880CA28D0F0C4629F99B72E
FEDBB222483BD74F8B> |-
/space <1C60D8A8C9B8707C25> |-
/zero <1C60D8A8C9B7A73DAAFDCA97EBBC8D8E35A41D9404C5638B059E1CA50
B5366543C3D584AD9E19987218AC5999BB0F2477597AB6F8DD868788C8440CBF
4A338EF64ACD9BF2268656755741DB71FD86387D4A7AA1CFD19937BFD209E4FB
CD1952717C8CF8C0555CB2D0238DC43B2A6A2DE4D7366DB210D2673870D0B0C5
8344E6AEF91B916BAAEAEF37B22F065E870AFE6638E56D0B4AE01785D59EE234
02242D396440157FC51> |-
/one <1C60D8A8C9B7A73DB92A3F8C4B412A6756A4F8D8439622AB29A83C93F5
89D112DBEAB54F9ACF0D9BFA06C28638F8F8CA9EE7AFD734575522301B5C0272
0FA00A934493EC3D856AF45EEE1D7462FF2375B7250579D34D9C249B6BEBF8EF
41DB28C0847307B8DCBC66> |-
/two <1C60D8A8C9B7A73DB6F198797B24E7DF20E340C763AB9A17095FFDDA6B
4B0E4D4AC4BE83AF302018AACAF29AB5FCEB98A93FCCD2C9A968B7CB1B433E25
003CA8A63287F6BD1729C8188A209A7171C9BFB11D2FACEF2FADF63141D976A0
F90EDDE709834FFBF963952A5213F00F39F098C30D0F91D40A57CAEF920CE11E
C41D90433CE0F55F0A42A96AF852FD50FA> |-
/three <1C60D8A8C9B7A73D83638F79AE86E17D4CE334FAA90E146D21CDA0FE
B71815E9499D6C6A6E581E78F34038D792771470EBF894DABD777E9B4FDE68E7
E1544BCF1EFB2DCE59357B716B4D2ADF3EAC3A9FF8BD07EC79AF5536B9B74185
F8F7489AD909079119E88D2BB755D6F6AC02C01BDFADB347EC55DAC49C8BB047
661CC7AAA3BDC1DB8E01EC56137B53ED31B24F4502353853D049BB0515CA4217
D33D10484933F30AD1EAA43CFDF00AFA5462EE9B1772CE60A3392B8D9C1A3598
CF2273E36A1FF3A58B2E24B1EACE5E34650257902678998DAAFF235764CCCA14
3A> |-
/four <1C60D8A8C9B7A73DB6B62B7A95EE6C20B94EAC94CA9AB50BFD020369D
6A63C8EA15A0D9A89B2ED9293078F8D3EE629592E255C65B246> |-
/eight <1C60D8A8C9B7A73DAB2BA6B835CAFB4C9A41096F555C470FE6294A70
7AE711C017C95446B200870C2B6A47FB931BCEBEB5BBC6B53605850C75701306
FD83F9DC906687C2B3A2C9C0DB9DB68E95D3478DEA01153491C8534F5AD89998
0F04C195BFB522EDEF282420AA1F12E08397ECA941D5934294BD451B3952E622
9D3E7987DD36FC8E43559904E0205D3416EDD1402AB05184D2018B2C7B816330
FD0C2740A24C74F80E34F93317BBB1D6B8C4D916C15B7FF1D533D7762324A101
7022A27246D93B9768262BFCC673CAD6781894C98679A5889F9338F377D1995A
EDF5695FBA7A65628522691535557B2045419DD63F87D7A64B6A962B> |-
/colon <1C60D8A8C9B854D0F13087BBB1CA740A43DAD9701E3526922439491C
919607A35FADE78CBF58DEB6F77162B833A564944651E40EB8B1029279A92DA8
7F1970EA51E0E090EFBE9271A7A54984404D201FAE563EA042AC2F2168613E23
5EA185B91D3B39DC0CADE02D647DEA9D03A1D7A0C1E2B40AEF5E6B5E30B20C5D
70C85702672228> |-
/A <1C60D8A8C9B6079F6D0C3DD1DA701F2FEF50BE2CCF679467EAB463D54C49
5B1FC98737C4805A67EB9B211579E256E1BCD120087B7083980EFC748D95F15A
9738703A6CB4125517112E8D63595864B93D16C7B325AB1759098D24D8A43A63
AEECA533864B64013C499C4207455D5210408E58672A172F78CB14D739850711
02DFA93B6532> |-
/D <1C60D8A8C9B6079F62679EB6BE171B70F78590F81AB62F69F1BD2EFC86EA
E566847745E296D0CF61872DA4D8690C62AB23EE8E1DEB0EAD4BD93A2494CA75
9A81248BAF55E0D2E2E5FE71261287BF00F8CDF501793AB3272F80F7AE3E407C
A730AC3648B3AC2D58C8D1FD60CD7DB1F886A79A4080D8870256B6E127906D50
0379950803F077453028FB6169> |-
/N <1C60D8A8C9B6079FEBDAFCF29D322161AC3F52EDD22433113CAA67ECAF0B
056592AA81FE2842CB172B65A1B8C599C7080F0FEEDF52AD2A1E3DD4CF5B5A3A
BC5E3E3936B6025ECB4BBB9A6B9E506B790F934302A34C91233D5C7DD4480C8E
57FB7AE58D5F049C8795FEC67FB4BCA555E2CC51B9B80AEAE5214780F4B92D63
E63AE746DB94B9539BA648935E38> |-
/U <1C60D8A8C9B6079F6D024388243061A610EA3A6326F33263CDE8BCFFE9F1
48F3D7F4C9725D2BAF9A3232BD1EB145B5A77D8B0651FBD8E8A9FB06CCD2A8CC
2722C436D9102F6A183E894B34B7045CE7C217957AA9B87F4515C93092C44184
7223DE93B9E3D8ECF6C02AE8C75FDAA89CB34F7A7CE8EBAED7CDD0E6765B3952
A1A95E2E1735ECFE4DF6802DC3188EE398A9F5CCD7DB8E0B3AB2D84DF5AF6C30
AB040D323559946C1407613CE0866FB1002EF0B5DF66414A685DAD87F9D35138
11F878AD> |-
/bracketleft <1C60D8A8C9B81F2C3A069E97D4C1B29DA23BF51FA8AE87F396
9878E69D10DC348BAF69> |-
/bracketright <1C60D8A8C9B81F2C7D3B98BC3C6790041552B3C4749878E48
F0B17EDC12AFE367344> |-
/a <1C60D8A8C9B77FE2CEA139CB15A16492F485162FE605BA10F460B6DC550D
EC7BA0BCA1B89C8429260417FE96BA758C22F6762386C9F1CAF53456C89D4C6B
177AA810FBB608A57F053C4DA17FD8A122DD63CD2EE0563B0FFA48FEF5CBDB33
3E4EF010579993E238020BE59CA5D3F31F329BD506C436A3A2AAAB6CBD385FDB
0E5188BC3D34A31214C941C253FAF1F818F84A3F73340CA7F3B7A85C87022E70
BF3FF56918287082AAA1D7B6CDE998BE3D8663592D3F0DEFC69D87A351A29895
DE83B0D7478C3C01D85F944C563EFCF85986470E4B8EDEEDC025A0FB3217B737
B99EB7B6E2243F66B907475D1C465D1D07EDFEFC5123FE5A4D48A8B15BE3272E
F1EF1464C3F0D45D7CBB8749AF571E09> |-
/b <1C60D8A8C9B7A73DB90B311171EB67EB8746E2EC8FC994CCA7A632F7C7E8
F4A5D28D725796F2BC8526696060F460C892CC5686CD97F757C6EFB11E42DD9A
F110BE11F49DAEFA324F62E3046D4E2410C0923EDB87332B0381414594D39992
4398EF0A71772EF0EFEA72F5940C288418E4FCC7A2DE1E6A1AEA513FBDA0D660
3C38C9676D3489A418D7163D5E50FB679144E02901D98844D885CA3AAF379A83
F23AED1F56FC130F21> |-
/d <1C60D8A8C9B7A73DB9CAB5EAE520FF5085D357A7F1B1CBAAAB9D3C3D2030
65B58561B55699E1F852D974E24DCDB3FAC1151DF1DB63800C3FA779DDD3329A
86B4E9458DA578ECA7DC82AB1CB5558FB398EDD8AF237A44BB61AD8FF07FB857
EAFB03E3B7223E134D0A703B89A6CB54355CD1F1518C86E0EAFDD151579F5CCB
01DCDB1BD56096AB78D2E9ADD609F7B156D422E9074A62B38BF35F82A0AAD104
E0C2CB94DA5F3F39F8DB246ADB5F008F682AF80FAED0C691E7A618879362783A
36815EA1CE5876FAC4F83CDFE1BD4A> |-
/e <1C60D8A8C9B77FE2C19119FE019B929F076F8319E8913467AECA41BE2BEA
D3EC175346E3F888D3AD76D215AD69034A954DFD661ECBEA3B145468480B6A15
F5C865D2083DC0B04744AA76DE4CC9E0C9DBDCC2C59DAA00F28A6A47092C7FFA
0397DC47C5CBBA69AD805D3DD20D56411E92B0DE9E3F19C2FDEE1FA501318984
A59E1CFFFD06EA629758085868D3F5F7204292> |-
/g <1C60D8A8C9B7A73DAC44F2C448ECAF253E44055AA4AFC4D4E618BBF7F608
47F4AD57852D125F52503D138EEBB5C35DB7E6FF089D85EF3D59177D6853B7FF
4DCA48A2C6450DAF6AE7485D918680B6246955433B7E96C0D52B86F6985D93AE
A8FD99F7CE5A6EDF9F82F3DCD54C24AC7F5725E8D752728B16161496E9D02EA7
07BCC03E7CE1BDA2E3632B4A11707F59DF2FD8556EC51A6594DBA10EC63EB7A8
585255CC0C8C8B32CD6316A41829AE725CE606F4A4FD4DA668556D79F4AC25BF
9E697A5DB9F54B573E1EAA6D791100EAD10708C7E706E8CBDD596589510D4EA4
5E3CA12E8144CF2A4E025D5293F77BF25BA77276DF7C97999133B17612ABFFD7
0E77479B9C8ABBB3A51D3A6F6F66CA99610B1A23618D13E1A07B26D29ACFC819
1E5B2829F3C990A5C474E53FC8B282F11A7FFA86D56BD2349AEC811B22D30027
81921B9EDDEAA1B62C5F206266BA751F865F9A5F5AF517BC35F6F732012015D0
BB42652388A219FCF002C2C0335D2D190C0C425C4FA28367480051E56A90DD46
F1C707> |-
/i <1C60D8A8C9B854D0F4318DEB2BF4A8C14C2FAB601E0ED2FF31B9BA2C4F4D
9D824A65F9E753CDA6D59F3AE6B969EC176D4AA1F064BFADF6F4B6A5454B78F9
8C4B41AC403B87C0044C2A2776BF32D7D2C5370D6DB44827DB4719A169BBE365
B0C0BED49A30732BB5E35B7101E488713F0203C9161D1F92C48C80A640085090
E2C5D79817DC05EB1FC5E4D24EE71772E51241DF9FD4D574115CFC53427DCBCB
8CA3E9F85837FAC6> |-
/l <1C60D8A8C9B854D0F40B290C0C99C039EA88FDD293C1FEAB15D2F6B8C430
4B80428A9C9B5571B0EE47CC29A6D67DEE51ABBBE57F6DDF0C02037EE8B6828D
244FB880634A92D947174D08130E6E2CF978B5067AA82A4CABC55E600FCE5527
D6441CE02F5A28D63A618F> |-
/n <1C60D8A8C9B7A73DB913C38909CDA29FD53BC2807766C389AFB9ED86F7BC
81642DEC755C464ECEF36210D9B2C516FEA8C1248DF87B00C42E8B7B13BCCD9D
4DADECDD469C646397E88CF560CD28B02CAE7D1B9203699A1DE9CF796CD494DF
60582CAFD70B7F17C1569B79CFC1B11937F06CBBF98FB3F8ABA83215B2800261
30687B8B88299FC622B1B9C743E6B4E2D3E657B3D5566E1938323637D7929F2E
277006B7F4C91822AAA6911E494E2AD0998CB1FC1434E1920012738BB988F6A0
027198438FE663C2EACF82CEB86F7C727594> |-
/o <1C60D8A8C9B7A73DB903ADC070A7C49752E736186D1727D7954B8F3DD441
6250EFB2715F7FEA4B4F24611BB7B770A0989FFD12258A4EC0D90DD9998BDAF9
96A44DE027AE6C486FF30337F30EB574748A139900482713C8EF6F8455DA4367
02294DB22515A99C4ACC57A269598D687C25D5F66128E3441FE6E0D99B55B68D
9C19E720D771564C6692898D127FC55C985D08C7E6B95F874FD094> |-
/r <1C60D8A8C9B81F2C3A9916C4CB28F21023538C2A69D3E08B0A448624D2CE
6C19473DC07A6A4C3E0D8D2DFD7B9589F2461E064A251BFFB4F1472DE500E983
E2E667F5383BBA338778795701927E45FB048834AFB7FF5E045C79CAD4F90B53
A8A93629365ECF1B64B7916DE5DAB65845D9DB9B71D2B7B722597153CE4BA455
AAC1333D36087A511839B6E1301E787D03299ED6FB7E787777CDACC74EC37D8C
360275B503E4954E912CD342> |-
/s <1C60D8A8C9B7361F027554B74948DF9D509740193A97E4C5A946CCDAC22A
CE16A97A38CAF70766C30631C22477718670FA129F481BA880FC6C2A8C233A03
9A7A46ACD6F3CA0422B1CD13AB9E5980A98B78F274FD5FB0A519013427E3DF40
BD973F22C9B236BE3D27B0A78749138244A4ED344575D4F7F677439F8C2359FA
AB210EA03D2DAABF38A6B5B4F0819D6E85CC68A9859B12239E01058FD0C7C593
B22AC00DE1C2A90508610457C5DFEA41C78C4C677B338B4C0ED41B0474AF509B
93D8B3403DD443273DAE4F97B7CDCA81379AB0933639> |-
/t <1C60D8A8C9B854D0F414EAB29549463C152A8395E080F8A65050DED29448
713A9991EC80B85D2E40BC855D0C9C1C8F48B9F54A9F2AF77E5AE0CF2D93DC43
DDEECA57457D57C32A4E7F92D72E19B411BD6A8FD776B503B1ED0E4E775E798B
36CAB4543E392F481E83DAF858D3B1A895E3CC06AB3573C04543D9> |-
/u <1C60D8A8C9B7A73DB9860E0681DA8AEA1E5FBC1C72A452614FEB33CC58A1
99CCF544A550BDEE35652D618DE4A02AA9CF0753ADA232102DC8DC25CB958152
D1B74BC447B68C074C25C2126470565A20B42A419CDD0C7A1DA63C6A764D555B
867A9BE961ADBD0AF5B2007F47FCC9435F8B51D3F3A5D83941DD57A0C4D32E16
9A6BACC26F8AD3C9372F1114911D1D3F3FB2725FADBF9F529AA2CFB178B79F97
520325221F3417C7781EB09765> |-
/v <1C60D8A8C9B7A73DDA3AD4E30B5CCD7D3C12F7959C83D9C808662F1D2940
3E3640D88B6D61CC1EF17C120CDCE65E70C4FE9E153F8E52BB6A45EF1A33FF33
B350E779BE70BFD66B1893DAD63FDF011F2039FF0D075853D9D0E3D26BA0EDAE
DA247A4C2489AC431F6D923096DA608667B0FA6E60F963DA8A46029578956D98
258ABD433E9E> |-
/w <1C60D8A8C9B6079F04262E67C9FB6DFF2B2A2909EEE6C74AA460646E6418
023C6B7542892CB61B617E90DA8C58C94D261B2066526778FA77F05506A363FE
5266E7C038D05568B67F867A9FF97988CC575C0A7C1F4DE18568CA203BA52391
7E8148BF72D6E4FEA4245E4F8E144E9C4F6DDF7EC6DAC323FEA1568E1A6C8D85
26507DC2E91B066C274F65DD58F049FFA3E606BF021DDA3B6174F51DB721A6C7
E1197FF1898AE92ADB1C1DD84FD7DEC1> |-
/y <1C60D8A8C9B7A73DDE03E4B644C159EB8B647E016C26B087177A3C5BC5BA
F02161182070C8A4222C2E1ED9B95B756DF22232FA7BE5897B7C6D574795119A
3B50894B8B0E1A184B7636697D129D88C76A3FD42BABE719D85F7DC372AB50B8
B16D988DA863EE6A5B7454A406C9D5E815158A5786509E6DF27377A83F3454DD
6905EA3123CBA5BA0D4772C12767864CF2C5FEDE2AFF05D3CC0534D74E6AE9DB
F9F3B49677449A761BE771C9C1AB2D4DC994988233EE24B9E175796C6F13518A
71BC990F312D4821883A95164BCE1683B85434AFA8> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
reset_gvm
/NQHFPQ+TimesNewRomanPSMT /TimesNewRomanPSMT findfont ct_VMDictPut
/NQHFPQ+TimesNewRomanPSMT*1 
[32{/.notdef}rp /space 15{/.notdef}rp /zero /one /two /three /four 
3{/.notdef}rp /eight /.notdef /colon 6{/.notdef}rp /A 2{/.notdef}rp /D 
9{/.notdef}rp /N 6{/.notdef}rp /U 5{/.notdef}rp /bracketleft /.notdef /bracketright 
3{/.notdef}rp /a /b /.notdef /d /e /.notdef /g 
/.notdef /i 2{/.notdef}rp /l /.notdef /n /o 2{/.notdef}rp 
/r /s /t /u /v /w /.notdef /y 
134{/.notdef}rp]
NQHFPQ+TimesNewRomanPSMT nf
NQHFPQ+TimesNewRomanPSMT*1 [0 -10 -10 0 0 0 ]msf
10 546.71 mo
(Downloaded by [Australian National University] at 18:00 13 August 2014 )
[-7.21985 -4.99994 -7.21985 -5 -2.78003 -5 -4.43982 -5 -4.43988 -5 -2.5 -5 
-5 -2.5 -3.3299 -7.21985 -5 -3.88995 -2.77997 -3.32996 -4.43982 -2.78003 -2.77997 -4.43988 
-5 -2.5 -7.21985 -4.43982 -2.78003 -2.77997 -5 -5 -4.43988 -2.77997 -2.5 -7.21985 
-5 -2.78003 -5 -4.43982 -3.32996 -3.88989 -2.78003 -2.77997 -5 -3.32996 -2.5 -4.43982 
-2.78003 -2.5 -5 -5 -2.77997 -5 -5 -2.5 -5 -5 -2.5 -7.21985 
-5 -5 -5 -3.88995 -2.77997 -2.5 -5 -5 -5 -5 0 ]ysh
grestore
grestore
grestore
pgrs
%%PageTrailer
[
[/CSA [/0 ]]
[/CSD [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
showpage
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: *PageSize A4
%%DocumentProcessColors:  Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EOF
